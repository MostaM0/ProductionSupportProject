[
    {
        "@timestamp": "2024-08-22 05:26:53.802",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.799Z",
            "@version": "1",
            "message": "BAD_REQUEST:INVALID_USERNAME_OR_PASSWORD Your login details are incorrect. Access will be blocked after 3 invalid attempts. Please ensure correct information before try to logging in again.",
            "logger_name": "com.arbm.digibank.controller.CustomerIamServiceErrorHandler",
            "thread_name": "http-nio-8080-exec-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.796",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.793Z",
            "@version": "1",
            "message": "Handle PingOneApiException: PingOneApiException(statusCode=400, pingOneApiErrorResponse=PingOneApiErrorResponse(id=d86fb6e6-3ddf-4836-b593-96be7af24f8c, code=INVALID_DATA, message=The request could not be completed. One or more validation errors were in the request., details=[PingOneErrorDetail(code=INVALID_CREDENTIALS, target=null, message=Username and/or password is invalid, innerError=null)], error=null, errorDescription=null))",
            "logger_name": "com.arbm.digibank.controller.PingOneErrorHandler",
            "thread_name": "http-nio-8080-exec-10",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "d701b1cdb2af4fe7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.789",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.789Z",
            "@version": "1",
            "message": "Error in providing username/password for flowId: 09e76c63-17ec-4269-8052-f5bfa67b56b9",
            "logger_name": "com.arbm.digibank.service.PingOneVerifyUsernamePasswordService",
            "thread_name": "reactor-http-epoll-4",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.PingOneApiException: The request could not be completed. One or more validation errors were in the request.\n\tat com.arbm.digibank.service.PingOneServiceUtilsKt$createMonoErrorWithPingOneError$1.invoke(PingOneServiceUtils.kt:45)\n\tat com.arbm.digibank.service.PingOneServiceUtilsKt$createMonoErrorWithPingOneError$1.invoke(PingOneServiceUtils.kt:44)\n\tat com.arbm.digibank.service.PingOneServiceUtilsKt.createMonoErrorWithPingOneError$lambda$0(PingOneServiceUtils.kt:44)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:539)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:160)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:103)\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260)\n\tat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onComplete(ScopePassingSpanSubscriber.java:103)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)\n\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:400)\n\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:419)\n\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:473)\n\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:702)\n\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:113)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:336)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:308)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:280)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1373)\n\tat io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1236)\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1285)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:519)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:458)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:280)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:800)\n\tat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:499)\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:397)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "d701b1cdb2af4fe7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.422",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.421Z",
            "@version": "1",
            "message": "Verify Username/Password for request: VerifyUsernamePasswordRequest(flowId=09e76c63-17ec-4269-8052-f5bfa67b56b9, password=bvvgggkj, username=null)",
            "logger_name": "com.arbm.digibank.controller.PingOneVerifyUsernamePasswordController",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "d701b1cdb2af4fe7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.422",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.421Z",
            "@version": "1",
            "message": "[START] Provide username/password for environment: 32282aad-a4f2-46ae-a82d-9dd91739a966and request: VerifyUsernamePasswordRequest(flowId=09e76c63-17ec-4269-8052-f5bfa67b56b9, password=bvvgggkj, username=null)",
            "logger_name": "com.arbm.digibank.service.PingOneVerifyUsernamePasswordService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "d701b1cdb2af4fe7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.416",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.416Z",
            "@version": "1",
            "message": "cic: 1719326814162353, request=class InitialAuthorizationRequest {\n    usernameOrPingOneUserId: 2b7a815b-b78c-45ab-8f98-1baf11750389\n    mobilePayload: null\n    acrValues: [mobile_otp_approval]\n    scopes: [profile, customerid]\n    responseType: null\n    pingOneCookies: null\n    withoutMFA: null\n} response=class InitialAuthorizationResponse {\n    links: class Links {\n        self: class Link {\n            href: https://auth.pingone.asia/32282aad-a4f2-46ae-a82d-9dd91739a966/flows/09e76c63-17ec-4269-8052-f5bfa67b56b9\n        }\n        environment: null\n        population: null\n        devices: null\n        roleAssignments: null\n        password: null\n        passwordReset: null\n        passwordSet: null\n        passwordCheck: null\n        passwordRecover: null\n        passwordValidate: null\n        passwordPolicy: null\n        linkedAccounts: null\n        accountSendVerificationCode: null\n        memberOfGroups: null\n        user: null\n        usernamePasswordCheck: class Link {\n            href: https://auth.pingone.asia/32282aad-a4f2-46ae-a82d-9dd91739a966/flows/09e76c63-17ec-4269-8052-f5bfa67b56b9\n        }\n        otpCheck: null\n        deviceSelect: null\n        signOnPage: class Link {\n            href: https://apps.pingone.asia/32282aad-a4f2-46ae-a82d-9dd91739a966/signon/?flowId=09e76c63-17ec-4269-8052-f5bfa67b56b9\n        }\n        deviceReorder: null\n    }\n    embedded: class EmbeddedUserName {\n        devices: null\n        user: class UserName {\n            id: 2b7a815b-b78c-45ab-8f98-1baf11750389\n            username: null\n            name: null\n        }\n        application: class Application {\n            name: Digibank ARB\n        }\n    }\n    error: null\n    id: 09e76c63-17ec-4269-8052-f5bfa67b56b9\n    environment: class ID {\n        id: 32282aad-a4f2-46ae-a82d-9dd91739a966\n    }\n    resumeUrl: https://auth.pingone.asia/32282aad-a4f2-46ae-a82d-9dd91739a966/as/resume?flowId=09e76c63-17ec-4269-8052-f5bfa67b56b9\n    status: PASSWORD_REQUIRED\n    createdAt: 2024-08-22T05:26:53.356Z\n    expiresAt: 2024-08-22T05:41:53.356Z\n    bypassAllowed: null\n    selectedDevice: null\n}",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.416",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.416Z",
            "@version": "1",
            "message": "Verify username password: flowId=09e76c63-17ec-4269-8052-f5bfa67b56b9, username=null",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayAuthorizeServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.207",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.207Z",
            "@version": "1",
            "message": "Authorize for environment: 32282aad-a4f2-46ae-a82d-9dd91739a966",
            "logger_name": "com.arbm.digibank.service.PingOneAuthorizationService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "0083b33b6a7a0e54",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.206",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.206Z",
            "@version": "1",
            "message": "Initialize authorization for usernameOrPingOneUserId: 2b7a815b-b78c-45ab-8f98-1baf11750389",
            "logger_name": "com.arbm.digibank.service.PingOneAuthenticationService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "0083b33b6a7a0e54",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.202",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.2Z",
            "@version": "1",
            "message": "cic: 1719326814162353 | [isDeviceBounded]: deviceBounded=true",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.202",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.2Z",
            "@version": "1",
            "message": "prepareNonPairingAuthorizationRequest for cic: 1719326814162353",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.202",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.2Z",
            "@version": "1",
            "message": "Initialize Authorization: username=2b7a815b-b78c-45ab-8f98-1baf11750389, acr_values=[mobile_otp_approval], scopes=[profile, customerid], ",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayAuthorizeServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.201",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.2Z",
            "@version": "1",
            "message": "cic: 1719326814162353 | Fetching user details [fetchUserDetails]:  UserDetails(pingOneUserId=2b7a815b-b78c-45ab-8f98-1baf11750389, customerId=1719326814162353, environmentId=32282aad-a4f2-46ae-a82d-9dd91739a966, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.034",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.033Z",
            "@version": "1",
            "message": "PingOne onboarding / fetch existing user with username",
            "logger_name": "com.arbm.digibank.controller.PingOneUsersController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "c81ee6428a8277b8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.034",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.033Z",
            "@version": "1",
            "message": "Fetch user for username: mosta1111 and environment: 32282aad-a4f2-46ae-a82d-9dd91739a966",
            "logger_name": "com.arbm.digibank.service.PingOneFetchUserService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "c81ee6428a8277b8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.028",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.028Z",
            "@version": "1",
            "message": "Fetching user by username: username=mosta1111",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayUserFetchServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:53.028",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:53.028Z",
            "@version": "1",
            "message": "Call customer-iam-gateway to get worker access token",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayWorkerTokenServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:52.680",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:52.679Z",
            "@version": "1",
            "message": "PingOne onboarding / fetch existing user with username",
            "logger_name": "com.arbm.digibank.controller.PingOneUsersController",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "94e1e3726f67627f",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:52.680",
        "kubernetes.container_name": "customer-iam-gateway",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:52.68Z",
            "@version": "1",
            "message": "Fetch user for username: 065b3920-d4e7-4665-9d52-48697966d33d and environment: 32282aad-a4f2-46ae-a82d-9dd91739a966",
            "logger_name": "com.arbm.digibank.service.PingOneFetchUserService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-gateway",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "94e1e3726f67627f",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:52.671",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:52.67Z",
            "@version": "1",
            "message": "Fetching user by username: username=065b3920-d4e7-4665-9d52-48697966d33d",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayUserFetchServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:52.671",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:52.67Z",
            "@version": "1",
            "message": "Call customer-iam-gateway to get worker access token",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayWorkerTokenServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-08-22 05:26:52.670",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-08-22T05:26:52.67Z",
            "@version": "1",
            "message": "Login flow: username=065b3920-d4e7-4665-9d52-48697966d33d, loginRequest=InitializeLoginRequest(username=065b3920-d4e7-4665-9d52-48697966d33d, password=bvvgggkj, mobilePayload=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6ImY3YTQ3ZDZhLWY0YTUtNGIxZi1hNjVmLWNjYzEwMWYwNTkzMSJ9.eyJpc3MiOiI3NmFkOGI2My00ZTM1LTRjMDUtODMxMy1iMDRiNWE5Y2MwNWQiLCJmbnAiOiJkNjViZTZhYmJkMGM1NmUxIiwiZHZjIjoiZjdhNDdkNmEtZjRhNS00YjFmLWE2NWYtY2NjMTAxZjA1OTMxIiwiZXhwIjoxNzI0MzA0NTMxNDA3LCJqdGkiOiI3ZjBiOTI5MC03OGZhLTRiM2EtOWExZi0zN2JhNWI3YWU4MTMifQ.wAkYJZbhkmBPJK4tO9zNzJQUt3BEbe-IZSD1nawQP-69G034oEhzXAQ3k7__i0rtMOzMHMQqeYBThlVZdODPzkgt4fsCjajicwUBoAr8c9i1HE4H0xy0LhInjd1-vOyGB6SmQ1h1OjFKg2LaJi4aYpEYsjRwhpoRS0lrJ-U_rPBhaLY7k82SLfnhpr3hH1Cvafdmev4CZ0w6Lwj24wnrCENT32UGwJrBwCFmG7vq1IKkrRC2FvsnnZXwi7eQFqep3ZZuCLB2Xv4ort_K3nBnowWbdXk3-7yrAT-IsRL5xTLBZ72bahCHChWjv6jGziaT8D7_Thu-gFAWBZkoXesC6w, deviceMetadata=DeviceMetadata(deviceOs=Android 12 (SDK 31), deviceModel=Xiaomi Mi Note 10 Lite, applicationVersion=1.7.1.5601-googlePreProdDebug), users=[DeviceUser(id=2b7a815b-b78c-45ab-8f98-1baf11750389, environment=DeviceUserEnvironment(id=32282aad-a4f2-46ae-a82d-9dd91739a966))])",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "66c6cc1c7dabf0b87b25e7bc48e809e7",
            "spanId": "7b25e7bc48e809e7",
            "bc": "iamcustomer"
        }
    }
]