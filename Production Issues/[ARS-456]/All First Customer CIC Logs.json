[
    {
        "@timestamp": "2025-04-16 05:45:19.032",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:19.032Z",
            "@version": "1",
            "message": " prospect with id:b632d4b6-257d-4d73-ab71-b3ec845fdf4e deleted from pingone successfully",
            "logger_name": "com.arbm.digibank.service.customer.ProspectCustomerService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43ee247a2d6a185e66366ebb2f0e",
            "spanId": "2cd04841dac34328",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:45:18.871",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:18.871Z",
            "@version": "1",
            "message": "prospect with id:b632d4b6-257d-4d73-ab71-b3ec845fdf4e its overall status updated to ARCHIVED ",
            "logger_name": "com.arbm.digibank.service.customer.ProspectCustomerService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43ee247a2d6a185e66366ebb2f0e",
            "spanId": "2cd04841dac34328",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:45:18.868",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:18.868Z",
            "@version": "1",
            "message": "Check prospect customer with customerId =  b632d4b6-257d-4d73-ab71-b3ec845fdf4e ",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43ee8347649ca8329b6ddd5371a1",
            "spanId": "a8329b6ddd5371a1",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:45:14.386",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:14.386Z",
            "@version": "1",
            "message": "cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e, request=class InitialAuthorizationRequest {\n    usernameOrPingOneUserId: 64251e26-f320-493f-b8c8-f7d27c396bb1\n    mobilePayload: null\n    acrValues: [mobile_otp_approval]\n    scopes: [profile, customerid]\n    responseType: null\n    pingOneCookies: null\n    withoutMFA: null\n} response=class InitialAuthorizationResponse {\n    links: class Links {\n        self: class Link {\n            href: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/flows/09cb1ec3-15d6-4500-9dfe-e9ce3dcc90b2\n        }\n        environment: null\n        population: null\n        devices: null\n        roleAssignments: null\n        password: null\n        passwordReset: null\n        passwordSet: null\n        passwordCheck: null\n        passwordRecover: null\n        passwordValidate: null\n        passwordPolicy: null\n        linkedAccounts: null\n        accountSendVerificationCode: null\n        memberOfGroups: null\n        user: null\n        usernamePasswordCheck: class Link {\n            href: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/flows/09cb1ec3-15d6-4500-9dfe-e9ce3dcc90b2\n        }\n        otpCheck: null\n        deviceSelect: null\n        signOnPage: class Link {\n            href: https://apps.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/signon/?flowId=09cb1ec3-15d6-4500-9dfe-e9ce3dcc90b2\n        }\n        deviceReorder: null\n    }\n    embedded: class EmbeddedUserName {\n        devices: null\n        user: class UserName {\n            id: 64251e26-f320-493f-b8c8-f7d27c396bb1\n            username: null\n            name: null\n        }\n        application: class Application {\n            name: Digibank ARB\n        }\n    }\n    error: null\n    id: 09cb1ec3-15d6-4500-9dfe-e9ce3dcc90b2\n    environment: class ID {\n        id: 44e438c9-1f16-40ed-94fe-e4a18e19c517\n    }\n    resumeUrl: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/as/resume?flowId=09cb1ec3-15d6-4500-9dfe-e9ce3dcc90b2\n    status: PASSWORD_REQUIRED\n    createdAt: 2025-04-16T05:45:14.327Z\n    expiresAt: 2025-04-16T06:00:14.327Z\n    bypassAllowed: null\n    selectedDevice: null\n}",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43e94ad849ee41e3c38b606dc279",
            "spanId": "d314cbfc442a40c8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:45:14.183",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:14.183Z",
            "@version": "1",
            "message": "cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e | Fetching user details [fetchUserDetails]:  UserDetails(pingOneUserId=64251e26-f320-493f-b8c8-f7d27c396bb1, customerId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43e94ad849ee41e3c38b606dc279",
            "spanId": "d314cbfc442a40c8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:45:14.183",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:14.183Z",
            "@version": "1",
            "message": "cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e | [isDeviceBounded]: deviceBounded=true",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43e94ad849ee41e3c38b606dc279",
            "spanId": "d314cbfc442a40c8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:45:14.183",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:45:14.183Z",
            "@version": "1",
            "message": "prepareNonPairingAuthorizationRequest for cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43e94ad849ee41e3c38b606dc279",
            "spanId": "d314cbfc442a40c8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:52.808",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:52.752Z",
            "@version": "1",
            "message": "cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e, request=class InitialAuthorizationRequest {\n    usernameOrPingOneUserId: 64251e26-f320-493f-b8c8-f7d27c396bb1\n    mobilePayload: null\n    acrValues: [mobile_otp_approval]\n    scopes: [profile, customerid]\n    responseType: null\n    pingOneCookies: null\n    withoutMFA: null\n} response=class InitialAuthorizationResponse {\n    links: class Links {\n        self: class Link {\n            href: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/flows/0990c1c2-dedb-4aad-bac5-a79230467948\n        }\n        environment: null\n        population: null\n        devices: null\n        roleAssignments: null\n        password: null\n        passwordReset: null\n        passwordSet: null\n        passwordCheck: null\n        passwordRecover: null\n        passwordValidate: null\n        passwordPolicy: null\n        linkedAccounts: null\n        accountSendVerificationCode: null\n        memberOfGroups: null\n        user: null\n        usernamePasswordCheck: class Link {\n            href: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/flows/0990c1c2-dedb-4aad-bac5-a79230467948\n        }\n        otpCheck: null\n        deviceSelect: null\n        signOnPage: class Link {\n            href: https://apps.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/signon/?flowId=0990c1c2-dedb-4aad-bac5-a79230467948\n        }\n        deviceReorder: null\n    }\n    embedded: class EmbeddedUserName {\n        devices: null\n        user: class UserName {\n            id: 64251e26-f320-493f-b8c8-f7d27c396bb1\n            username: null\n            name: null\n        }\n        application: class Application {\n            name: Digibank ARB\n        }\n    }\n    error: null\n    id: 0990c1c2-dedb-4aad-bac5-a79230467948\n    environment: class ID {\n        id: 44e438c9-1f16-40ed-94fe-e4a18e19c517\n    }\n    resumeUrl: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/as/resume?flowId=0990c1c2-dedb-4aad-bac5-a79230467948\n    status: PASSWORD_REQUIRED\n    createdAt: 2025-04-16T05:44:52.695Z\n    expiresAt: 2025-04-16T05:59:52.695Z\n    bypassAllowed: null\n    selectedDevice: null\n}",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43d4161f9ac701f6f0136a6a9db6",
            "spanId": "1a46376259f921a8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:52.555",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:52.555Z",
            "@version": "1",
            "message": "cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e | Fetching user details [fetchUserDetails]:  UserDetails(pingOneUserId=64251e26-f320-493f-b8c8-f7d27c396bb1, customerId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43d4161f9ac701f6f0136a6a9db6",
            "spanId": "1a46376259f921a8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:52.555",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:52.555Z",
            "@version": "1",
            "message": "cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e | [isDeviceBounded]: deviceBounded=true",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43d4161f9ac701f6f0136a6a9db6",
            "spanId": "1a46376259f921a8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:52.555",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:52.555Z",
            "@version": "1",
            "message": "prepareNonPairingAuthorizationRequest for cic: b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "67ff43d4161f9ac701f6f0136a6a9db6",
            "spanId": "1a46376259f921a8",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:44.681",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:43.471Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2025-04-16T05:44:17.652Z\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2025-04-16T05:44:17.652Z\", \"clientIp\": null, \"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"merchantScanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null, \"LivenessStatus\": \"NONE\"}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor266.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$4067eb9.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$2c1ee2bb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "d655a9797d29eaeb",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:35.345",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:35.345Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2025-04-16T05:44:17.652Z\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2025-04-16T05:44:17.652Z\", \"clientIp\": null, \"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"merchantScanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null, \"LivenessStatus\": \"NONE\"}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "d655a9797d29eaeb",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:35.343",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:35.343Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor266.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$4067eb9.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$2c1ee2bb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:35.141",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:35.141Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2025-04-16T05:44:17.652Z\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2025-04-16T05:44:17.652Z\", \"clientIp\": null, \"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"merchantScanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null, \"LivenessStatus\": \"NONE\"}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor266.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$4067eb9.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$2c1ee2bb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "9df6203b1df6b318",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:33.006",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:33.006Z",
            "@version": "1",
            "message": "Check prospect customer with customerId =  b632d4b6-257d-4d73-ab71-b3ec845fdf4e ",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43c1f5dcdc00229b043ef5224a59",
            "spanId": "229b043ef5224a59",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:31.944",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2025-04-16T05:44:31.944] [INFO] [apollo-server,,] default - Microservice response: {\"secureword\":\"*HIDDEN*\",\"nickname\":\"Zalina \",\"cic\":\"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"}"
    },
    {
        "@timestamp": "2025-04-16 05:44:31.944",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2025-04-16T05:44:31.944] [INFO] [apollo-server,,] default - {\"http\":{\"headers\":{}},\"data\":{\"getUserSecureWord\":{\"secureword\":\"*HIDDEN*\",\"nickname\":\"Zalina \",\"cic\":\"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\",\"isDemoAccount\":false}}}"
    },
    {
        "@timestamp": "2025-04-16 05:44:31.895",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:31.895Z",
            "@version": "1",
            "message": "Get customer lazy b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43bfb1f15bfe1ece019d12bb5436",
            "spanId": "4a779c929f7e8f06",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:27.015",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:27.015Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2025-04-16T05:44:17.652Z\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2025-04-16T05:44:17.652Z\", \"clientIp\": null, \"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"merchantScanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null, \"LivenessStatus\": \"NONE\"}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "9df6203b1df6b318",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:27.013",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:27.013Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor266.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$4067eb9.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$2c1ee2bb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:26.912",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:26.911Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2025-04-16T05:44:17.652Z\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2025-04-16T05:44:17.652Z\", \"clientIp\": null, \"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"merchantScanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null, \"LivenessStatus\": \"NONE\"}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor266.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$4067eb9.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$2c1ee2bb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "f765cc9fa4e22696",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:21.879",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:21.879Z",
            "@version": "1",
            "message": "Customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e statuses will be changed to {\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2025-04-16T05:44:19.243Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b320709125c5f84e299592167a",
            "spanId": "a495e3b3a00bc75b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:21.580",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:21.58Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor511.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ecd82df0.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:21.377",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:21.377Z",
            "@version": "1",
            "message": "Customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e statuses will be changed to {\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2025-04-16T05:44:19.243Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b320709125c5f84e299592167a",
            "spanId": "7d0131a84ea59d94",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:20.976",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:20.975Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor511.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ecd82df0.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:20.874",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:20.874Z",
            "@version": "1",
            "message": "Customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e statuses will be changed to {\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2025-04-16T05:44:19.243Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b320709125c5f84e299592167a",
            "spanId": "0796d9d628928713",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:20.331",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:20.33Z",
            "@version": "1",
            "message": "Customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e statuses will be changed to {\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2025-04-16T05:44:19.238Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b33f342bddf35dac30144485b0",
            "spanId": "0d11144e6b8bdeb1",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:20.030",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:20.03Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor511.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ecd82df0.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.828",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.828Z",
            "@version": "1",
            "message": "Customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e statuses will be changed to {\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2025-04-16T05:44:19.238Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b33f342bddf35dac30144485b0",
            "spanId": "2c8bd8625e2227d8",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.523",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.523Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_CALLBACK , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.520",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_CALLBACK>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2025-04-16 05:44:19.517",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.517Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_SCANNING , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.514",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2025-04-16 05:44:19.511",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.51Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2025-04-16T05:44:19.510828Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.510",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.51Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2025-04-16T05:44:19.510055Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.510",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.51Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2025-04-16T05:44:19.510495Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.495",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.495Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2025-04-16T05:44:19.495643Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b3f05f97a4cf8ea641c87fc796",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.489",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.489Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = b632d4b6-257d-4d73-ab71-b3ec845fdf4e is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b3f05f97a4cf8ea641c87fc796",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.489",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.489Z",
            "@version": "1",
            "message": "The received scanReferenceId(3c68d723-0a26-4b67-ae0b-9adac3cbbe98) for the prospect customer with id b632d4b6-257d-4d73-ab71-b3ec845fdf4e  was Rejected by Jumio callback and the Identity verification process for MYKAD flow will be restarted again from the beginning to scan MYKAD",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b3f05f97a4cf8ea641c87fc796",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.461",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.461Z",
            "@version": "1",
            "message": "Started updating Jumio Callback Step status for prospectCustomerId = b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b3f05f97a4cf8ea641c87fc796",
            "spanId": "be66ea7f1c7e1214",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.427",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.426Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"; nested exception is java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor511.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ecd82df0.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.391",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.39Z",
            "@version": "1",
            "message": "Prospect Customer with prospectId(b632d4b6-257d-4d73-ab71-b3ec845fdf4e) identity-verification-result received ({\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.consumer.CustomerIdentityVerificationResultConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b3f05f97a4cf8ea641c87fc796",
            "spanId": "d4fd7a09c8251a3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.391",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.391Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after receiving verification-result from 'customerIdentityService' after applying verification rules on JUMIO call back for the prospect customer with id b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b3f05f97a4cf8ea641c87fc796",
            "spanId": "d4fd7a09c8251a3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.377",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.377Z",
            "@version": "1",
            "message": "Step 1: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(3c68d723-0a26-4b67-ae0b-9adac3cbbe98), for customerId(b632d4b6-257d-4d73-ab71-b3ec845fdf4e) with event({\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.377",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.377Z",
            "@version": "1",
            "message": "Step 2: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(3c68d723-0a26-4b67-ae0b-9adac3cbbe98), for customerId(b632d4b6-257d-4d73-ab71-b3ec845fdf4e) with record(ProducerRecord(topic=onboarding.customer-identity-service.ekyc-result.v3, partition=null, headers=RecordHeaders(headers = [RecordHeader(key = kafka_messageKey, value = [51, 99, 54, 56, 100, 55, 50, 51, 45, 48, 97, 50, 54, 45, 52, 98, 54, 55, 45, 97, 101, 48, 98, 45, 57, 97, 100, 97, 99, 51, 99, 98, 98, 101, 57, 56])], isReadOnly = false), key=3c68d723-0a26-4b67-ae0b-9adac3cbbe98, value={\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"}, timestamp=null))",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.325",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.325Z",
            "@version": "1",
            "message": "Customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e statuses will be changed to {\"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2025-04-16T05:44:19.238Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b33f342bddf35dac30144485b0",
            "spanId": "8dd893d40e3493ba",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.048",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.048Z",
            "@version": "1",
            "message": "Get the notification template name UNSUCCESSFUL_ONBOARDING, for customer b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.NotificationTemplateService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "67ff43b2f0ead91ee911e1b1d09806e4",
            "spanId": "4ec006b556290cc0",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.048",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.048Z",
            "@version": "1",
            "message": "Notification Entity:  NotificationsEntity(notificationId=e74fd470-2749-40fc-b022-0401984d1c8f, customerId=b632d4b6-257d-4d73-ab71-b3ec845fdf4e, content=Please reach out to our Customer Care team at 1800 81 9149., header=Sorry! Your onboarding is unsuccessful., isRead=false, internalNotifId=null, isDeleted=false) ",
            "logger_name": "com.arbm.digibank.service.NotificationOnesignalService",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.030",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.03Z",
            "@version": "1",
            "message": "Get devices for customerId: b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b326347ebfe22bc82d713f6b04",
            "spanId": "e22bc82d713f6b04",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.029",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.029Z",
            "@version": "1",
            "message": "consumeCreateSilentNotificationCommand, notificationId: null, customerId: b632d4b6-257d-4d73-ab71-b3ec845fdf4e, ttl: 86400",
            "logger_name": "com.arbm.digibank.processor.CreateSilentNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "67ff43b2703dbfca0e1cb2d2773810dd",
            "spanId": "0ee677a0f5a8af8b",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.029",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.029Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [b632d4b6-257d-4d73-ab71-b3ec845fdf4e]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "67ff43b2703dbfca0e1cb2d2773810dd",
            "spanId": "0ee677a0f5a8af8b",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.008",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.007Z",
            "@version": "1",
            "message": "Get devices for customerId: b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "67ff43b3fe123af5c2e13a042cfdcfc8",
            "spanId": "c2e13a042cfdcfc8",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.005",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.005Z",
            "@version": "1",
            "message": "consumeCreateNotificationCommand, notificationId: null, customerId: b632d4b6-257d-4d73-ab71-b3ec845fdf4e, templateName: UNSUCCESSFUL_ONBOARDING",
            "logger_name": "com.arbm.digibank.processor.CreateNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "67ff43b2f0ead91ee911e1b1d09806e4",
            "spanId": "4ec006b556290cc0",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:19.005",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:19.005Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [b632d4b6-257d-4d73-ab71-b3ec845fdf4e]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "67ff43b2f0ead91ee911e1b1d09806e4",
            "spanId": "4ec006b556290cc0",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:18.783",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:18.783Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2025-04-16T05:44:17.652Z\", \"scanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2025-04-16T05:44:17.652Z\", \"clientIp\": null, \"customerId\": \"b632d4b6-257d-4d73-ab71-b3ec845fdf4e\", \"merchantScanReference\": \"3c68d723-0a26-4b67-ae0b-9adac3cbbe98\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null, \"LivenessStatus\": \"NONE\"}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "f765cc9fa4e22696",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:18.757",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:18.756Z",
            "@version": "1",
            "message": "Jumio retrieval data after callback for -> account id = c2edc84d-37c1-4e55-8e1e-740a3d87d562 , customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , workflowExecutionId = 3c68d723-0a26-4b67-ae0b-9adac3cbbe98 , retrievalData = JumioV4Response(account=AccountResponse(id=c2edc84d-37c1-4e55-8e1e-740a3d87d562, href=null), workflow=WorkflowExecutionResponse(definitionKey=10032, status=PROCESSED, userReference=b632d4b6-257d-4d73-ab71-b3ec845fdf4e, customerInternalReference=b632d4b6-257d-4d73-ab71-b3ec845fdf4e), createdAt=2025-04-16T05:38:55.298Z, startedAt=2025-04-16T05:43:19.694Z, completedAt=2025-04-16T05:44:17.652Z, credentials=[Credentials(id=fdf3de36-9850-4c2c-895d-b5f4bcd23da2, category=FACEMAP, parts=[CredentialsPart(classifier=LIVENESS_1, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_1), CredentialsPart(classifier=LIVENESS_3, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_3), CredentialsPart(classifier=LIVENESS_2, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_2), CredentialsPart(classifier=LIVENESS_5, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_5), CredentialsPart(classifier=LIVENESS_4, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_4), CredentialsPart(classifier=LIVENESS_7, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_7), CredentialsPart(classifier=LIVENESS_6, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/fdf3de36-9850-4c2c-895d-b5f4bcd23da2/parts/LIVENESS_6)]), Credentials(id=4f95a7ce-690c-4ad0-b7c0-b0875b459620, category=ID, parts=[CredentialsPart(classifier=FRONT, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/4f95a7ce-690c-4ad0-b7c0-b0875b459620/parts/FRONT), CredentialsPart(classifier=BACK, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/4f95a7ce-690c-4ad0-b7c0-b0875b459620/parts/BACK)]), Credentials(id=877e582e-911e-43c4-9de6-ce7d4d63d0bd, category=SELFIE, parts=[CredentialsPart(classifier=FACE, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/credentials/877e582e-911e-43c4-9de6-ce7d4d63d0bd/parts/FACE)])], decision=Decision(risk=Risk(score=100.0), type=REJECTED, details=DecisionDetails(label=REJECTED)), steps=Step(href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562/workflow-executions/3c68d723-0a26-4b67-ae0b-9adac3cbbe98/steps), capabilities=Capabilities(usability=[CapabilitiesElement(id=9d6caa81-4be5-408e-9458-190a954a3dde, credentials=[CapabilitiesCredentials(id=877e582e-911e-43c4-9de6-ce7d4d63d0bd, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=edee92ac-573f-4b15-8ea6-1925f5665daf, credentials=[CapabilitiesCredentials(id=fdf3de36-9850-4c2c-895d-b5f4bcd23da2, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=f2da7b21-66d7-4724-8864-fca134a952a9, credentials=[CapabilitiesCredentials(id=4f95a7ce-690c-4ad0-b7c0-b0875b459620, category=ID)], decision=CapabilitiesDecision(type=REJECTED, details=CapabilitiesDecisionDetails(label=BAD_QUALITY_IMAGE)))], liveness=[Liveness(id=0cbc87b1-fade-426c-8cf1-fa8a6dd03223, credentials=[CapabilitiesCredentials(id=fdf3de36-9850-4c2c-895d-b5f4bcd23da2, category=FACEMAP), CapabilitiesCredentials(id=877e582e-911e-43c4-9de6-ce7d4d63d0bd, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)), data=LivenessData(type=JUMIO_STANDARD, predictedAge=47, ageConfidenceRange=30-73, validFaceMapForAuthentication=null))], similarity=[Similarity(id=dfd3107a-7717-4756-b471-af38797e8167, credentials=[CapabilitiesCredentials(id=4f95a7ce-690c-4ad0-b7c0-b0875b459620, category=ID), CapabilitiesCredentials(id=877e582e-911e-43c4-9de6-ce7d4d63d0bd, category=SELFIE)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=SimiliarityData(similarity=null))], authentication=[], imageChecks=[ImageChecks(id=e890e71d-2a55-4dba-94f2-ba4a12e424af, credentials=[CapabilitiesCredentials(id=4f95a7ce-690c-4ad0-b7c0-b0875b459620, category=ID), CapabilitiesCredentials(id=877e582e-911e-43c4-9de6-ce7d4d63d0bd, category=SELFIE)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), faceSearchFindingsItem=null)], extraction=[Extraction(id=20ce6a51-5c74-43a3-9c68-aa38d5cc4a6b, credentials=[CapabilitiesCredentials(id=4f95a7ce-690c-4ad0-b7c0-b0875b459620, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=ExtractionData(type=null, subType=null, issuingCountry=null, firstName=null, lastName=null, dateOfBirth=null, expiryDate=null, issuingDate=null, documentNumber=null, state=null, personalNumber=null, optionalMrzField1=null, optionalMrzField2=null, address=null, issuingAuthority=null, issuingPlace=null, curp=null, gender=null, nationality=null, placeOfBirth=null, taxNumber=null, cpf=null, registrationNumber=null, mothersName=null, fathersName=null, personalIdentificationNumber=null, rgNumber=null, documentIdentificationNumber=null, citizenship=null, religion=null, maritialStatus=null, currentAge=null, lastNameAtBirth=null, remarks=null, disability=null))], dataChecks=[CapabilitiesElement(id=1509fed7-a699-4d33-a426-c7d6bf13c615, credentials=[CapabilitiesCredentials(id=4f95a7ce-690c-4ad0-b7c0-b0875b459620, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)))], watchlistScreening=[], addressValidation=[], proofOfResidency=[], drivingLicenseVerification=[], braCpfValidation=[], biometricVerification=[]))",
            "logger_name": "com.arbm.digibank.service.JumioV4CallbackService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "44c76ea6b68bd6ef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:44:18.510",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:44:18.51Z",
            "@version": "1",
            "message": "Jumio V4 callback data: JumioV4Callback(callbackSentAt=2025-04-16T05:44:18.475Z, userReference='b632d4b6-257d-4d73-ab71-b3ec845fdf4e', workflowExecution=WorkflowExecution(id='3c68d723-0a26-4b67-ae0b-9adac3cbbe98', href=https://retrieval.apac-1.jumio.ai/api/v1/workflow-executions/3c68d723-0a26-4b67-ae0b-9adac3cbbe98, definitionKey=10032, status=PROCESSED), account=Account(id='c2edc84d-37c1-4e55-8e1e-740a3d87d562', href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/c2edc84d-37c1-4e55-8e1e-740a3d87d562))",
            "logger_name": "com.arbm.digibank.controller.JumioV4CallbackController",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "67ff43b27f5eb35131f0418c67dba605",
            "spanId": "44c76ea6b68bd6ef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:53.928",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:53.927Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = b632d4b6-257d-4d73-ab71-b3ec845fdf4e is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43995a6c890449e8077e49fbfd7e",
            "spanId": "30e70f2ed32d5389",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:53.926",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:53.925Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff43995a6c890449e8077e49fbfd7e",
            "spanId": "30e70f2ed32d5389",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:24.708",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:23.164Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff437b2f374f6a452718382aff4e45",
            "spanId": "5697d594b9f14aab",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:24.708",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:23.197Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = b632d4b6-257d-4d73-ab71-b3ec845fdf4e is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff437b2f374f6a452718382aff4e45",
            "spanId": "5697d594b9f14aab",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:24.708",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2025-04-16 05:43:24.708",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:23.204Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = b632d4b6-257d-4d73-ab71-b3ec845fdf4e , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2025-04-16T05:43:23.204099Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff437b2f374f6a452718382aff4e45",
            "spanId": "5697d594b9f14aab",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:24.708",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:23.553Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: b632d4b6-257d-4d73-ab71-b3ec845fdf4e",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff437b18aad20922ffadce12b0f498",
            "spanId": "4ad24e840c5d4484",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2025-04-16 05:43:24.708",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2025-04-16T05:43:23.554Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = b632d4b6-257d-4d73-ab71-b3ec845fdf4e is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "67ff437b18aad20922ffadce12b0f498",
            "spanId": "4ad24e840c5d4484",
            "bc": "customers"
        }
    }
]