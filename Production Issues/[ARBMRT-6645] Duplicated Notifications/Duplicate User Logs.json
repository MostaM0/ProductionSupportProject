[
    {
        "@timestamp": "2024-11-21 02:24:42.684",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:42.629Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-11-21T02:24:16.830Z\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:24:16.830Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor435.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "b448f38f47423cb9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:34.499",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:34.499Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-11-21T02:24:16.830Z\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:24:16.830Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "b448f38f47423cb9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:34.498",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:34.497Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor435.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:34.296",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:34.296Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-11-21T02:24:16.830Z\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:24:16.830Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor435.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "74b3dc2ee98b8ff2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.562",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:26.064Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-11-21T02:24:16.830Z\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:24:16.830Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor435.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "7407533fa879c72b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.562",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:26.165Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor435.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.562",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:26.167Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-11-21T02:24:16.830Z\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:24:16.830Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "74b3dc2ee98b8ff2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.534",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.433Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.342Z",
            "@version": "1",
            "message": "Prospect Customer with prospectId(f66bea1f-7618-4b36-95ae-7aac367c1758) identity-verification-result received ({\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.consumer.CustomerIdentityVerificationResultConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d28cb3d1ca64e45d2ad7a023b5",
            "spanId": "623c55061b21ebb3",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.342Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after receiving verification-result from 'customerIdentityService' after applying verification rules on JUMIO call back for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d28cb3d1ca64e45d2ad7a023b5",
            "spanId": "623c55061b21ebb3",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.392Z",
            "@version": "1",
            "message": "Started updating Jumio Callback Step status for prospectCustomerId = f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d28cb3d1ca64e45d2ad7a023b5",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.417Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d28cb3d1ca64e45d2ad7a023b5",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.417Z",
            "@version": "1",
            "message": "The received scanReferenceId(17b2af9e-e470-4b8a-ace0-7567268b3caa) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758  was Rejected by Jumio callback and the Identity verification process for MYKAD flow will be restarted again from the beginning to scan MYKAD",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d28cb3d1ca64e45d2ad7a023b5",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.422Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2024-11-21T02:24:18.422114Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d28cb3d1ca64e45d2ad7a023b5",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.423Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2024-11-21T02:24:18.423603Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.423Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2024-11-21T02:24:18.423854Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.424Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2024-11-21T02:24:18.424031Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.428Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "9fbff5ca892239b2",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:27.533",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:24:20.323",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:20.323Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-11-21T02:24:18.212Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d2484b5a3cc007285c3c6fb1d3",
            "spanId": "6e8c2659c9bd5c44",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:20.024",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:20.023Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:19.822",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:19.821Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-11-21T02:24:18.212Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d2484b5a3cc007285c3c6fb1d3",
            "spanId": "2e5fca556ca5620b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:19.422",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:19.422Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:19.321",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:19.32Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-11-21T02:24:18.212Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d2484b5a3cc007285c3c6fb1d3",
            "spanId": "e89f3a50a65288b1",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.820",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.819Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-11-21T02:24:18.211Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d2cc4640631a3effd2e2c06fb8",
            "spanId": "79e8d34324db9957",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.521",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.521Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.338",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.338Z",
            "@version": "1",
            "message": "Step 1: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(17b2af9e-e470-4b8a-ace0-7567268b3caa), for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758) with event({\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.338",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.338Z",
            "@version": "1",
            "message": "Step 2: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(17b2af9e-e470-4b8a-ace0-7567268b3caa), for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758) with record(ProducerRecord(topic=onboarding.customer-identity-service.ekyc-result.v3, partition=null, headers=RecordHeaders(headers = [RecordHeader(key = kafka_messageKey, value = [49, 55, 98, 50, 97, 102, 57, 101, 45, 101, 52, 55, 48, 45, 52, 98, 56, 97, 45, 97, 99, 101, 48, 45, 55, 53, 54, 55, 50, 54, 56, 98, 51, 99, 97, 97])], isReadOnly = false), key=17b2af9e-e470-4b8a-ace0-7567268b3caa, value={\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"}, timestamp=null))",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.318",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.318Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-11-21T02:24:18.211Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d2cc4640631a3effd2e2c06fb8",
            "spanId": "944ed0df2060ae4d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.317",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.317Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:18.215",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:18.215Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-11-21T02:24:18.211Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d2cc4640631a3effd2e2c06fb8",
            "spanId": "64be79a7746b8869",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.978",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.978Z",
            "@version": "1",
            "message": "Notification Entity:  NotificationsEntity(notificationId=e7309e37-ae33-47f3-92bd-de3c1127a1d1, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, content=Please reach out to our Customer Care team at 1800 81 9149., header=Sorry! Your onboarding is unsuccessful., isRead=false, internalNotifId=null, isDeleted=false) ",
            "logger_name": "com.arbm.digibank.service.NotificationOnesignalService",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.977",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.977Z",
            "@version": "1",
            "message": "Get the notification template name UNSUCCESSFUL_ONBOARDING, for customer f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.NotificationTemplateService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e99d1020e79b45863dfad2e8f9fdd",
            "spanId": "e7a89898060468b0",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.943",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.942Z",
            "@version": "1",
            "message": "Get devices for customerId: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d123ddea45484ec893b0ac1ae5",
            "spanId": "484ec893b0ac1ae5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.941",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.941Z",
            "@version": "1",
            "message": "Get devices for customerId: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e99d1725ad5eefce0d76f1b46da1b",
            "spanId": "fce0d76f1b46da1b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.941",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.941Z",
            "@version": "1",
            "message": "consumeCreateSilentNotificationCommand, notificationId: null, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758, ttl: 86400",
            "logger_name": "com.arbm.digibank.processor.CreateSilentNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e99d1cc35e46e96c71855e80ffdde",
            "spanId": "154f17180168afa1",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.941",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.941Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [f66bea1f-7618-4b36-95ae-7aac367c1758]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e99d1cc35e46e96c71855e80ffdde",
            "spanId": "154f17180168afa1",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.939",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.939Z",
            "@version": "1",
            "message": "consumeCreateNotificationCommand, notificationId: null, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758, templateName: UNSUCCESSFUL_ONBOARDING",
            "logger_name": "com.arbm.digibank.processor.CreateNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e99d1020e79b45863dfad2e8f9fdd",
            "spanId": "e7a89898060468b0",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.939",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.939Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [f66bea1f-7618-4b36-95ae-7aac367c1758]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e99d1020e79b45863dfad2e8f9fdd",
            "spanId": "e7a89898060468b0",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.934",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.934Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-11-21T02:24:16.830Z\", \"scanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:24:16.830Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"17b2af9e-e470-4b8a-ace0-7567268b3caa\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "7407533fa879c72b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.927",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.926Z",
            "@version": "1",
            "message": "Jumio retrieval data after callback for -> account id = 9eca405b-b88c-4028-af89-d57eb3d67d5c , customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , workflowExecutionId = 17b2af9e-e470-4b8a-ace0-7567268b3caa , retrievalData = JumioV4Response(account=AccountResponse(id=9eca405b-b88c-4028-af89-d57eb3d67d5c, href=null), workflow=WorkflowExecutionResponse(definitionKey=10032, status=PROCESSED, userReference=f66bea1f-7618-4b36-95ae-7aac367c1758, customerInternalReference=f66bea1f-7618-4b36-95ae-7aac367c1758), createdAt=2024-11-21T02:22:09.734Z, startedAt=2024-11-21T02:23:32.497Z, completedAt=2024-11-21T02:24:16.830Z, credentials=[Credentials(id=c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4, category=ID, parts=[CredentialsPart(classifier=FRONT, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4/parts/FRONT), CredentialsPart(classifier=BACK, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4/parts/BACK)]), Credentials(id=28a70895-f429-45b1-8b1c-c4a7d7149604, category=SELFIE, parts=[CredentialsPart(classifier=FACE, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/28a70895-f429-45b1-8b1c-c4a7d7149604/parts/FACE)]), Credentials(id=72d2288f-2fe8-4256-9ebf-b84b6f37e668, category=FACEMAP, parts=[CredentialsPart(classifier=FACEMAP, href=null), CredentialsPart(classifier=LIVENESS_1, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/72d2288f-2fe8-4256-9ebf-b84b6f37e668/parts/LIVENESS_1), CredentialsPart(classifier=LIVENESS_3, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/72d2288f-2fe8-4256-9ebf-b84b6f37e668/parts/LIVENESS_3), CredentialsPart(classifier=LIVENESS_2, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/72d2288f-2fe8-4256-9ebf-b84b6f37e668/parts/LIVENESS_2), CredentialsPart(classifier=LIVENESS_5, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/72d2288f-2fe8-4256-9ebf-b84b6f37e668/parts/LIVENESS_5), CredentialsPart(classifier=LIVENESS_4, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/72d2288f-2fe8-4256-9ebf-b84b6f37e668/parts/LIVENESS_4), CredentialsPart(classifier=LIVENESS_6, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/72d2288f-2fe8-4256-9ebf-b84b6f37e668/parts/LIVENESS_6)])], decision=Decision(risk=Risk(score=100.0), type=REJECTED, details=DecisionDetails(label=REJECTED)), steps=Step(href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/workflow-executions/17b2af9e-e470-4b8a-ace0-7567268b3caa/steps), capabilities=Capabilities(usability=[CapabilitiesElement(id=3708546f-5117-45fc-bcf0-dc5a13155ca5, credentials=[CapabilitiesCredentials(id=72d2288f-2fe8-4256-9ebf-b84b6f37e668, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=97ae3b7d-e994-418f-8e59-d6ba0ba8d3f3, credentials=[CapabilitiesCredentials(id=c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4, category=ID)], decision=CapabilitiesDecision(type=REJECTED, details=CapabilitiesDecisionDetails(label=BAD_QUALITY_IMAGE))), CapabilitiesElement(id=a1023f85-7995-4013-a734-d13e67e753d9, credentials=[CapabilitiesCredentials(id=28a70895-f429-45b1-8b1c-c4a7d7149604, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)))], liveness=[Liveness(id=f68417c3-fe45-449b-85da-4267509d9135, credentials=[CapabilitiesCredentials(id=28a70895-f429-45b1-8b1c-c4a7d7149604, category=SELFIE), CapabilitiesCredentials(id=72d2288f-2fe8-4256-9ebf-b84b6f37e668, category=FACEMAP)], decision=CapabilitiesDecision(type=REJECTED, details=CapabilitiesDecisionDetails(label=FACE_NOT_FULLY_VISIBLE)), data=LivenessData(type=JUMIO_STANDARD, predictedAge=47, ageConfidenceRange=33-69, validFaceMapForAuthentication=null))], similarity=[Similarity(id=70511fba-33af-488a-9203-89473e5882e1, credentials=[CapabilitiesCredentials(id=c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4, category=ID), CapabilitiesCredentials(id=28a70895-f429-45b1-8b1c-c4a7d7149604, category=SELFIE)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=SimiliarityData(similarity=null))], authentication=[], imageChecks=[ImageChecks(id=00d7a93f-4afd-4465-b097-4ebebc2c2b26, credentials=[CapabilitiesCredentials(id=c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4, category=ID), CapabilitiesCredentials(id=28a70895-f429-45b1-8b1c-c4a7d7149604, category=SELFIE)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), faceSearchFindingsItem=null)], extraction=[Extraction(id=6dec25dc-b47a-4bee-aaa6-e5a7ff3ed3a9, credentials=[CapabilitiesCredentials(id=c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=ExtractionData(type=null, subType=null, issuingCountry=null, firstName=null, lastName=null, dateOfBirth=null, expiryDate=null, issuingDate=null, documentNumber=null, state=null, personalNumber=null, optionalMrzField1=null, optionalMrzField2=null, address=null, issuingAuthority=null, issuingPlace=null, curp=null, gender=null, nationality=null, placeOfBirth=null, taxNumber=null, cpf=null, registrationNumber=null, mothersName=null, fathersName=null, personalIdentificationNumber=null, rgNumber=null, documentIdentificationNumber=null, citizenship=null, religion=null, maritialStatus=null, currentAge=null, lastNameAtBirth=null, remarks=null, disability=null))], dataChecks=[CapabilitiesElement(id=edc76448-117f-40f0-893f-87247e62e2ec, credentials=[CapabilitiesCredentials(id=c3d99a3c-b37b-4b3f-a962-cd5e8b98c7a4, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)))], watchlistScreening=[], addressValidation=[], proofOfResidency=[], drivingLicenseVerification=[], braCpfValidation=[], biometricVerification=[]))",
            "logger_name": "com.arbm.digibank.service.JumioV4CallbackService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "3ae1d294b302d65e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:17.750",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:17.75Z",
            "@version": "1",
            "message": "Jumio V4 callback data: JumioV4Callback(callbackSentAt=2024-11-21T02:24:17.720Z, userReference='f66bea1f-7618-4b36-95ae-7aac367c1758', workflowExecution=WorkflowExecution(id='17b2af9e-e470-4b8a-ace0-7567268b3caa', href=https://retrieval.apac-1.jumio.ai/api/v1/workflow-executions/17b2af9e-e470-4b8a-ace0-7567268b3caa, definitionKey=10032, status=PROCESSED), account=Account(id='9eca405b-b88c-4028-af89-d57eb3d67d5c', href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c))",
            "logger_name": "com.arbm.digibank.controller.JumioV4CallbackController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e99d149d0f14421b0c80d5d123cab",
            "spanId": "3ae1d294b302d65e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:09.788",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:09.788Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99c97bcdabb66af30eb330d46bc4",
            "spanId": "e99ce18f69978150",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:09.787",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:09.786Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99c97bcdabb66af30eb330d46bc4",
            "spanId": "e99ce18f69978150",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:04.309",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:04.308Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99c418f8eb551734b65214c62d84",
            "spanId": "74126420e908ba90",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:24:04.307",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:24:04.307Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99c418f8eb551734b65214c62d84",
            "spanId": "74126420e908ba90",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:58.848",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:58.848Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99be2517dcc0510b263f5b532622",
            "spanId": "1f47af0c693b633d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:58.847",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:58.847Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99be2517dcc0510b263f5b532622",
            "spanId": "1f47af0c693b633d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:53.443",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:53.443Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99b97e325e627ab1755f7c514676",
            "spanId": "d08275fbb74e5653",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:53.442",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:53.442Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99b97e325e627ab1755f7c514676",
            "spanId": "d08275fbb74e5653",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:47.996",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:47.996Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99b3496816cf0ccf42412330dccc",
            "spanId": "8f81c0a6a01f329c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:47.995",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:47.995Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99b3496816cf0ccf42412330dccc",
            "spanId": "8f81c0a6a01f329c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:42.529",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:42.529Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99ae4f1e8cc714c14d4146c73a56",
            "spanId": "f93640ade49bf329",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:42.528",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:42.528Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99ae4f1e8cc714c14d4146c73a56",
            "spanId": "f93640ade49bf329",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:36.784",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:36.784Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a8134667067885e45c0413f624",
            "spanId": "a1b450dac827f72c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:36.783",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:36.783Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a8134667067885e45c0413f624",
            "spanId": "a1b450dac827f72c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:36.007",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:36.007Z",
            "@version": "1",
            "message": "An error occurred with code[E400024], details[Scanning is already done, To Scan again you have to wait 10 minutes, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758, For MYKAD-flow]",
            "logger_name": "com.arbm.digibank.rest.exception.common.RestExceptionHandler",
            "thread_name": "http-nio-8080-exec-7",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a74df0b9e513be1cdb27747a4f",
            "spanId": "d4c5076cadd8c1b6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:36.004",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:36.004Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a74df0b9e513be1cdb27747a4f",
            "spanId": "d4c5076cadd8c1b6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:35.982",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:35.982Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2024-11-21T02:23:35.982503Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a7509220b504071da55ddbebe8",
            "spanId": "57bca7e2d4f18587",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:35.979",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:23:35.978",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:35.978Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a7509220b504071da55ddbebe8",
            "spanId": "57bca7e2d4f18587",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:35.970",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:35.97Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a74df0b9e513be1cdb27747a4f",
            "spanId": "d4c5076cadd8c1b6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:23:35.960",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:23:35.959Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99a7509220b504071da55ddbebe8",
            "spanId": "57bca7e2d4f18587",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:22:09.786",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:22:09.786Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-3]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032), responseTopic(onboarding.customer-identity-service.ekyc-response.v3), resultTopic(onboarding.customer-identity-service.ekyc-result.v3)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9951de67db360074bc931ef07a12",
            "spanId": "0074bc931ef07a12",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:22:09.784",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:22:09.783Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-2]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9951de67db360074bc931ef07a12",
            "spanId": "0074bc931ef07a12",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:22:09.669",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "Update Jumio Account: UpdateAccountParams(workflowDefinitionKey=ONBOARDING_MYKAD_SELFIE_SCREENING, accountId=9eca405b-b88c-4028-af89-d57eb3d67d5c, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, userIp=128.0.0.1, country=MYS, state=Kuala Lumpur)"
    },
    {
        "@timestamp": "2024-11-21 02:22:09.627",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:22:09.627Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-1]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(null), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9951de67db360074bc931ef07a12",
            "spanId": "0074bc931ef07a12",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:22:09.627",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "First Update Account Function Called, accountId:9eca405b-b88c-4028-af89-d57eb3d67d5c, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758"
    },
    {
        "@timestamp": "2024-11-21 02:22:09.623",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:22:09.623Z",
            "@version": "1",
            "message": "Init verification for f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.V2ApiController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9951de67db360074bc931ef07a12",
            "spanId": "0074bc931ef07a12",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:22:09.594",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:22:09.594Z",
            "@version": "1",
            "message": "Trying to initiate Onboarding Identity-Verification to start JUMIO Scanning by (FE) for (MYKAD) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99515ccf22246dd7f6c4788f3d0a",
            "spanId": "74167a1c55f09fbc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:44.493",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:44.493Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-3]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032), responseTopic(onboarding.customer-identity-service.ekyc-response.v3), resultTopic(onboarding.customer-identity-service.ekyc-result.v3)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e99389cd4174d2ddd22c0e2dcecb4",
            "spanId": "2ddd22c0e2dcecb4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:44.491",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:44.491Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-2]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e99389cd4174d2ddd22c0e2dcecb4",
            "spanId": "2ddd22c0e2dcecb4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:44.388",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "Update Jumio Account: UpdateAccountParams(workflowDefinitionKey=ONBOARDING_MYKAD_SELFIE_SCREENING, accountId=9eca405b-b88c-4028-af89-d57eb3d67d5c, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, userIp=128.0.0.1, country=MYS, state=Kuala Lumpur)"
    },
    {
        "@timestamp": "2024-11-21 02:21:44.346",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:44.346Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-1]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(null), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e99389cd4174d2ddd22c0e2dcecb4",
            "spanId": "2ddd22c0e2dcecb4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:44.346",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "First Update Account Function Called, accountId:9eca405b-b88c-4028-af89-d57eb3d67d5c, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758"
    },
    {
        "@timestamp": "2024-11-21 02:21:44.344",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:44.344Z",
            "@version": "1",
            "message": "Init verification for f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.V2ApiController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e99389cd4174d2ddd22c0e2dcecb4",
            "spanId": "2ddd22c0e2dcecb4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:44.311",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:44.311Z",
            "@version": "1",
            "message": "Trying to initiate Onboarding Identity-Verification to start JUMIO Scanning by (FE) for (MYKAD) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e99387fa5aaa47a31f8c219959442",
            "spanId": "b64694c3537b30b9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:25.333",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:25.333Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e992515cc45ef3cc2471268ae5541",
            "spanId": "933b66c3f4be2a2c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:25.329",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:25.329Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e992515cc45ef3cc2471268ae5541",
            "spanId": "933b66c3f4be2a2c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.609",
        "kubernetes.container_name": "apollo-server",
        "logBody": "  customerId: 'f66bea1f-7618-4b36-95ae-7aac367c1758',"
    },
    {
        "@timestamp": "2024-11-21 02:21:24.545",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.541Z",
            "@version": "1",
            "message": "Get customer lazy f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e9924da69b5615be95d00ffcde08e",
            "spanId": "5be95d00ffcde08e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.543",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-11-21T02:21:24.542] [INFO] [apollo-server,,] default - Microservice response: {\"customerId\":\"f66bea1f-7618-4b36-95ae-7aac367c1758\",\"phoneNumber\":\"*HIDDEN*\",\"email\":\"*HIDDEN*\",\"dateOfBirth\":\"*HIDDEN*\",\"placeOfBirth\":\"*HIDDEN*\",\"hasSmeAccount\":false}"
    },
    {
        "@timestamp": "2024-11-21 02:21:24.543",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-11-21T02:21:24.543] [INFO] [apollo-server,,] default - Microservice request:  http://customer-service.customer-service.svc.cluster.local:8080/customer-service/v1/customers/f66bea1f-7618-4b36-95ae-7aac367c1758/status {\"method\":\"GET\",\"headers\":{}}"
    },
    {
        "@timestamp": "2024-11-21 02:21:24.535",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-11-21T02:21:24.535] [INFO] [apollo-server,,] default - Microservice request:  http://customer-service.customer-service.svc.cluster.local:8080/customer-service/v1/customerLazy/f66bea1f-7618-4b36-95ae-7aac367c1758 {\"method\":\"GET\",\"headers\":{}}"
    },
    {
        "@timestamp": "2024-11-21 02:21:24.533",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.533Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | notificationToken=d23e5d85-3709-49be-ab8e-db71acad5b5c",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.533",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.533Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Calling CompleteLoginResponse",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.502",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.502Z",
            "@version": "1",
            "message": "getCustomerActiveDevice f66bea1f-7618-4b36-95ae-7aac367c1758 ",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "611ca3e7bda5b8be",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.502",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.501Z",
            "@version": "1",
            "message": "Getting updateCurrentDevice -> fetchCurrentUserDevice for customer=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.login.DeviceHandler",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.497",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.496Z",
            "@version": "1",
            "message": "Update device for customerId: f66bea1f-7618-4b36-95ae-7aac367c1758, deviceId: activeVerified, xRequestID: 01245463-cc26-9060-acef-40d392c75af3, body: DeviceUpdateRequest(deviceOs=Android 11 (SDK 30), deviceModel=vivo V2043, applicationVersion=)",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "aabcddf0821bbee9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.495",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.495Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Device Metadata [flowSupportService.lookupFlowDeviceMetadata]: DeviceMetadata(deviceOs=Android 11 (SDK 30), deviceModel=vivo V2043, applicationVersion=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.495",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.495Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Getting notification token for customer | PingOneScope.DEVICE_BINDING=DEVICE_BINDING",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.495",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.495Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Calling deviceHandler.updateCurrentDevice",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.495",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.495Z",
            "@version": "1",
            "message": "Updating customer device for customer=f66bea1f-7618-4b36-95ae-7aac367c1758, deviceMetadata=DeviceMetadata(deviceOs=Android 11 (SDK 30), deviceModel=vivo V2043, applicationVersion=) | updateCurrentDevice -> [customersApiService.updateDevice]",
            "logger_name": "com.arbm.digibank.service.login.DeviceHandler",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.494",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.493Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Username Token [flowSupportService.storeNewTokenForUser]: 656086e7-b996-4291-8d3c-f70e95342918",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:24.488",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:24.487Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Fetch User Details [fetchUserDetails]: UserDetails(pingOneUserId=b3eb68c4-f686-47bc-8003-cc9138c25da6, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e9923d8e8b83761e25d01b053c3a9",
            "spanId": "61e25d01b053c3a9",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:22.571",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:22.571Z",
            "@version": "1",
            "message": "PASSWORD_REQUIRED: cic= f66bea1f-7618-4b36-95ae-7aac367c1758, request=class VerifyUsernamePasswordRequest {\n    flowId: 09a3cfca-deab-4434-8651-45bb2dd2dff6\n    username: null\n    password: Banu5888@\n}, response=class FlowStatusResponse {\n    links: null\n    id: 09a3cfca-deab-4434-8651-45bb2dd2dff6\n    resumeUrl: null\n    status: OTP_REQUIRED\n    createdAt: 2024-11-21T02:21:22.302Z\n    expiresAt: 2024-11-21T02:36:22.515Z\n    bypassAllowed: false\n    embedded: class EmbeddedUserName {\n        devices: [class Device {\n            links: null\n            id: c2ebdaf9-12fa-47d9-8816-310f5ad73282\n            environment: null\n            user: null\n            type: MOBILE\n            status: ACTIVE\n            createdAt: null\n            updatedAt: null\n            phone: null\n            os: class OS {\n                version: 11\n                type: ANDROID\n            }\n            model: class Model {\n                name: V2043\n                marketingName: V2043\n            }\n            application: class ApplicationDevice {\n                id: c45ebfec-f95b-4143-bff7-34c1e6dac088\n                nativeName: Rize\n                version: 2.0.0\n                name: null\n                pushSandbox: false\n                passcodeRefreshDuration: class PasscodeRefreshDuration {\n                    duration: 30\n                    timeUnit: SECONDS\n                }\n            }\n            pushEnabled: false\n            manufacturer: vivo\n            apiVersion: 2.0\n            sdkVersion: 1.11.0(9230)\n            rooted: false\n            lockEnabled: true\n            locale: en-MY\n            notification: null\n            background: null\n            allowPushNotification: true\n            otpEnabled: true\n        }]\n        user: class UserName {\n            id: b3eb68c4-f686-47bc-8003-cc9138c25da6\n            username: null\n            name: null\n        }\n        application: class Application {\n            name: Digibank ARB\n        }\n    }\n    error: null\n    pingOneCookies: {ST=eb7f86ce-0299-4391-9cf1-617c6963bf10, ST-NO-SS=eb7f86ce-0299-4391-9cf1-617c6963bf10}\n    selectedDevice: class ID {\n        id: c2ebdaf9-12fa-47d9-8816-310f5ad73282\n    }\n}",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e992268a3b9f5f15e4c7e16ab5673",
            "spanId": "f15e4c7e16ab5673",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:22.363",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:22.363Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758, request=class InitialAuthorizationRequest {\n    usernameOrPingOneUserId: b3eb68c4-f686-47bc-8003-cc9138c25da6\n    mobilePayload: null\n    acrValues: [mobile_otp_approval]\n    scopes: [profile, customerid]\n    responseType: null\n    pingOneCookies: null\n    withoutMFA: null\n} response=class InitialAuthorizationResponse {\n    links: class Links {\n        self: class Link {\n            href: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/flows/09a3cfca-deab-4434-8651-45bb2dd2dff6\n        }\n        environment: null\n        population: null\n        devices: null\n        roleAssignments: null\n        password: null\n        passwordReset: null\n        passwordSet: null\n        passwordCheck: null\n        passwordRecover: null\n        passwordValidate: null\n        passwordPolicy: null\n        linkedAccounts: null\n        accountSendVerificationCode: null\n        memberOfGroups: null\n        user: null\n        usernamePasswordCheck: class Link {\n            href: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/flows/09a3cfca-deab-4434-8651-45bb2dd2dff6\n        }\n        otpCheck: null\n        deviceSelect: null\n        signOnPage: class Link {\n            href: https://apps.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/signon/?flowId=09a3cfca-deab-4434-8651-45bb2dd2dff6\n        }\n        deviceReorder: null\n    }\n    embedded: class EmbeddedUserName {\n        devices: null\n        user: class UserName {\n            id: b3eb68c4-f686-47bc-8003-cc9138c25da6\n            username: null\n            name: null\n        }\n        application: class Application {\n            name: Digibank ARB\n        }\n    }\n    error: null\n    id: 09a3cfca-deab-4434-8651-45bb2dd2dff6\n    environment: class ID {\n        id: 44e438c9-1f16-40ed-94fe-e4a18e19c517\n    }\n    resumeUrl: https://auth.pingone.asia/44e438c9-1f16-40ed-94fe-e4a18e19c517/as/resume?flowId=09a3cfca-deab-4434-8651-45bb2dd2dff6\n    status: PASSWORD_REQUIRED\n    createdAt: 2024-11-21T02:21:22.302Z\n    expiresAt: 2024-11-21T02:36:22.302Z\n    bypassAllowed: null\n    selectedDevice: null\n}",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e992268a3b9f5f15e4c7e16ab5673",
            "spanId": "f15e4c7e16ab5673",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:22.159",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:22.159Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | Fetching user details [fetchUserDetails]:  UserDetails(pingOneUserId=b3eb68c4-f686-47bc-8003-cc9138c25da6, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e992268a3b9f5f15e4c7e16ab5673",
            "spanId": "f15e4c7e16ab5673",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:22.159",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:22.159Z",
            "@version": "1",
            "message": "cic: f66bea1f-7618-4b36-95ae-7aac367c1758 | [isDeviceBounded]: deviceBounded=true",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e992268a3b9f5f15e4c7e16ab5673",
            "spanId": "f15e4c7e16ab5673",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:22.159",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:22.159Z",
            "@version": "1",
            "message": "prepareNonPairingAuthorizationRequest for cic: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e992268a3b9f5f15e4c7e16ab5673",
            "spanId": "f15e4c7e16ab5673",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:21.450",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:21.449Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-11-21T02:20:50.261Z\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:20:50.261Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "3d8c2140da6671cb",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:13.320",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:13.32Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-11-21T02:20:50.261Z\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:20:50.261Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "3d8c2140da6671cb",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:13.317",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:13.317Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:13.116",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:13.116Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-11-21T02:20:50.261Z\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:20:50.261Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "29479d082d66d541",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:11.985",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-11-21T02:21:11.984] [INFO] [apollo-server,,] default - Microservice response: {\"secureword\":\"*HIDDEN*\",\"cic\":\"f66bea1f-7618-4b36-95ae-7aac367c1758\"}"
    },
    {
        "@timestamp": "2024-11-21 02:21:11.985",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-11-21T02:21:11.985] [INFO] [apollo-server,,] default - {\"http\":{\"headers\":{}},\"data\":{\"getUserSecureWord\":{\"secureword\":\"*HIDDEN*\",\"nickname\":null,\"cic\":\"f66bea1f-7618-4b36-95ae-7aac367c1758\",\"isDemoAccount\":false}}}"
    },
    {
        "@timestamp": "2024-11-21 02:21:11.982",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:11.982Z",
            "@version": "1",
            "message": "Get customer lazy f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e991737e60450e66432aa77ece979",
            "spanId": "ffab3ad15b6acc12",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:04.986",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:04.986Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-11-21T02:20:50.261Z\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:20:50.261Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "29479d082d66d541",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:04.984",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:04.984Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:04.883",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:04.883Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-11-21T02:20:50.261Z\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:20:50.261Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor265.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$9b0ea643.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$7b370e3a.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "d3a0e6e6bd4831da",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:02.725",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:02.725Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-11-21T02:20:59.071Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e990b45eddec30ea4f4ab29f8ec79",
            "spanId": "05aa6072ecab5539",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:02.425",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:02.425Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:02.224",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:02.223Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-11-21T02:20:59.071Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e990b45eddec30ea4f4ab29f8ec79",
            "spanId": "e4b771f445b12be7",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.824",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.824Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.723",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.723Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-11-21T02:20:59.071Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e990b45eddec30ea4f4ab29f8ec79",
            "spanId": "85f316063ea4fe19",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.478",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.478Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.475",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:21:01.473",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.473Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.470",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:21:01.467",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.467Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2024-11-21T02:21:01.467001Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.467",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.467Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2024-11-21T02:21:01.467259Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.467",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.467Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2024-11-21T02:21:01.467397Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.465",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.465Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2024-11-21T02:21:01.465530Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990bcc34c486e8f5459bcfa600c3",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.459",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.459Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990bcc34c486e8f5459bcfa600c3",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.459",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.459Z",
            "@version": "1",
            "message": "The received scanReferenceId(7787d6d0-9f41-4566-88d6-a6224e3b1e31) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758  was Rejected by Jumio callback and the Identity verification process for MYKAD flow will be restarted again from the beginning to scan MYKAD",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990bcc34c486e8f5459bcfa600c3",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.424",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.424Z",
            "@version": "1",
            "message": "Started updating Jumio Callback Step status for prospectCustomerId = f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990bcc34c486e8f5459bcfa600c3",
            "spanId": "21870beca3c5da3d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.397",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.397Z",
            "@version": "1",
            "message": "Get the notification template name UNSUCCESSFUL_ONBOARDING, for customer f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.NotificationTemplateService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e990814aaed99b973330f37c0f819",
            "spanId": "69204f289f44e393",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.397",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.397Z",
            "@version": "1",
            "message": "Notification Entity:  NotificationsEntity(notificationId=45652716-2029-4089-9e1f-49593a2fc605, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, content=Please reach out to our Customer Care team at 1800 81 9149., header=Sorry! Your onboarding is unsuccessful., isRead=false, internalNotifId=null, isDeleted=false) ",
            "logger_name": "com.arbm.digibank.service.NotificationOnesignalService",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.395",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.395Z",
            "@version": "1",
            "message": "Get devices for customerId: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e990db34b21367fd999c035393aa8",
            "spanId": "7fd999c035393aa8",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.393",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.392Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [f66bea1f-7618-4b36-95ae-7aac367c1758]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e9908e21659c191778d5e0a534b67",
            "spanId": "928bf79dab7c2708",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.392",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.392Z",
            "@version": "1",
            "message": "consumeCreateSilentNotificationCommand, notificationId: null, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758, ttl: 86400",
            "logger_name": "com.arbm.digibank.processor.CreateSilentNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e9908e21659c191778d5e0a534b67",
            "spanId": "928bf79dab7c2708",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.361",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.361Z",
            "@version": "1",
            "message": "Get devices for customerId: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e990d4580e2436bcfcc36a83170a9",
            "spanId": "6bcfcc36a83170a9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.360",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.359Z",
            "@version": "1",
            "message": "consumeCreateNotificationCommand, notificationId: null, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758, templateName: UNSUCCESSFUL_ONBOARDING",
            "logger_name": "com.arbm.digibank.processor.CreateNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e990814aaed99b973330f37c0f819",
            "spanId": "69204f289f44e393",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.360",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.359Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [f66bea1f-7618-4b36-95ae-7aac367c1758]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "673e990814aaed99b973330f37c0f819",
            "spanId": "69204f289f44e393",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.355",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.355Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after receiving verification-result from 'customerIdentityService' after applying verification rules on JUMIO call back for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990bcc34c486e8f5459bcfa600c3",
            "spanId": "605426532b38f28f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:01.354",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:01.354Z",
            "@version": "1",
            "message": "Prospect Customer with prospectId(f66bea1f-7618-4b36-95ae-7aac367c1758) identity-verification-result received ({\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.consumer.CustomerIdentityVerificationResultConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990bcc34c486e8f5459bcfa600c3",
            "spanId": "605426532b38f28f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:21:00.079",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:21:00.079Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-11-21T02:20:57.069Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e9909aea73e35bd401dc9f92b8040",
            "spanId": "ab2f530faea1b7be",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:59.780",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:59.78Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:59.598",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:59.578Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-11-21T02:20:57.069Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e9909aea73e35bd401dc9f92b8040",
            "spanId": "67f98f585af497b8",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:59.199",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:59.199Z",
            "@version": "1",
            "message": "Step 1: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(7787d6d0-9f41-4566-88d6-a6224e3b1e31), for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758) with event({\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:59.199",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:59.199Z",
            "@version": "1",
            "message": "Step 2: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(7787d6d0-9f41-4566-88d6-a6224e3b1e31), for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758) with record(ProducerRecord(topic=onboarding.customer-identity-service.ekyc-result.v3, partition=null, headers=RecordHeaders(headers = [RecordHeader(key = kafka_messageKey, value = [55, 55, 56, 55, 100, 54, 100, 48, 45, 57, 102, 52, 49, 45, 52, 53, 54, 54, 45, 56, 56, 100, 54, 45, 97, 54, 50, 50, 52, 101, 51, 98, 49, 101, 51, 49])], isReadOnly = false), key=7787d6d0-9f41-4566-88d6-a6224e3b1e31, value={\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"}, timestamp=null))",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:59.178",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:59.178Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"; nested exception is java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"f66bea1f-7618-4b36-95ae-7aac367c1758\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor509.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$c2349040.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:59.077",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:59.077Z",
            "@version": "1",
            "message": "Customer f66bea1f-7618-4b36-95ae-7aac367c1758 statuses will be changed to {\"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-11-21T02:20:57.069Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e9909aea73e35bd401dc9f92b8040",
            "spanId": "701073f464fc8819",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:56.754",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:56.754Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-11-21T02:20:50.261Z\", \"scanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-11-21T02:20:50.261Z\", \"clientIp\": null, \"customerId\": \"f66bea1f-7618-4b36-95ae-7aac367c1758\", \"merchantScanReference\": \"7787d6d0-9f41-4566-88d6-a6224e3b1e31\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "d3a0e6e6bd4831da",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:51.434",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:51.434Z",
            "@version": "1",
            "message": "Jumio retrieval data after callback for -> account id = 9eca405b-b88c-4028-af89-d57eb3d67d5c , customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , workflowExecutionId = 7787d6d0-9f41-4566-88d6-a6224e3b1e31 , retrievalData = JumioV4Response(account=AccountResponse(id=9eca405b-b88c-4028-af89-d57eb3d67d5c, href=null), workflow=WorkflowExecutionResponse(definitionKey=10032, status=PROCESSED, userReference=f66bea1f-7618-4b36-95ae-7aac367c1758, customerInternalReference=f66bea1f-7618-4b36-95ae-7aac367c1758), createdAt=2024-11-21T02:19:03.488Z, startedAt=2024-11-21T02:20:11.991Z, completedAt=2024-11-21T02:20:50.261Z, credentials=[Credentials(id=98e165bd-bcb7-49da-8b6a-3309905eee6c, category=SELFIE, parts=[CredentialsPart(classifier=FACE, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/98e165bd-bcb7-49da-8b6a-3309905eee6c/parts/FACE)]), Credentials(id=d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8, category=FACEMAP, parts=[CredentialsPart(classifier=FACEMAP, href=null), CredentialsPart(classifier=LIVENESS_1, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8/parts/LIVENESS_1), CredentialsPart(classifier=LIVENESS_3, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8/parts/LIVENESS_3), CredentialsPart(classifier=LIVENESS_2, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8/parts/LIVENESS_2), CredentialsPart(classifier=LIVENESS_5, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8/parts/LIVENESS_5), CredentialsPart(classifier=LIVENESS_4, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8/parts/LIVENESS_4), CredentialsPart(classifier=LIVENESS_6, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8/parts/LIVENESS_6)]), Credentials(id=3164311b-8d52-4b94-92b2-7caddc586660, category=ID, parts=[CredentialsPart(classifier=FRONT, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/3164311b-8d52-4b94-92b2-7caddc586660/parts/FRONT), CredentialsPart(classifier=BACK, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/credentials/3164311b-8d52-4b94-92b2-7caddc586660/parts/BACK)])], decision=Decision(risk=Risk(score=100.0), type=REJECTED, details=DecisionDetails(label=REJECTED)), steps=Step(href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c/workflow-executions/7787d6d0-9f41-4566-88d6-a6224e3b1e31/steps), capabilities=Capabilities(usability=[CapabilitiesElement(id=02139847-bab0-48a5-8fa1-8159912f9ff6, credentials=[CapabilitiesCredentials(id=98e165bd-bcb7-49da-8b6a-3309905eee6c, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=961e28b9-5def-4eb8-9144-abbaa1915081, credentials=[CapabilitiesCredentials(id=d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=12d21f88-c06d-4420-854c-2ce2031a9277, credentials=[CapabilitiesCredentials(id=3164311b-8d52-4b94-92b2-7caddc586660, category=ID)], decision=CapabilitiesDecision(type=REJECTED, details=CapabilitiesDecisionDetails(label=BAD_QUALITY_IMAGE)))], liveness=[Liveness(id=6726797d-9dc7-4d58-8c85-73481aba3760, credentials=[CapabilitiesCredentials(id=98e165bd-bcb7-49da-8b6a-3309905eee6c, category=SELFIE), CapabilitiesCredentials(id=d16a27ba-b7a0-4e3d-af52-a4ca20bb00f8, category=FACEMAP)], decision=CapabilitiesDecision(type=REJECTED, details=CapabilitiesDecisionDetails(label=FACE_NOT_FULLY_VISIBLE)), data=LivenessData(type=JUMIO_STANDARD, predictedAge=45, ageConfidenceRange=31-67, validFaceMapForAuthentication=null))], similarity=[Similarity(id=41cb3acf-7414-4916-b898-2dc670535f58, credentials=[CapabilitiesCredentials(id=98e165bd-bcb7-49da-8b6a-3309905eee6c, category=SELFIE), CapabilitiesCredentials(id=3164311b-8d52-4b94-92b2-7caddc586660, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=SimiliarityData(similarity=null))], authentication=[], imageChecks=[ImageChecks(id=68f1fba2-3b25-4cc4-9576-22eef8410816, credentials=[CapabilitiesCredentials(id=98e165bd-bcb7-49da-8b6a-3309905eee6c, category=SELFIE), CapabilitiesCredentials(id=3164311b-8d52-4b94-92b2-7caddc586660, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), faceSearchFindingsItem=null)], extraction=[Extraction(id=e456365e-17c1-4b35-addc-2abe84ddd9e4, credentials=[CapabilitiesCredentials(id=3164311b-8d52-4b94-92b2-7caddc586660, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=ExtractionData(type=null, subType=null, issuingCountry=null, firstName=null, lastName=null, dateOfBirth=null, expiryDate=null, issuingDate=null, documentNumber=null, state=null, personalNumber=null, optionalMrzField1=null, optionalMrzField2=null, address=null, issuingAuthority=null, issuingPlace=null, curp=null, gender=null, nationality=null, placeOfBirth=null, taxNumber=null, cpf=null, registrationNumber=null, mothersName=null, fathersName=null, personalIdentificationNumber=null, rgNumber=null, documentIdentificationNumber=null, citizenship=null, religion=null, maritialStatus=null, currentAge=null, lastNameAtBirth=null, remarks=null, disability=null))], dataChecks=[CapabilitiesElement(id=fbd76586-8c79-42e2-84e0-c1d1e731c821, credentials=[CapabilitiesCredentials(id=3164311b-8d52-4b94-92b2-7caddc586660, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)))], watchlistScreening=[], addressValidation=[], proofOfResidency=[], drivingLicenseVerification=[], braCpfValidation=[], biometricVerification=[]))",
            "logger_name": "com.arbm.digibank.service.JumioV4CallbackService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "7597dd928b3a4800",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:51.197",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:51.197Z",
            "@version": "1",
            "message": "Jumio V4 callback data: JumioV4Callback(callbackSentAt=2024-11-21T02:20:51.147Z, userReference='f66bea1f-7618-4b36-95ae-7aac367c1758', workflowExecution=WorkflowExecution(id='7787d6d0-9f41-4566-88d6-a6224e3b1e31', href=https://retrieval.apac-1.jumio.ai/api/v1/workflow-executions/7787d6d0-9f41-4566-88d6-a6224e3b1e31, definitionKey=10032, status=PROCESSED), account=Account(id='9eca405b-b88c-4028-af89-d57eb3d67d5c', href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/9eca405b-b88c-4028-af89-d57eb3d67d5c))",
            "logger_name": "com.arbm.digibank.controller.JumioV4CallbackController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9903197b2e8a5ee697075fb26e17",
            "spanId": "7597dd928b3a4800",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:48.206",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:48.205Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990024b81a7e473a8fb316680840",
            "spanId": "1f4bb15f996a90b8",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:48.204",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:48.204Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e990024b81a7e473a8fb316680840",
            "spanId": "1f4bb15f996a90b8",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:42.462",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:42.462Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98fa704cd45c10be0f21391cc42e",
            "spanId": "36b2a048dbecf0b6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:42.461",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:42.461Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98fa704cd45c10be0f21391cc42e",
            "spanId": "36b2a048dbecf0b6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:36.546",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:36.546Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98f46e5bccf311f520667094f111",
            "spanId": "2623cc4cdfcc22fa",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:36.545",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:36.545Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98f46e5bccf311f520667094f111",
            "spanId": "2623cc4cdfcc22fa",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:30.740",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:30.74Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98ee0556d5676f98da4d65208b92",
            "spanId": "544a8e100a9cf697",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:30.736",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:30.736Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98ee0556d5676f98da4d65208b92",
            "spanId": "544a8e100a9cf697",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:24.873",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:24.873Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98e8378dfb682129d2801e1b1b95",
            "spanId": "16869a0efe85be17",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:24.872",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:24.872Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98e8378dfb682129d2801e1b1b95",
            "spanId": "16869a0efe85be17",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:17.696",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:17.696Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98e12b94c720404d561713efb8da",
            "spanId": "c42fed8e66e3810a",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:17.695",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:17.694Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98e12b94c720404d561713efb8da",
            "spanId": "c42fed8e66e3810a",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:15.705",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:15.705Z",
            "@version": "1",
            "message": "An error occurred with code[E400024], details[Scanning is already done, To Scan again you have to wait 10 minutes, For the prospect customer with prospectId=f66bea1f-7618-4b36-95ae-7aac367c1758, For MYKAD-flow]",
            "logger_name": "com.arbm.digibank.rest.exception.common.RestExceptionHandler",
            "thread_name": "http-nio-8080-exec-9",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "onboarding-service",
            "traceId": "673e98df28e214313a7a1121694b857f",
            "spanId": "9ce93c2b5af2613f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:15.695",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:15.695Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98df28e214313a7a1121694b857f",
            "spanId": "9ce93c2b5af2613f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:15.672",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:15.672Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2024-11-21T02:20:15.672008Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98df457f3a3254709d770be6f328",
            "spanId": "2521e66af8acdca5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:15.669",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:15.669Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98df28e214313a7a1121694b857f",
            "spanId": "9ce93c2b5af2613f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:15.668",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:20:15.666",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:15.666Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98df457f3a3254709d770be6f328",
            "spanId": "2521e66af8acdca5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:20:15.639",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:20:15.639Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98df457f3a3254709d770be6f328",
            "spanId": "2521e66af8acdca5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:19:03.640",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:19:03.539Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-2]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9897db0507ee3e90dcca5191e43c",
            "spanId": "3e90dcca5191e43c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:19:03.640",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:19:03.541Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-3]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032), responseTopic(onboarding.customer-identity-service.ekyc-response.v3), resultTopic(onboarding.customer-identity-service.ekyc-result.v3)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9897db0507ee3e90dcca5191e43c",
            "spanId": "3e90dcca5191e43c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:19:03.416",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "Update Jumio Account: UpdateAccountParams(workflowDefinitionKey=ONBOARDING_MYKAD_SELFIE_SCREENING, accountId=9eca405b-b88c-4028-af89-d57eb3d67d5c, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, userIp=128.0.0.1, country=MYS, state=Kuala Lumpur)"
    },
    {
        "@timestamp": "2024-11-21 02:19:03.362",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "First Update Account Function Called, accountId:9eca405b-b88c-4028-af89-d57eb3d67d5c, customerId: f66bea1f-7618-4b36-95ae-7aac367c1758"
    },
    {
        "@timestamp": "2024-11-21 02:19:03.361",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:19:03.361Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-1]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(null), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9897db0507ee3e90dcca5191e43c",
            "spanId": "3e90dcca5191e43c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:19:03.357",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:19:03.357Z",
            "@version": "1",
            "message": "Init verification for f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.V2ApiController",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e9897db0507ee3e90dcca5191e43c",
            "spanId": "3e90dcca5191e43c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:19:03.331",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:19:03.33Z",
            "@version": "1",
            "message": "Trying to initiate Onboarding Identity-Verification to start JUMIO Scanning by (FE) for (MYKAD) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e98950e9ad1c84878f7d379123c63",
            "spanId": "91ca6167b302b361",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:32.746",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:32.746Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-3]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032), responseTopic(onboarding.customer-identity-service.ekyc-response.v3), resultTopic(onboarding.customer-identity-service.ekyc-result.v3)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e983cd4c750ad82a78dec95966dbd",
            "spanId": "82a78dec95966dbd",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:32.744",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:32.744Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-2]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(9eca405b-b88c-4028-af89-d57eb3d67d5c), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e983cd4c750ad82a78dec95966dbd",
            "spanId": "82a78dec95966dbd",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:32.629",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "Request contains: JumioV4AccountRequest(customerInternalReference=f66bea1f-7618-4b36-95ae-7aac367c1758, workflowDefinition=WorkflowDefinition(key=10032, credentials=[Credential(category=ID, country=Country(predefinedType=DEFINED, values=[MYS]), type=Type(predefinedType=DEFINED, values=[ID_CARD]))]), userReference=f66bea1f-7618-4b36-95ae-7aac367c1758, callbackUrl=https://jumio.api.prod-arbm.com/cis-service/v1/callbacks/verification-status, userConsent=UserConsent(userIp=128.0.0.1, userLocation=UserLocation(country=MYS, state=Kuala Lumpur)))"
    },
    {
        "@timestamp": "2024-11-21 02:17:32.540",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:32.54Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-1]: for customerId(f66bea1f-7618-4b36-95ae-7aac367c1758), for accountId(null), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e983cd4c750ad82a78dec95966dbd",
            "spanId": "82a78dec95966dbd",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:32.536",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:32.535Z",
            "@version": "1",
            "message": "Init verification for f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.controller.V2ApiController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "673e983cd4c750ad82a78dec95966dbd",
            "spanId": "82a78dec95966dbd",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:32.488",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:32.488Z",
            "@version": "1",
            "message": "Trying to initiate Onboarding Identity-Verification to start JUMIO Scanning by (FE) for (MYKAD) for the prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e983c7fdb0bfe320278b00cb10046",
            "spanId": "1f97c4d5038e973e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:03.275",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:03.275Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:03.274",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_CALLBACK>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:17:03.271",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:03.271Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:03.269",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:17:03.266",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:03.266Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : ASSIGN_MOBILE_PREFERENCES , status: FINISHED , finished on : 2024-11-21T02:17:03.266610Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:00.247",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:00.247Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : ASSIGN_MOBILE_PREFERENCES , status: FINISHED , finished on : 2024-11-21T02:17:00.247475Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e981a48b1c26b05e1236101ceb70b",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:00.219",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:00.218Z",
            "@version": "1",
            "message": "Trying to store personal details(preferences-Mobile) of prospect customer(f66bea1f-7618-4b36-95ae-7aac367c1758)",
            "logger_name": "com.arbm.digibank.service.customer.PersonalDetailsService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e981a48b1c26b05e1236101ceb70b",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:00.218",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:00.218Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e981a48b1c26b05e1236101ceb70b",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:17:00.189",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:17:00.188Z",
            "@version": "1",
            "message": "Trying to store personal details(preferences) of prospect customer with id f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.PersonalDetailsService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e981a48b1c26b05e1236101ceb70b",
            "spanId": "8e631b24e239b30b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.372",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.372Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : ASSIGN_MOBILE_PREFERENCES , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "0c938a4bd110fc5e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.369",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : ASSIGN_MOBILE_PREFERENCES>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:16:11.350",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.35Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : CUSTOMER_ACCOUNT_IN_IAM , status: FINISHED , finished on : 2024-11-21T02:16:11.350540Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e97e81655c2792fb2593756909436",
            "spanId": "0c938a4bd110fc5e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.302",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.302Z",
            "@version": "1",
            "message": "getCustomerActiveDevice f66bea1f-7618-4b36-95ae-7aac367c1758 ",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e97e9dc9b29beeba1d81c7a4d885a",
            "spanId": "eda91cf870b66c75",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.301",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.301Z",
            "@version": "1",
            "message": "Getting updateCurrentDevice -> fetchCurrentUserDevice for customer=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.login.DeviceHandler",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e9dc9b29beeba1d81c7a4d885a",
            "spanId": "eba1d81c7a4d885a",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.296",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.295Z",
            "@version": "1",
            "message": "Update device for customerId: f66bea1f-7618-4b36-95ae-7aac367c1758, deviceId: activeVerified, xRequestID: 1e52060c-73c3-93df-8779-76bd7c1baebb, body: DeviceUpdateRequest(deviceOs=N/A, deviceModel=N/A, applicationVersion=Unknown)",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "673e97e9dc9b29beeba1d81c7a4d885a",
            "spanId": "d74d1e69c31ea44d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.293",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.293Z",
            "@version": "1",
            "message": "Updating customer device for customer=f66bea1f-7618-4b36-95ae-7aac367c1758, deviceMetadata=DeviceMetadata(deviceOs=N/A, deviceModel=N/A, applicationVersion=Unknown) | updateCurrentDevice -> [customersApiService.updateDevice]",
            "logger_name": "com.arbm.digibank.service.login.DeviceHandler",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e9dc9b29beeba1d81c7a4d885a",
            "spanId": "eba1d81c7a4d885a",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:11.282",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:11.282Z",
            "@version": "1",
            "message": "Fetch User Details [fetchUserDetails]: UserDetails(pingOneUserId=b3eb68c4-f686-47bc-8003-cc9138c25da6, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e9dc9b29beeba1d81c7a4d885a",
            "spanId": "eba1d81c7a4d885a",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:09.952",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:09.952Z",
            "@version": "1",
            "message": "Fetching user details [fetchUserDetails]:  UserDetails(pingOneUserId=b3eb68c4-f686-47bc-8003-cc9138c25da6, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e9dc9b29beeba1d81c7a4d885a",
            "spanId": "eba1d81c7a4d885a",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:09.148",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:09.148Z",
            "@version": "1",
            "message": "Create PingOne user account: action=import, customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, username=BANU5888",
            "logger_name": "com.arbm.digibank.service.CreateUserService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e8eef0e10e2ce6ed53154dc14c",
            "spanId": "2ce6ed53154dc14c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:08.995",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:08.995Z",
            "@version": "1",
            "message": "Create user account: customerId=f66bea1f-7618-4b36-95ae-7aac367c1758, username=BANU5888",
            "logger_name": "com.arbm.digibank.service.CreateUserService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e8eef0e10e2ce6ed53154dc14c",
            "spanId": "2ce6ed53154dc14c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:08.995",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:08.995Z",
            "@version": "1",
            "message": "Fetching user by customerId: customerId=f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayUserFetchServiceImpl",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "673e97e8eef0e10e2ce6ed53154dc14c",
            "spanId": "2ce6ed53154dc14c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-11-21 02:16:08.990",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : CUSTOMER_ACCOUNT_IN_IAM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:16:08.986",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:16:08.986Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = f66bea1f-7618-4b36-95ae-7aac367c1758 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e97e81655c2792fb2593756909436",
            "spanId": "0c938a4bd110fc5e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:15:32.070",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:15:32.069Z",
            "@version": "1",
            "message": "End saving Prospect customer with ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.OtpService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "6bf87de2bfac0707",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:15:32.046",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:15:32.045Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : CUSTOMER_ACCOUNT_IN_IAM , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e97c351a260b719a65eb07eb8f506",
            "spanId": "6bf87de2bfac0707",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:15:32.042",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = f66bea1f-7618-4b36-95ae-7aac367c1758 , step : CUSTOMER_ACCOUNT_IN_IAM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-11-21 02:15:32.009",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:15:32.008Z",
            "@version": "1",
            "message": "start updating Prospect customer with ID: f66bea1f-7618-4b36-95ae-7aac367c1758 with statuses, devices, and accepted documents ",
            "logger_name": "com.arbm.digibank.service.customer.OtpService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e97c351a260b719a65eb07eb8f506",
            "spanId": "6bf87de2bfac0707",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-11-21 02:15:31.980",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-11-21T02:15:31.98Z",
            "@version": "1",
            "message": "start saving Prospect customer with ID: f66bea1f-7618-4b36-95ae-7aac367c1758",
            "logger_name": "com.arbm.digibank.service.customer.OtpService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "673e97c351a260b719a65eb07eb8f506",
            "spanId": "6bf87de2bfac0707",
            "bc": "customers"
        }
    }
]