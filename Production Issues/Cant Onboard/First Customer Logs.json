[
    {
        "@timestamp": "2024-12-01 09:02:56.162",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:56.161Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"PASSED\", \"comment\": \"\", \"changedAt\": \"2024-12-01T09:02:54.048Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c263e8f93dbe7fb502be93f971b3e",
            "spanId": "845861a90b5d7ffd",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:55.865",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:55.863Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:55.849",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:55.66Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"PASSED\", \"comment\": \"\", \"changedAt\": \"2024-12-01T09:02:54.048Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c263e8f93dbe7fb502be93f971b3e",
            "spanId": "5b9011c5319beeb6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:55.262",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:55.261Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:55.158",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:55.158Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"PASSED\", \"comment\": \"\", \"changedAt\": \"2024-12-01T09:02:54.048Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c263e8f93dbe7fb502be93f971b3e",
            "spanId": "c658362932a57c42",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.657",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.656Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"PASSED\", \"comment\": \"\", \"changedAt\": \"2024-12-01T09:02:54.048Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c263edf9aca985854f5d13fca55b3",
            "spanId": "e4b4b2d7d3461e50",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.356",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.356Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.164",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.164Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : IDENTITY_STAFF_REVIEW , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.162",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : IDENTITY_STAFF_REVIEW>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 09:02:54.160",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.16Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : IDENTITY_CUSTOMER_REVIEW , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.158",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : IDENTITY_CUSTOMER_REVIEW>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 09:02:54.155",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.155Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2024-12-01T09:02:54.155535Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.155",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.155Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK , status: FINISHED , finished on : 2024-12-01T09:02:54.155738Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.155",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.155Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2024-12-01T09:02:54.155869Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.154",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.154Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK , status: FINISHED , finished on : 2024-12-01T09:02:54.154244Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263e46f58bb79333c8cc63e2c929",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.154",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.154Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"PASSED\", \"comment\": \"\", \"changedAt\": \"2024-12-01T09:02:54.048Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c263edf9aca985854f5d13fca55b3",
            "spanId": "d4cefa390df8ce8f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.153",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.153Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.150",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.15Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263e46f58bb79333c8cc63e2c929",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.139",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.138Z",
            "@version": "1",
            "message": "Started updating Jumio Callback Step status for prospectCustomerId = ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263e46f58bb79333c8cc63e2c929",
            "spanId": "c4f1da2a87348ae9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.115",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.114Z",
            "@version": "1",
            "message": "Prospect Customer with prospectId(ee4ea7cb-04d3-4362-82f4-c582e5465241) identity-verification-result received ({\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"scanReference\": \"dce654e2-e68c-4d9a-80f7-d5319d69de8a\", \"searchId\": \"2061508033\", \"verificationResult\": \"VERIFIED\"})",
            "logger_name": "com.arbm.digibank.consumer.CustomerIdentityVerificationResultConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263e46f58bb79333c8cc63e2c929",
            "spanId": "557d2159b6da1d24",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.115",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.115Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after receiving verification-result from 'customerIdentityService' after applying verification rules on JUMIO call back for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263e46f58bb79333c8cc63e2c929",
            "spanId": "557d2159b6da1d24",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.111",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.11Z",
            "@version": "1",
            "message": "Step 1: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(dce654e2-e68c-4d9a-80f7-d5319d69de8a), for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241) with event({\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"scanReference\": \"dce654e2-e68c-4d9a-80f7-d5319d69de8a\", \"searchId\": \"2061508033\", \"verificationResult\": \"VERIFIED\"})",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.111",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.111Z",
            "@version": "1",
            "message": "Step 2: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(dce654e2-e68c-4d9a-80f7-d5319d69de8a), for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241) with record(ProducerRecord(topic=onboarding.customer-identity-service.ekyc-result.v3, partition=null, headers=RecordHeaders(headers = [RecordHeader(key = kafka_messageKey, value = [100, 99, 101, 54, 53, 52, 101, 50, 45, 101, 54, 56, 99, 45, 52, 100, 57, 97, 45, 56, 48, 102, 55, 45, 100, 53, 51, 49, 57, 100, 54, 57, 100, 101, 56, 97])], isReadOnly = false), key=dce654e2-e68c-4d9a-80f7-d5319d69de8a, value={\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"scanReference\": \"dce654e2-e68c-4d9a-80f7-d5319d69de8a\", \"searchId\": \"2061508033\", \"verificationResult\": \"VERIFIED\"}, timestamp=null))",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:54.051",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:54.051Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"PASSED\", \"comment\": \"\", \"changedAt\": \"2024-12-01T09:02:54.048Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c263edf9aca985854f5d13fca55b3",
            "spanId": "57883c03e229a4f5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:53.783",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:53.783Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263d54f4d1481474bda50c52e3b8",
            "spanId": "c7b0449ccb894d6b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:53.774",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:53.774Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-12-01T09:02:52.656Z\", \"scanReference\": \"dce654e2-e68c-4d9a-80f7-d5319d69de8a\", \"document\": {\"status\": \"APPROVED_VERIFIED\", \"type\": \"ID_CARD\", \"idSubtype\": \"NATIONAL_ID\", \"issuingCountry\": \"MYS\", \"firstName\": \"N/A\", \"lastName\": \"TAN PAU YING\", \"dob\": \"1980-06-23\", \"expiry\": null, \"issuingDate\": null, \"number\": \"800623045068\", \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": {\"line1\": \"4 JALAN USJ 22/2A\", \"line2\": null, \"line3\": null, \"line4\": null, \"line5\": null, \"subdivision\": \"SELANGOR\", \"country\": \"MYS\", \"postalCode\": \"47630\", \"city\": \"SUBANG JAYA\", \"formattedAddress\": \"4 JALAN USJ 22/2A, SUBANG JAYA, SELANGOR, 47630, MYS\"}, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": \"F\", \"nationality\": \"MYS\", \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": \"800623045068\"}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:02:52.656Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"dce654e2-e68c-4d9a-80f7-d5319d69de8a\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": \"MATCH\", \"validity\": true, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": {\"searchDate\": \"2024-12-01T09:02:51.000Z\", \"searchId\": \"2061508033\", \"searchReference\": \"1733043771-PA2KqZx1\", \"searchResultUrl\": \"https://app.eu.complyadvantage.com/public/search/1733043771-PA2KqZx1/99f34e6ba3b0\", \"searchResults\": null, \"searchStatus\": \"SUCCESS\"}}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c263d54f4d1481474bda50c52e3b8",
            "spanId": "c7b0449ccb894d6b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:53.762",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:53.762Z",
            "@version": "1",
            "message": "Jumio retrieval data after callback for -> account id = ec2604f2-0609-4553-a6e7-1c814cd4d159 , customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , workflowExecutionId = dce654e2-e68c-4d9a-80f7-d5319d69de8a , retrievalData = JumioV4Response(account=AccountResponse(id=ec2604f2-0609-4553-a6e7-1c814cd4d159, href=null), workflow=WorkflowExecutionResponse(definitionKey=10032, status=PROCESSED, userReference=ee4ea7cb-04d3-4362-82f4-c582e5465241, customerInternalReference=ee4ea7cb-04d3-4362-82f4-c582e5465241), createdAt=2024-12-01T09:01:00.899Z, startedAt=2024-12-01T09:01:33.267Z, completedAt=2024-12-01T09:02:52.656Z, credentials=[Credentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID, parts=[CredentialsPart(classifier=FRONT, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/2d281402-7490-4c90-85c5-718e9629ec60/parts/FRONT), CredentialsPart(classifier=BACK, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/2d281402-7490-4c90-85c5-718e9629ec60/parts/BACK)]), Credentials(id=5e0de35a-bfeb-49f3-b500-7cb61a3fac5d, category=SELFIE, parts=[CredentialsPart(classifier=FACE, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/5e0de35a-bfeb-49f3-b500-7cb61a3fac5d/parts/FACE)]), Credentials(id=187680ad-c81d-4caf-a531-88819748985f, category=FACEMAP, parts=[CredentialsPart(classifier=FACEMAP, href=null), CredentialsPart(classifier=LIVENESS_1, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/187680ad-c81d-4caf-a531-88819748985f/parts/LIVENESS_1), CredentialsPart(classifier=LIVENESS_3, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/187680ad-c81d-4caf-a531-88819748985f/parts/LIVENESS_3), CredentialsPart(classifier=LIVENESS_2, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/187680ad-c81d-4caf-a531-88819748985f/parts/LIVENESS_2), CredentialsPart(classifier=LIVENESS_5, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/187680ad-c81d-4caf-a531-88819748985f/parts/LIVENESS_5), CredentialsPart(classifier=LIVENESS_4, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/187680ad-c81d-4caf-a531-88819748985f/parts/LIVENESS_4), CredentialsPart(classifier=LIVENESS_6, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/187680ad-c81d-4caf-a531-88819748985f/parts/LIVENESS_6)])], decision=Decision(risk=Risk(score=0.0), type=PASSED, details=DecisionDetails(label=PASSED)), steps=Step(href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/workflow-executions/dce654e2-e68c-4d9a-80f7-d5319d69de8a/steps), capabilities=Capabilities(usability=[CapabilitiesElement(id=b179f1ef-2009-47ea-b6b9-8860e087a644, credentials=[CapabilitiesCredentials(id=5e0de35a-bfeb-49f3-b500-7cb61a3fac5d, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=4beb5742-4fe3-402e-be36-c1142bfff198, credentials=[CapabilitiesCredentials(id=187680ad-c81d-4caf-a531-88819748985f, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=420dd036-cbf6-403b-aceb-09fa3d0e3215, credentials=[CapabilitiesCredentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)))], liveness=[Liveness(id=f76065aa-30ae-4d27-b99a-b0fa4100c0aa, credentials=[CapabilitiesCredentials(id=5e0de35a-bfeb-49f3-b500-7cb61a3fac5d, category=SELFIE), CapabilitiesCredentials(id=187680ad-c81d-4caf-a531-88819748985f, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)), data=LivenessData(type=IPROOV_STANDARD, predictedAge=35, ageConfidenceRange=24-53, validFaceMapForAuthentication=null))], similarity=[Similarity(id=21bd0676-58c6-4565-8d59-eccdb7192d71, credentials=[CapabilitiesCredentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID), CapabilitiesCredentials(id=5e0de35a-bfeb-49f3-b500-7cb61a3fac5d, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=MATCH)), data=SimiliarityData(similarity=MATCH))], authentication=[], imageChecks=[ImageChecks(id=9e7573fc-e9b3-425e-9b2b-a8ac22f37b96, credentials=[CapabilitiesCredentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID), CapabilitiesCredentials(id=5e0de35a-bfeb-49f3-b500-7cb61a3fac5d, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)), faceSearchFindingsItem=null)], extraction=[Extraction(id=1e7b7cd2-abf0-426e-8882-c3958c60b9a6, credentials=[CapabilitiesCredentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)), data=ExtractionData(type=ID_CARD, subType=NATIONAL_ID, issuingCountry=MYS, firstName=N/A, lastName=TAN PAU YING, dateOfBirth=1980-06-23, expiryDate=null, issuingDate=null, documentNumber=800623045068, state=null, personalNumber=null, optionalMrzField1=null, optionalMrzField2=null, address=Address(line1=4 JALAN USJ 22/2A, line2=null, line3=null, line4=null, line5=null, country=MYS, postalCode=47630, subdivision=SELANGOR, city=SUBANG JAYA, formattedAddress=4 JALAN USJ 22/2A, SUBANG JAYA, SELANGOR, 47630, MYS), issuingAuthority=null, issuingPlace=null, curp=null, gender=F, nationality=MYS, placeOfBirth=null, taxNumber=null, cpf=null, registrationNumber=null, mothersName=null, fathersName=null, personalIdentificationNumber=null, rgNumber=null, documentIdentificationNumber=null, citizenship=null, religion=null, maritialStatus=null, currentAge=44, lastNameAtBirth=null, remarks=null, disability=null))], dataChecks=[CapabilitiesElement(id=cbb61305-03db-4d51-93f5-9cdd00ec8e84, credentials=[CapabilitiesCredentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)))], watchlistScreening=[WatchlistScreening(id=9cc715ed-ae44-4566-b4a0-f76f8c564689, credentials=[CapabilitiesCredentials(id=2d281402-7490-4c90-85c5-718e9629ec60, category=ID)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)), data=WatchlistScreeningData(searchDate=2024-12-01T09:02:51.000Z, searchStatus=SUCCESS, searchId=2061508033, searchReference=1733043771-PA2KqZx1, searchResultUrl=https://app.eu.complyadvantage.com/public/search/1733043771-PA2KqZx1/99f34e6ba3b0, searchResults=0))], addressValidation=[], proofOfResidency=[], drivingLicenseVerification=[], braCpfValidation=[], biometricVerification=[]))",
            "logger_name": "com.arbm.digibank.service.JumioV4CallbackService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c263d54f4d1481474bda50c52e3b8",
            "spanId": "c86062a035c86e89",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:53.564",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:53.564Z",
            "@version": "1",
            "message": "Jumio V4 callback data: JumioV4Callback(callbackSentAt=2024-12-01T09:02:53.516Z, userReference='ee4ea7cb-04d3-4362-82f4-c582e5465241', workflowExecution=WorkflowExecution(id='dce654e2-e68c-4d9a-80f7-d5319d69de8a', href=https://retrieval.apac-1.jumio.ai/api/v1/workflow-executions/dce654e2-e68c-4d9a-80f7-d5319d69de8a, definitionKey=10032, status=PROCESSED), account=Account(id='ec2604f2-0609-4553-a6e7-1c814cd4d159', href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159))",
            "logger_name": "com.arbm.digibank.controller.JumioV4CallbackController",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c263d54f4d1481474bda50c52e3b8",
            "spanId": "c86062a035c86e89",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:07.349",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:07.349Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c260f271baf681ed7cfc229a27cb1",
            "spanId": "efa19d3cf135b58c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:07.348",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:07.348Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c260f271baf681ed7cfc229a27cb1",
            "spanId": "efa19d3cf135b58c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:01.942",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:01.942Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c26096e0115381572e8165794f02f",
            "spanId": "2fd48ea6d5a833f5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:02:01.940",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:02:01.94Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c26096e0115381572e8165794f02f",
            "spanId": "2fd48ea6d5a833f5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:53.949",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:53.949Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c2601725cbac825018bea333cf9c7",
            "spanId": "c5ed94f1fd07ba71",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:53.948",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:53.948Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c2601725cbac825018bea333cf9c7",
            "spanId": "c5ed94f1fd07ba71",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:42.036",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:42.036Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25f5738f276f6e381b473a6b89ff",
            "spanId": "d9e4fe26083ec9e4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:42.034",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:42.034Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25f5738f276f6e381b473a6b89ff",
            "spanId": "d9e4fe26083ec9e4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:36.474",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:36.474Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25f0037e1052215b27096b4753d8",
            "spanId": "6e733168fee3a5cc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:36.469",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:36.469Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25f0037e1052215b27096b4753d8",
            "spanId": "6e733168fee3a5cc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:35.969",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:35.969Z",
            "@version": "1",
            "message": "An error occurred with code[E400024], details[Scanning is already done, To Scan again you have to wait 10 minutes, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241, For MYKAD-flow]",
            "logger_name": "com.arbm.digibank.rest.exception.common.RestExceptionHandler",
            "thread_name": "http-nio-8080-exec-9",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ef2cdbedc3579ec05e36fa0105",
            "spanId": "c46fdb5b414e31cf",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:35.966",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:35.966Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ef2cdbedc3579ec05e36fa0105",
            "spanId": "c46fdb5b414e31cf",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:35.956",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:35.956Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2024-12-01T09:01:35.956214Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ef1bb7227825393d6f38317ee4",
            "spanId": "e1d67967038e3458",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:35.953",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 09:01:35.951",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:35.951Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ef1bb7227825393d6f38317ee4",
            "spanId": "e1d67967038e3458",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:35.942",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:35.941Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ef2cdbedc3579ec05e36fa0105",
            "spanId": "c46fdb5b414e31cf",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:35.929",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:35.929Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ef1bb7227825393d6f38317ee4",
            "spanId": "e1d67967038e3458",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:07.829",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:07.829Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-12-01T09:00:41.915Z\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:00:41.915Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor274.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$cc029821.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor448.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$58457341.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "6ceabca822a55d6d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:00.946",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:00.946Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-3]: for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241), for accountId(ec2604f2-0609-4553-a6e7-1c814cd4d159), for flow(10032), responseTopic(onboarding.customer-identity-service.ekyc-response.v3), resultTopic(onboarding.customer-identity-service.ekyc-result.v3)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c25cc95c7d30fd7880764ca602693",
            "spanId": "d7880764ca602693",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:00.944",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:00.944Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-2]: for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241), for accountId(ec2604f2-0609-4553-a6e7-1c814cd4d159), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c25cc95c7d30fd7880764ca602693",
            "spanId": "d7880764ca602693",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:00.815",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "Update Jumio Account: UpdateAccountParams(workflowDefinitionKey=ONBOARDING_MYKAD_SELFIE_SCREENING, accountId=ec2604f2-0609-4553-a6e7-1c814cd4d159, customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241, userIp=128.0.0.1, country=MYS, state=Kuala Lumpur)"
    },
    {
        "@timestamp": "2024-12-01 09:01:00.767",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:00.767Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-1]: for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241), for accountId(null), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c25cc95c7d30fd7880764ca602693",
            "spanId": "d7880764ca602693",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:00.767",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "First Update Account Function Called, accountId:ec2604f2-0609-4553-a6e7-1c814cd4d159, customerId: ee4ea7cb-04d3-4362-82f4-c582e5465241"
    },
    {
        "@timestamp": "2024-12-01 09:01:00.763",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:00.762Z",
            "@version": "1",
            "message": "Init verification for ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.controller.V2ApiController",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c25cc95c7d30fd7880764ca602693",
            "spanId": "d7880764ca602693",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:01:00.736",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:01:00.736Z",
            "@version": "1",
            "message": "Trying to initiate Onboarding Identity-Verification to start JUMIO Scanning by (FE) for (MYKAD) for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25cc5b29afa46fdf385d19b1c366",
            "spanId": "e3b4eb21c8a074b5",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:59.812",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:59.695Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor274.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$cc029821.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor448.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$58457341.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:59.812",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:59.7Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-12-01T09:00:41.915Z\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:00:41.915Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "6ceabca822a55d6d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:59.494",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:59.494Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-12-01T09:00:41.915Z\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:00:41.915Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor274.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$cc029821.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor448.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$58457341.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "e3ad92384bb90c5a",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:54.009",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:54.009Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c5052b3a306b75e6eb447aa5e4",
            "spanId": "cfcf6e7a031681c6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:54.007",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:54.007Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c5052b3a306b75e6eb447aa5e4",
            "spanId": "cfcf6e7a031681c6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:53.256",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:53.255Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-12-01T09:00:48.736Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c04d7db5c491af76cfee5635d4",
            "spanId": "58482ddda132bca6",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:52.956",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:52.956Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:52.754",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:52.754Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-12-01T09:00:48.736Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c04d7db5c491af76cfee5635d4",
            "spanId": "5b379051a9f46a26",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:52.353",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:52.353Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:52.252",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:52.252Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"ELIGIBILITY\", \"statusValue\": \"FAILED\", \"comment\": \"Date of birth not present; Id issue country not present; Customer's number not present; Customer's lastname not present; Customer's address not present; Customer's subdivision of address not present; Customer's type not present; Customer's subtype not present; Customer's issuingCountry not present; Customer's is not equal to [NATIONAL_ID], it is equal to null\", \"changedAt\": \"2024-12-01T09:00:48.736Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c04d7db5c491af76cfee5635d4",
            "spanId": "1381d520da481a22",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.364",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.364Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-12-01T09:00:41.915Z\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:00:41.915Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "e3ad92384bb90c5a",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.362",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.362Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2706)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2587)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(com.arbm.digibank.producer.generated.avro.model.CustomerIdentityResponseEvent)' threw exception; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241; nested exception is com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2719)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\t... 9 common frames omitted\nCaused by: com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor274.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$cc029821.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor448.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$58457341.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "onboarding-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.261",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.261Z",
            "@version": "1",
            "message": "Error when consuming topics.identity-verified-response event for Event({\"timestamp\": \"2024-12-01T09:00:41.915Z\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:00:41.915Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}), With Exception Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "com.arbm.digibank.exception.digibank.onboarding.UpdateProspectCustomerDataFromCISException: Unable to Update ProspectCustomer Data From CIS After receiving Callback from Jumio, For the prospect customer with prospectId=ee4ea7cb-04d3-4362-82f4-c582e5465241\n\tat com.arbm.digibank.service.cis.CustomerIdentityService.updateProspectCustomerDataFromCIS(CustomerIdentityService.kt:84)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$FastClassBySpringCGLIB$$fb51219.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:97)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:209)\n\tat org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:133)\n\tat org.springframework.retry.annotation.AnnotationAwareRetryOperationsInterceptor.invoke(AnnotationAwareRetryOperationsInterceptor.java:159)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)\n\tat com.arbm.digibank.datasource.DatasourceRouteInterceptor.proceed(DatasourceRouteInterceptor.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor274.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:634)\n\tat org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:624)\n\tat org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:72)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:175)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat com.arbm.digibank.service.cis.CustomerIdentityService$$EnhancerBySpringCGLIB$$cc029821.updateProspectCustomerDataFromCIS(<generated>)\n\tat com.arbm.digibank.consumer.JumioCallbackCISEventConsumer.consumeDataFromCis(JumioCallbackCISEventConsumer.kt:26)\n\tat jdk.internal.reflect.GeneratedMethodAccessor448.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$58457341.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "onboarding-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "c5c897490214fc24",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.242",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.242Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.240",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 09:00:51.237",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.237Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.235",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 09:00:51.232",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.232Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2024-12-01T09:00:51.232033Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.232",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.232Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2024-12-01T09:00:51.232252Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.232",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.232Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: NOT_INITIATED , finished on : 2024-12-01T09:00:51.232377Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.230",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.23Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK , status: NOT_INITIATED , finished on : 2024-12-01T09:00:51.230649Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c07a291937796fa63a00a95ab8",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.224",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.224Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c07a291937796fa63a00a95ab8",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.224",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.224Z",
            "@version": "1",
            "message": "The received scanReferenceId(ac05d55e-c242-48ba-a0f7-6bc7f799f9d7) for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241  was Rejected by Jumio callback and the Identity verification process for MYKAD flow will be restarted again from the beginning to scan MYKAD",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c07a291937796fa63a00a95ab8",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.220",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.219Z",
            "@version": "1",
            "message": "Get the notification template name UNSUCCESSFUL_ONBOARDING, for customer ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.NotificationTemplateService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "674c25bec3761898ecb303d70cf4312c",
            "spanId": "427746d89c61a1ef",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.220",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.22Z",
            "@version": "1",
            "message": "Notification Entity:  NotificationsEntity(notificationId=1221a9b3-0b70-4fc2-bfe3-95dc990ec0db, customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241, content=Please reach out to our Customer Care team at 1800 81 9149., header=Sorry! Your onboarding is unsuccessful., isRead=false, internalNotifId=null, isDeleted=false) ",
            "logger_name": "com.arbm.digibank.service.NotificationOnesignalService",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.200",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.2Z",
            "@version": "1",
            "message": "Started updating Jumio Callback Step status for prospectCustomerId = ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "Checklist-AsyncThread::1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c07a291937796fa63a00a95ab8",
            "spanId": "a6ec0e2c54c39aa4",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.181",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.181Z",
            "@version": "1",
            "message": "Get devices for customerId: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c36180dcaf9de6d1921a836c50",
            "spanId": "9de6d1921a836c50",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.179",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.179Z",
            "@version": "1",
            "message": "consumeCreateNotificationCommand, notificationId: null, customerId: ee4ea7cb-04d3-4362-82f4-c582e5465241, templateName: UNSUCCESSFUL_ONBOARDING",
            "logger_name": "com.arbm.digibank.processor.CreateNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "674c25bec3761898ecb303d70cf4312c",
            "spanId": "427746d89c61a1ef",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.179",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.179Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [ee4ea7cb-04d3-4362-82f4-c582e5465241]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "674c25bec3761898ecb303d70cf4312c",
            "spanId": "427746d89c61a1ef",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.140",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.139Z",
            "@version": "1",
            "message": "Prospect Customer with prospectId(ee4ea7cb-04d3-4362-82f4-c582e5465241) identity-verification-result received ({\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.consumer.CustomerIdentityVerificationResultConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c07a291937796fa63a00a95ab8",
            "spanId": "3ae71abda89b8323",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:51.140",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:51.14Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after receiving verification-result from 'customerIdentityService' after applying verification rules on JUMIO call back for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#3-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25c07a291937796fa63a00a95ab8",
            "spanId": "3ae71abda89b8323",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:49.346",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:49.346Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-12-01T09:00:48.732Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c06ddcbf24ce0bba93e4de8f10",
            "spanId": "02008d994f931987",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:49.046",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:49.046Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.870",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.869Z",
            "@version": "1",
            "message": "Step 1: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(ac05d55e-c242-48ba-a0f7-6bc7f799f9d7), for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241) with event({\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"})",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.870",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.87Z",
            "@version": "1",
            "message": "Step 2: Used Result topic after Jumio callback is (onboarding.customer-identity-service.ekyc-result.v3), for scanReferenceId(ac05d55e-c242-48ba-a0f7-6bc7f799f9d7), for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241) with record(ProducerRecord(topic=onboarding.customer-identity-service.ekyc-result.v3, partition=null, headers=RecordHeaders(headers = [RecordHeader(key = kafka_messageKey, value = [97, 99, 48, 53, 100, 53, 53, 101, 45, 99, 50, 52, 50, 45, 52, 56, 98, 97, 45, 97, 48, 102, 55, 45, 54, 98, 99, 55, 102, 55, 57, 57, 102, 57, 100, 55])], isReadOnly = false), key=ac05d55e-c242-48ba-a0f7-6bc7f799f9d7, value={\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"searchId\": null, \"verificationResult\": \"VERIFICATION_FAILED\"}, timestamp=null))",
            "logger_name": "com.arbm.digibank.publisher.IdentityVerificationResultPublisher",
            "thread_name": "DefaultDispatcher-worker-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.844",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.844Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-12-01T09:00:48.732Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c06ddcbf24ce0bba93e4de8f10",
            "spanId": "b822563874001f3f",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.843",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.843Z",
            "@version": "1",
            "message": "Error handler threw an exception",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:208)\n\tat org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:135)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2704)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2585)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2454)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2332)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2003)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1373)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1364)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1255)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(com.arbm.digibank.producer.generated.avro.model.CustomerStatusCommand)' threw exception; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"; nested exception is java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2717)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2687)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2647)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2574)\n\t... 9 common frames omitted\nCaused by: java.lang.NumberFormatException: For input string: \"ee4ea7cb-04d3-4362-82f4-c582e5465241\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n\tat java.base/java.lang.Long.parseLong(Long.java:692)\n\tat java.base/java.lang.Long.parseLong(Long.java:817)\n\tat com.arbm.digibank.consumer.CustomerStatusCommandConsumer.consumeCustomerStatusCommand(CustomerStatusCommandConsumer.kt:28)\n\tat jdk.internal.reflect.GeneratedMethodAccessor631.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)\n\tat org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)\n\tat org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:56)\n\tat org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:347)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:92)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:53)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$FastClassBySpringCGLIB$$cde8c01d.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter$$EnhancerBySpringCGLIB$$393fc30f.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2667)\n\t... 11 common frames omitted\n",
            "springAppName": "customer-service",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.742",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.741Z",
            "@version": "1",
            "message": "Customer ee4ea7cb-04d3-4362-82f4-c582e5465241 statuses will be changed to {\"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"statusType\": \"IDENTITY_VERIFICATION\", \"statusValue\": \"FAILED\", \"comment\": \"Similarity of the identity verification is null; Similarity of the identity verification is false; Validity of the identity verification is false; Customer's verification status ERROR_NOT_READABLE_ID\", \"changedAt\": \"2024-12-01T09:00:48.732Z\"}",
            "logger_name": "com.arbm.digibank.consumer.CustomerStatusCommandConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#5-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c06ddcbf24ce0bba93e4de8f10",
            "spanId": "30092e03c3deca40",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.461",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.461Z",
            "@version": "1",
            "message": "Get devices for customerId: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c25c0af2237105a954378c4831e1c",
            "spanId": "5a954378c4831e1c",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.460",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.459Z",
            "@version": "1",
            "message": "consumeCreateSilentNotificationCommand, notificationId: null, customerId: ee4ea7cb-04d3-4362-82f4-c582e5465241, ttl: 86400",
            "logger_name": "com.arbm.digibank.processor.CreateSilentNotificationCommandProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "674c25c087e1e1070b9a4d826acf129c",
            "spanId": "cb41190048d62db6",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:48.460",
        "kubernetes.container_name": "notification-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:48.46Z",
            "@version": "1",
            "message": "Retrieving DeviceId from customer-service. CustomerId: [ee4ea7cb-04d3-4362-82f4-c582e5465241]",
            "logger_name": "com.arbm.digibank.service.CustomerService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "notification-service",
            "traceId": "674c25c087e1e1070b9a4d826acf129c",
            "spanId": "cb41190048d62db6",
            "bc": "shared"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:43.132",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:43.132Z",
            "@version": "1",
            "message": "Consume: {\"timestamp\": \"2024-12-01T09:00:41.915Z\", \"scanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"document\": {\"status\": \"ERROR_NOT_READABLE_ID\", \"type\": null, \"idSubtype\": null, \"issuingCountry\": null, \"firstName\": null, \"lastName\": null, \"dob\": null, \"expiry\": null, \"issuingDate\": null, \"number\": null, \"usState\": null, \"personalNumber\": null, \"optionalData1\": null, \"placeOfBirth\": null, \"optionalData2\": null, \"address\": null, \"issuingAuthority\": null, \"issuingPlace\": null, \"curp\": null, \"gender\": null, \"nationality\": null, \"taxNumber\": null, \"cpf\": null, \"registrationNumber\": null, \"mothersName\": null, \"fathersName\": null, \"personalIdentificationNumber\": null, \"rgNumber\": null, \"voterIdNumber\": null, \"issuingNumber\": null}, \"transaction\": {\"status\": null, \"source\": null, \"date\": \"2024-12-01T09:00:41.915Z\", \"clientIp\": null, \"customerId\": \"ee4ea7cb-04d3-4362-82f4-c582e5465241\", \"merchantScanReference\": \"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\", \"merchantReportingCriteria\": null}, \"verification\": {\"mrzCheck\": null, \"rejectReason\": null, \"identityVerification\": {\"similarity\": null, \"validity\": false, \"reason\": null}, \"additionalChecks\": {\"addressValidation\": null, \"proofOfResidency\": null, \"personalNumberValidation\": null, \"faceSearchFindings\": null, \"watchlistScreening\": null}}, \"facemap\": null}",
            "logger_name": "com.arbm.digibank.consumer.JumioCallbackCISEventConsumer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#8-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "c5c897490214fc24",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:43.113",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:43.112Z",
            "@version": "1",
            "message": "Jumio retrieval data after callback for -> account id = ec2604f2-0609-4553-a6e7-1c814cd4d159 , customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , workflowExecutionId = ac05d55e-c242-48ba-a0f7-6bc7f799f9d7 , retrievalData = JumioV4Response(account=AccountResponse(id=ec2604f2-0609-4553-a6e7-1c814cd4d159, href=null), workflow=WorkflowExecutionResponse(definitionKey=10032, status=PROCESSED, userReference=ee4ea7cb-04d3-4362-82f4-c582e5465241, customerInternalReference=ee4ea7cb-04d3-4362-82f4-c582e5465241), createdAt=2024-12-01T08:55:53.722Z, startedAt=2024-12-01T09:00:00.921Z, completedAt=2024-12-01T09:00:41.915Z, credentials=[Credentials(id=fb0c25f3-d97e-4dc1-b277-a4913a952d83, category=ID, parts=[CredentialsPart(classifier=FRONT, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/fb0c25f3-d97e-4dc1-b277-a4913a952d83/parts/FRONT), CredentialsPart(classifier=BACK, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/fb0c25f3-d97e-4dc1-b277-a4913a952d83/parts/BACK)]), Credentials(id=4917e0a2-7912-4916-8922-11c5d52716c7, category=SELFIE, parts=[CredentialsPart(classifier=FACE, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/4917e0a2-7912-4916-8922-11c5d52716c7/parts/FACE)]), Credentials(id=30601ee2-e06a-493a-8e25-9189bea721b5, category=FACEMAP, parts=[CredentialsPart(classifier=FACEMAP, href=null), CredentialsPart(classifier=LIVENESS_1, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/30601ee2-e06a-493a-8e25-9189bea721b5/parts/LIVENESS_1), CredentialsPart(classifier=LIVENESS_3, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/30601ee2-e06a-493a-8e25-9189bea721b5/parts/LIVENESS_3), CredentialsPart(classifier=LIVENESS_2, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/30601ee2-e06a-493a-8e25-9189bea721b5/parts/LIVENESS_2), CredentialsPart(classifier=LIVENESS_5, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/30601ee2-e06a-493a-8e25-9189bea721b5/parts/LIVENESS_5), CredentialsPart(classifier=LIVENESS_4, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/30601ee2-e06a-493a-8e25-9189bea721b5/parts/LIVENESS_4), CredentialsPart(classifier=LIVENESS_6, href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/credentials/30601ee2-e06a-493a-8e25-9189bea721b5/parts/LIVENESS_6)])], decision=Decision(risk=Risk(score=100.0), type=REJECTED, details=DecisionDetails(label=REJECTED)), steps=Step(href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159/workflow-executions/ac05d55e-c242-48ba-a0f7-6bc7f799f9d7/steps), capabilities=Capabilities(usability=[CapabilitiesElement(id=5f5b3fb1-b610-4c0b-ae64-38df5679550d, credentials=[CapabilitiesCredentials(id=4917e0a2-7912-4916-8922-11c5d52716c7, category=SELFIE)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=dd12d733-992e-413d-ace3-02384663ab93, credentials=[CapabilitiesCredentials(id=30601ee2-e06a-493a-8e25-9189bea721b5, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK))), CapabilitiesElement(id=c735a8f0-d73c-4636-bb23-8311626b1314, credentials=[CapabilitiesCredentials(id=fb0c25f3-d97e-4dc1-b277-a4913a952d83, category=ID)], decision=CapabilitiesDecision(type=REJECTED, details=CapabilitiesDecisionDetails(label=BAD_QUALITY_IMAGE)))], liveness=[Liveness(id=db5cafb9-a41f-4846-a410-d02e468dfa15, credentials=[CapabilitiesCredentials(id=4917e0a2-7912-4916-8922-11c5d52716c7, category=SELFIE), CapabilitiesCredentials(id=30601ee2-e06a-493a-8e25-9189bea721b5, category=FACEMAP)], decision=CapabilitiesDecision(type=PASSED, details=CapabilitiesDecisionDetails(label=OK)), data=LivenessData(type=IPROOV_STANDARD, predictedAge=40, ageConfidenceRange=31-51, validFaceMapForAuthentication=null))], similarity=[Similarity(id=ea7c2a71-cbbe-4519-ba2f-6a159ad83c78, credentials=[CapabilitiesCredentials(id=fb0c25f3-d97e-4dc1-b277-a4913a952d83, category=ID), CapabilitiesCredentials(id=4917e0a2-7912-4916-8922-11c5d52716c7, category=SELFIE)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=SimiliarityData(similarity=null))], authentication=[], imageChecks=[ImageChecks(id=ff823b99-3114-4d67-900c-177421eda5fc, credentials=[CapabilitiesCredentials(id=fb0c25f3-d97e-4dc1-b277-a4913a952d83, category=ID), CapabilitiesCredentials(id=4917e0a2-7912-4916-8922-11c5d52716c7, category=SELFIE)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), faceSearchFindingsItem=null)], extraction=[Extraction(id=de8eaef8-e0e9-48f1-ba8a-7c3d690380a2, credentials=[CapabilitiesCredentials(id=fb0c25f3-d97e-4dc1-b277-a4913a952d83, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)), data=ExtractionData(type=null, subType=null, issuingCountry=null, firstName=null, lastName=null, dateOfBirth=null, expiryDate=null, issuingDate=null, documentNumber=null, state=null, personalNumber=null, optionalMrzField1=null, optionalMrzField2=null, address=null, issuingAuthority=null, issuingPlace=null, curp=null, gender=null, nationality=null, placeOfBirth=null, taxNumber=null, cpf=null, registrationNumber=null, mothersName=null, fathersName=null, personalIdentificationNumber=null, rgNumber=null, documentIdentificationNumber=null, citizenship=null, religion=null, maritialStatus=null, currentAge=null, lastNameAtBirth=null, remarks=null, disability=null))], dataChecks=[CapabilitiesElement(id=3d015888-27e9-4b23-a5d5-98d2ffdd6665, credentials=[CapabilitiesCredentials(id=fb0c25f3-d97e-4dc1-b277-a4913a952d83, category=ID)], decision=CapabilitiesDecision(type=NOT_EXECUTED, details=CapabilitiesDecisionDetails(label=PRECONDITION_NOT_FULFILLED)))], watchlistScreening=[], addressValidation=[], proofOfResidency=[], drivingLicenseVerification=[], braCpfValidation=[], biometricVerification=[]))",
            "logger_name": "com.arbm.digibank.service.JumioV4CallbackService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "6f67558f03bade25",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:42.871",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:42.87Z",
            "@version": "1",
            "message": "Jumio V4 callback data: JumioV4Callback(callbackSentAt=2024-12-01T09:00:42.842Z, userReference='ee4ea7cb-04d3-4362-82f4-c582e5465241', workflowExecution=WorkflowExecution(id='ac05d55e-c242-48ba-a0f7-6bc7f799f9d7', href=https://retrieval.apac-1.jumio.ai/api/v1/workflow-executions/ac05d55e-c242-48ba-a0f7-6bc7f799f9d7, definitionKey=10032, status=PROCESSED), account=Account(id='ec2604f2-0609-4553-a6e7-1c814cd4d159', href=https://retrieval.apac-1.jumio.ai/api/v1/accounts/ec2604f2-0609-4553-a6e7-1c814cd4d159))",
            "logger_name": "com.arbm.digibank.controller.JumioV4CallbackController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c25ba5e4ccc6c18c07ac41bc606d2",
            "spanId": "6f67558f03bade25",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:32.042",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:32.041Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25af76b961680e254c4a3b9ca904",
            "spanId": "036841b8cccb2679",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:32.040",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:32.04Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25af76b961680e254c4a3b9ca904",
            "spanId": "036841b8cccb2679",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:26.690",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:26.69Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25aa0ff33d1d7cb84d4a2dfbde4a",
            "spanId": "4f8c23d151420e1b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:26.689",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:26.689Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25aa0ff33d1d7cb84d4a2dfbde4a",
            "spanId": "4f8c23d151420e1b",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:21.352",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:21.352Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25a52e28df87690ef5f11522c54b",
            "spanId": "68e2db11bdd4891d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:21.351",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:21.351Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25a52e28df87690ef5f11522c54b",
            "spanId": "68e2db11bdd4891d",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:15.990",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:15.99Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c259f4fc37d8611a7c72a5d06a1d1",
            "spanId": "589f33bed46fa102",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:15.989",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:15.989Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c259f4fc37d8611a7c72a5d06a1d1",
            "spanId": "589f33bed46fa102",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:10.626",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:10.626Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c259a038b96a93d5f7c485a71f6af",
            "spanId": "d8b6ece9623b0741",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:10.625",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:10.625Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-8",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c259a038b96a93d5f7c485a71f6af",
            "spanId": "d8b6ece9623b0741",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:05.230",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:05.229Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25954284e6602fa8ee57320e7595",
            "spanId": "12a30d26bd1e5591",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:05.228",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:05.228Z",
            "@version": "1",
            "message": "Checking for blockers in onboarding checklist to Auto resolve if exist for prospect ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistHealingService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25954284e6602fa8ee57320e7595",
            "spanId": "12a30d26bd1e5591",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:04.746",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:04.746Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: FINISHED , finished on : 2024-12-01T09:00:04.746555Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25947d63b77a07b447a978355b65",
            "spanId": "59ffb33308893a50",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:04.742",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 09:00:04.739",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:04.739Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25947d63b77a07b447a978355b65",
            "spanId": "59ffb33308893a50",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:04.709",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T09:00:04.709Z",
            "@version": "1",
            "message": "Trying to update(verification-status) after finishing JUMIO Scanning by (FE) for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c25947d63b77a07b447a978355b65",
            "spanId": "59ffb33308893a50",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 09:00:04.326",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T09:00:04.325] [INFO] [apollo-server,,] default - Microservice request:  http://customer-service.customer-service.svc.cluster.local:8080/customer-service/v1/customers/ee4ea7cb-04d3-4362-82f4-c582e5465241/status {\"method\":\"GET\",\"headers\":{}}"
    },
    {
        "@timestamp": "2024-12-01 09:00:04.325",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T09:00:04.325] [INFO] [apollo-server,,] default - Microservice response: {\"customerId\":\"ee4ea7cb-04d3-4362-82f4-c582e5465241\",\"createdAt\":\"2024-12-01T08:49:03.953Z\",\"updatedAt\":\"2024-12-01T08:55:53.789Z\",\"nickname\":\"BoeyTan \",\"phoneNumber\":\"*HIDDEN*\",\"email\":\"*HIDDEN*\",\"statuses\":{\"eligibility\":\"PASSED\",\"identityVerifiaction\":\"INITIATED\",\"crr\":\"NOT_INITIATED\",\"cbs\":\"NOT_INITIATED\",\"depositAccounts\":\"INACTIVE\",\"overall\":\"PROSPECT\"},\"type\":\"EXTERNAL_CUSTOMER\",\"mobilePreferences\":{\"pushNotificationsAllowed\":false,\"marketingEmailFlag\":false,\"marketingPhoneCallFlag\":false,\"marketingSmsFlag\":false,\"marketingPushFlag\":false,\"marketingThirdPartyFlag\":false},\"devices\":[{\"deviceId\":\"765\",\"createdAt\":\"2024-12-01T08:49:03.981Z\",\"updatedAt\":\"2024-12-01T08:49:03.981Z\",\"deviceOs\":\"Android 14 (SDK 34)\",\"deviceModel\":\"HONOR REA-NX9\",\"deviceInstallationId\":\"3d456383-343f-4da4-b958-cb847b266f90\",\"deviceStatus\":\"ACTIVE_UNVERIFIED\",\"appInfo\":\"2.0.1\"}],\"accounts\":[],\"identityVerifications\":[{\"identityReferenceId\":\"ac05d55e-c242-48ba-a0f7-6bc7f799f9d7\",\"startVerificationDate\":\"2024-12-01T08:55:53.784Z\",\"status\":\"PENDING\"}],\"employments\":[],\"acceptedDocuments\":[{\"acceptedDocumentId\":9243,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.979Z\",\"document\":{\"id\":30,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Treating+Customer+Fairly+-+ver1Oct22.pdf\",\"title\":\"Treating Customer Fairly\",\"version\":1,\"type\":\"TREATING_CUSTOMER_FAIRLY\",\"alias\":\"TREATING_CUSTOMER_FAIRLY\"}},{\"acceptedDocumentId\":9236,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.966Z\",\"document\":{\"id\":23,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/General+Terms+and+Conditions+-+ver2Oct22.pdf\",\"title\":\"General Terms & Conditions\",\"version\":2,\"type\":\"GENERAL_TERMS_AND_CONDITIONS\",\"alias\":\"GENERAL_TERMS_AND_CONDITIONS\"}},{\"acceptedDocumentId\":9235,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.964Z\",\"document\":{\"id\":37,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Product+Disclosure+Sheet_Debit+Card-i-ver2922024.pdf\",\"title\":\"Debit Card-i Product Disclosure Sheet\",\"version\":4,\"type\":\"DEBIT_CARD_PRODUCT_DISCLOSURE_SHEET\",\"alias\":\"DEBIT_CARD_PRODUCT_DISCLOSURE_SHEET\"}},{\"acceptedDocumentId\":9237,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.968Z\",\"document\":{\"id\":33,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Specific+Terms+and+Conditions+V.20Jun2023.pdf\",\"title\":\"Specific Terms and Conditions\",\"version\":3,\"type\":\"DEPOSIT_AND_CARD_SPECIFIC_TERMS_AND_CONDITIONS\",\"alias\":\"DEPOSIT_AND_CARD_SPECIFIC_TERMS_AND_CONDITIONS\"}},{\"acceptedDocumentId\":9239,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.972Z\",\"document\":{\"id\":26,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Supplementary+TC+DuitNow+Transfer+Terms+and+Conditions++-+ver1Oct22.pdf\",\"title\":\"DuitNow Transfer Terms & Conditions\",\"version\":1,\"type\":\"DUITNOW_TRANSFER_TERMS_AND_CONDITIONS\",\"alias\":\"DUITNOW_TRANSFER_TERMS_AND_CONDITIONS\"}},{\"acceptedDocumentId\":9242,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.978Z\",\"document\":{\"id\":29,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Client+Charter+-+ver1Oct22.pdf\",\"title\":\"Client Charter\",\"version\":1,\"type\":\"CLIENT_CHARTER\",\"alias\":\"CLIENT_CHARTER\"}},{\"acceptedDocumentId\":9233,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.960Z\",\"document\":{\"id\":20,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Personal+Data+Protection+Notice+-+ver1Oct22.pdf\",\"title\":\"Personal Data Protection\",\"version\":2,\"type\":\"PERSONAL_DATA_PROTECTION\",\"alias\":\"PERSONAL_DATA_PROTECTION\"}},{\"acceptedDocumentId\":9234,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.962Z\",\"document\":{\"id\":21,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Product+Disclosure+Sheet_Savings+Account-i+-+ver1Oct22.pdf\",\"title\":\"Savings Account Product Disclosure Sheet\",\"version\":2,\"type\":\"SAVINGS_ACCOUNT_PRODUCT_DISCLOSURE_SHEET\",\"alias\":\"SAVINGS_ACCOUNT_PRODUCT_DISCLOSURE_SHEET\"}},{\"acceptedDocumentId\":9231,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.956Z\",\"document\":{\"id\":17,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Digi+Bank+Deposit+and+Debit+Card+-+Declaration+and+Authorisation+-+ver1Oct22.pdf\",\"title\":\"Deposit Acct & Debit card declaration & authorization\",\"version\":1,\"type\":\"DEPOSIT_ACC_AND_DEBIT_CARD_DECLARATION_AND_AUTHORISATION\",\"alias\":\"DEPOSIT_ACC_AND_DEBIT_CARD_DECLARATION_AND_AUTHORISATION\"}},{\"acceptedDocumentId\":9241,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.976Z\",\"document\":{\"id\":34,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Internet+and+Mobile+Banking+Banking+T%26C+(alrajhi%4024seven+personal+%2B+Rize)+-+ver1Jul23.pdf\",\"title\":\"Internet & Mobile Banking Terms & Conditions\",\"version\":2,\"type\":\"INTERNET_AND_MOBILE_BANKING_TERMS_AND_CONDITIONS\",\"alias\":\"INTERNET_AND_MOBILE_BANKING_TERMS_AND_CONDITIONS\"}},{\"acceptedDocumentId\":9240,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.974Z\",\"document\":{\"id\":27,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/DuitNow+QR+Terms+and+Conditions-+ver1Oct22.pdf\",\"title\":\"DuitNow QR Terms & Conditions\",\"version\":1,\"type\":\"DUITNOW_QR_TERMS_AND_CONDITIONS\",\"alias\":\"DUITNOW_QR_TERMS_AND_CONDITIONS\"}},{\"acceptedDocumentId\":9238,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.970Z\",\"document\":{\"id\":25,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/Supplementary+TC+National+Addressing+Database+(NAD)+Terms+and+Conditions++-+ver1Oct22.pdf\",\"title\":\"National Addressing Databases (NAD) Terms & Conditions\",\"version\":1,\"type\":\"NAD_TERMS_AND_CONDITIONS\",\"alias\":\"NAD_TERMS_AND_CONDITIONS\"}},{\"acceptedDocumentId\":9232,\"acceptedDocumentDate\":\"2024-12-01T08:49:03.958Z\",\"document\":{\"id\":19,\"url\":\"https://prod-912407396582-onboarding-staticfiles-s3.s3.ap-southeast-1.amazonaws.com/PIDM+Brochure.pdf\",\"title\":\"PIDM DIS Brochure\",\"version\":1,\"type\":\"PIDM_DIS_BROCHURE\",\"alias\":\"PIDM_DIS_BROCHURE\"}}],\"dateOfBirth\":\"*HIDDEN*\",\"placeOfBirth\":\"*HIDDEN*\",\"hasSmeAccount\":false,\"mailingAddressSameAsResidence\":false,\"addresses\":[],\"iam\":{\"username\":\"BoeyT\",\"pingOneId\":\"2a0c5db8-a0ed-4cdf-8b1b-e324f0a53d35\"},\"insight\":{\"numberOfSavingPots\":0,\"numberOfActiveCard\":0,\"numberOfFinancing\":0}}"
    },
    {
        "@timestamp": "2024-12-01 09:00:04.263",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T09:00:04.263] [INFO] [apollo-server,,] default - Microservice request:  http://customer-service.customer-service.svc.cluster.local:8080/customer-service/v1/customers/ee4ea7cb-04d3-4362-82f4-c582e5465241 {\"method\":\"GET\",\"headers\":{}}"
    },
    {
        "@timestamp": "2024-12-01 08:55:53.775",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:53.774Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-3]: for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241), for accountId(ec2604f2-0609-4553-a6e7-1c814cd4d159), for flow(10032), responseTopic(onboarding.customer-identity-service.ekyc-response.v3), resultTopic(onboarding.customer-identity-service.ekyc-result.v3)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c249941d3ec23906705a79e0a20bc",
            "spanId": "906705a79e0a20bc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:53.772",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:53.772Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-2]: for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241), for accountId(ec2604f2-0609-4553-a6e7-1c814cd4d159), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c249941d3ec23906705a79e0a20bc",
            "spanId": "906705a79e0a20bc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:53.672",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": "Request contains: JumioV4AccountRequest(customerInternalReference=ee4ea7cb-04d3-4362-82f4-c582e5465241, workflowDefinition=WorkflowDefinition(key=10032, credentials=[Credential(category=ID, country=Country(predefinedType=DEFINED, values=[MYS]), type=Type(predefinedType=DEFINED, values=[ID_CARD]))]), userReference=ee4ea7cb-04d3-4362-82f4-c582e5465241, callbackUrl=https://jumio.api.prod-arbm.com/cis-service/v1/callbacks/verification-status, userConsent=UserConsent(userIp=128.0.0.1, userLocation=UserLocation(country=MYS, state=Kuala Lumpur)))"
    },
    {
        "@timestamp": "2024-12-01 08:55:53.595",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:53.595Z",
            "@version": "1",
            "message": "initVerificationV2-[Step-1]: for customerId(ee4ea7cb-04d3-4362-82f4-c582e5465241), for accountId(null), for flow(10032)",
            "logger_name": "com.arbm.digibank.service.JumioV4AccountService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c249941d3ec23906705a79e0a20bc",
            "spanId": "906705a79e0a20bc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:53.590",
        "kubernetes.container_name": "customer-identity-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:53.59Z",
            "@version": "1",
            "message": "Init verification for ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.controller.V2ApiController",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-identity-service",
            "traceId": "674c249941d3ec23906705a79e0a20bc",
            "spanId": "906705a79e0a20bc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:53.553",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:53.553Z",
            "@version": "1",
            "message": "Trying to initiate Onboarding Identity-Verification to start JUMIO Scanning by (FE) for (MYKAD) for the prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.IdentityVerificationService",
            "thread_name": "http-nio-8080-exec-9",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c249938514df429a845012be8f50f",
            "spanId": "e4d1351e58807297",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.373",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.373Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.372",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_CALLBACK>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 08:55:24.371",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.37Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.369",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : JUMIO_MYKAD_SCANNING>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 08:55:24.367",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.367Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : ASSIGN_MOBILE_PREFERENCES , status: FINISHED , finished on : 2024-12-01T08:55:24.367152Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c247c6d7c23c04683f72c02dc31b7",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.367",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.367Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : ASSIGN_MOBILE_PREFERENCES , status: FINISHED , finished on : 2024-12-01T08:55:24.367773Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.359",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.359Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c247c6d7c23c04683f72c02dc31b7",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.359",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.359Z",
            "@version": "1",
            "message": "Trying to store personal details(preferences-Mobile) of prospect customer(ee4ea7cb-04d3-4362-82f4-c582e5465241)",
            "logger_name": "com.arbm.digibank.service.customer.PersonalDetailsService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c247c6d7c23c04683f72c02dc31b7",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:55:24.336",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:55:24.336Z",
            "@version": "1",
            "message": "Trying to store personal details(preferences) of prospect customer with id ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.PersonalDetailsService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c247c6d7c23c04683f72c02dc31b7",
            "spanId": "2e98eaaa6e36dfef",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.973",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.973Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : ASSIGN_MOBILE_PREFERENCES , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "0ad1c782100ff55e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.971",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : ASSIGN_MOBILE_PREFERENCES>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 08:54:57.968",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.968Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : CUSTOMER_ACCOUNT_IN_IAM , status: FINISHED , finished on : 2024-12-01T08:54:57.967990Z",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c245f52e41e1902846d5910e6a3a3",
            "spanId": "0ad1c782100ff55e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.950",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.949Z",
            "@version": "1",
            "message": "getCustomerActiveDevice ee4ea7cb-04d3-4362-82f4-c582e5465241 ",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c246070a1e4d646ee96a726c96f2c",
            "spanId": "3508b632985fff47",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.949",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.948Z",
            "@version": "1",
            "message": "Getting updateCurrentDevice -> fetchCurrentUserDevice for customer=ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.login.DeviceHandler",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c246070a1e4d646ee96a726c96f2c",
            "spanId": "46ee96a726c96f2c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.942",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.941Z",
            "@version": "1",
            "message": "Update device for customerId: ee4ea7cb-04d3-4362-82f4-c582e5465241, deviceId: activeVerified, xRequestID: 2e782bf0-c27b-90a8-a0b8-bdc4b0d7e3b4, body: DeviceUpdateRequest(deviceOs=N/A, deviceModel=N/A, applicationVersion=Unknown)",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c246070a1e4d646ee96a726c96f2c",
            "spanId": "9ae87d0cc3737d73",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.940",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.94Z",
            "@version": "1",
            "message": "Updating customer device for customer=ee4ea7cb-04d3-4362-82f4-c582e5465241, deviceMetadata=DeviceMetadata(deviceOs=N/A, deviceModel=N/A, applicationVersion=Unknown) | updateCurrentDevice -> [customersApiService.updateDevice]",
            "logger_name": "com.arbm.digibank.service.login.DeviceHandler",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c246070a1e4d646ee96a726c96f2c",
            "spanId": "46ee96a726c96f2c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:57.931",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:57.931Z",
            "@version": "1",
            "message": "Fetch User Details [fetchUserDetails]: UserDetails(pingOneUserId=2a0c5db8-a0ed-4cdf-8b1b-e324f0a53d35, customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c246070a1e4d646ee96a726c96f2c",
            "spanId": "46ee96a726c96f2c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:56.903",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:56.903Z",
            "@version": "1",
            "message": "Fetching user details [fetchUserDetails]:  UserDetails(pingOneUserId=2a0c5db8-a0ed-4cdf-8b1b-e324f0a53d35, customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241, environmentId=44e438c9-1f16-40ed-94fe-e4a18e19c517, enabled=true, disableReason=)",
            "logger_name": "com.arbm.digibank.service.login.BasicLoginServiceImpl",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c246070a1e4d646ee96a726c96f2c",
            "spanId": "46ee96a726c96f2c",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:55.941",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:55.941Z",
            "@version": "1",
            "message": "Create PingOne user account: action=import, customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241, username=BoeyT",
            "logger_name": "com.arbm.digibank.service.CreateUserService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c245f9251e05a7fa6682cafd25d60",
            "spanId": "7fa6682cafd25d60",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:55.797",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:55.796Z",
            "@version": "1",
            "message": "Create user account: customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241, username=BoeyT",
            "logger_name": "com.arbm.digibank.service.CreateUserService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c245f9251e05a7fa6682cafd25d60",
            "spanId": "7fa6682cafd25d60",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:55.797",
        "kubernetes.container_name": "customer-iam-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:55.796Z",
            "@version": "1",
            "message": "Fetching user by customerId: customerId=ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.iamgateway.GatewayUserFetchServiceImpl",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-iam-service",
            "traceId": "674c245f9251e05a7fa6682cafd25d60",
            "spanId": "7fa6682cafd25d60",
            "bc": "iamcustomer"
        }
    },
    {
        "@timestamp": "2024-12-01 08:54:55.791",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : CUSTOMER_ACCOUNT_IN_IAM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 08:54:55.788",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:54:55.788Z",
            "@version": "1",
            "message": "Checklist for prospect customer with ID = ee4ea7cb-04d3-4362-82f4-c582e5465241 is locked successfully!",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c245f52e41e1902846d5910e6a3a3",
            "spanId": "0ad1c782100ff55e",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:53:36.951",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T08:53:36.951] [INFO] [apollo-server,,] default - Microservice response: {\"customerId\":\"ee4ea7cb-04d3-4362-82f4-c582e5465241\"}"
    },
    {
        "@timestamp": "2024-12-01 08:53:36.951",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T08:53:36.951] [INFO] [apollo-server,,] default - {\"http\":{\"headers\":{}},\"data\":{\"createReferralCustomer\":{\"customerId\":\"ee4ea7cb-04d3-4362-82f4-c582e5465241\"}}}"
    },
    {
        "@timestamp": "2024-12-01 08:53:36.927",
        "kubernetes.container_name": "customer-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:53:36.927Z",
            "@version": "1",
            "message": "create referral for cic: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.controller.CustomerController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "customer-service",
            "traceId": "674c24106637860870acecf7b981c3dc",
            "spanId": "70acecf7b981c3dc",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:53:36.917",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T08:53:36.917] [INFO] [apollo-server,,] default - Microservice request:  http://customer-service.customer-service.svc.cluster.local:8080/customer-service/v1/customers/create-referral {\"method\":\"POST\",\"headers\":{\"Content-Type\":\"application/json\"},\"body\":\"{\\\"customerId\\\":\\\"ee4ea7cb-04d3-4362-82f4-c582e5465241\\\",\\\"phoneNumber\\\":\\\"+60166945555\\\",\\\"promoCode\\\":\\\"ALRAJHI21ZUS\\\"}\"}"
    },
    {
        "@timestamp": "2024-12-01 08:53:36.916",
        "kubernetes.container_name": "apollo-server",
        "logBody": "[2024-12-01T08:53:36.916] [INFO] [apollo-server,,] default - {\"input\":{\"customerId\":\"ee4ea7cb-04d3-4362-82f4-c582e5465241\",\"phoneNumber\":\"*HIDDEN*\",\"promoCode\":\"ALRAJHI21ZUS\"}}"
    },
    {
        "@timestamp": "2024-12-01 08:49:04.070",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:49:04.069Z",
            "@version": "1",
            "message": "End saving Prospect customer with ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.OtpService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "spanId": "60268da52fce12e9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:49:04.035",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:49:04.035Z",
            "@version": "1",
            "message": "--send change event -- prospect customer id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : CUSTOMER_ACCOUNT_IN_IAM , status: INITIATED , finished on : null",
            "logger_name": "com.arbm.digibank.service.checklist.ChecklistUpdater",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c22ff7931ea785bfa87a7521023b8",
            "spanId": "60268da52fce12e9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:49:04.031",
        "kubernetes.container_name": "onboarding-service",
        "logBody": "Runner>>>>>>>>>>>>>>>prospect id = ee4ea7cb-04d3-4362-82f4-c582e5465241 , step : CUSTOMER_ACCOUNT_IN_IAM>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    },
    {
        "@timestamp": "2024-12-01 08:49:03.991",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:49:03.99Z",
            "@version": "1",
            "message": "start updating Prospect customer with ID: ee4ea7cb-04d3-4362-82f4-c582e5465241 with statuses, devices, and accepted documents ",
            "logger_name": "com.arbm.digibank.service.customer.OtpService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c22ff7931ea785bfa87a7521023b8",
            "spanId": "60268da52fce12e9",
            "bc": "customers"
        }
    },
    {
        "@timestamp": "2024-12-01 08:49:03.954",
        "kubernetes.container_name": "onboarding-service",
        "logBody": {
            "@timestamp": "2024-12-01T08:49:03.954Z",
            "@version": "1",
            "message": "start saving Prospect customer with ID: ee4ea7cb-04d3-4362-82f4-c582e5465241",
            "logger_name": "com.arbm.digibank.service.customer.OtpService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "onboarding-service",
            "traceId": "674c22ff7931ea785bfa87a7521023b8",
            "spanId": "60268da52fce12e9",
            "bc": "customers"
        }
    }
]