[
    {
        "@timestamp": "2025-02-03 16:59:53.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:53.434Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:53.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:53.434Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:53.430",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:53.43Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:47.430",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:47.43Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:47.426",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:47.426Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.425",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.425Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.423",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.423Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "1d75c19f11144dbf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.422Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2, timestamp=2025-02-02T18:15:17.601860Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601860Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "b2dd37fde6408728",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.420",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.42Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"1d60989c-7f0e-4d9d-96f6-ef0415e93616\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "868a8ca60b433351",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.420",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.42Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5, timestamp=2025-02-02T18:15:17.657282Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.657282Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0eb73077b8d7834a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.419",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.419Z",
            "@version": "1",
            "message": "Portfolio link: 5728fe2e-95b2-4833-be9f-6541f355d1e3 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "868a8ca60b433351",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.418",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.417Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "868a8ca60b433351",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.417Z",
            "@version": "1",
            "message": "Portfolio link: 1ca8affe-59f5-49ae-ae28-0ee32f13198f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c397b7d928802f93",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.417Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"5f9c8f0f-369b-43f7-a738-c07a8a652ea7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c397b7d928802f93",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.415",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.415Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"824e1725-77fc-4930-abce-4e8868d460e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "18596950e6b96b07",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.415",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.415Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c397b7d928802f93",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.414",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.414Z",
            "@version": "1",
            "message": "Portfolio link: 8c32dde8-bb51-422e-bfe6-6152660e31ee set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "18596950e6b96b07",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.412",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.412Z",
            "@version": "1",
            "message": "Portfolio link: d70537b0-7064-4d2d-b57f-444e61d78ac1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "19bee2ae02a64b9c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.412",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.412Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"e5d317f6-f145-4a21-80f4-a891b09c0e56\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "19bee2ae02a64b9c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.412",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.412Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "18596950e6b96b07",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.410",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.41Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"b0fbe6ac-0e51-4150-bb96-adf8c4751d6e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "39192c0b861ae5ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.410",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.41Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "19bee2ae02a64b9c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.409Z",
            "@version": "1",
            "message": "Portfolio link: 4472bf40-b488-4b48-93cb-9f64b8c13ab4 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "39192c0b861ae5ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.407Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d_2, timestamp=2025-02-02T18:12:03.309330Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.309330Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "39192c0b861ae5ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.406",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.406Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34, timestamp=2025-02-02T18:12:03.193924Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.193924Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c7f696c9b094999c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.404",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.404Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801, timestamp=2025-02-02T18:12:03.138203Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.138203Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "b0cf853b517ee800",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.403",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.402Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b, timestamp=2025-02-02T18:12:03.131381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.131381Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f6b343759dcb2148",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.394Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=308362ab-8127-46b2-ba8d-a460b1d3a587, timestamp=2025-02-03T02:05:28.579375Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=232d9861-7c11-6a3c-a2c0-14d34001c352, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T02:05:28.579375Z, lastStatusUpdateTimestamp=2025-02-03T02:05:28.579375Z, failureReason=, associateAccountUpdate=Account(accountId=72e27128-d4e0-45a3-ba40-f5a5af92ed53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "83c2bcfb2812cc22",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.396Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=308362ab-8127-46b2-ba8d-a460b1d3a587_2, timestamp=2025-02-03T02:05:28.860320Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=232d9861-7c11-6a3c-a2c0-14d34001c352, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T02:05:28.579375Z, lastStatusUpdateTimestamp=2025-02-03T02:05:28.860320Z, failureReason=, associateAccountUpdate=Account(accountId=72e27128-d4e0-45a3-ba40-f5a5af92ed53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f3578c2019069d5b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.398Z",
            "@version": "1",
            "message": "Portfolio link: e1b296b3-50c9-4938-bddf-b4871e7e54c3 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f3578c2019069d5b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.398Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"72e27128-d4e0-45a3-ba40-f5a5af92ed53\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f3578c2019069d5b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.399Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d, timestamp=2025-02-02T18:12:03.117591Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.117591Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "b06ff0c734c72408",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.4Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918, timestamp=2025-02-02T18:12:03.146816Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.146816Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "070f52e600dee4b8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.394",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.394Z",
            "@version": "1",
            "message": "Portfolio link: 9642f8af-f3c6-4dc1-a064-2dba62d367f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "5520f3f71fea206c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.394",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.394Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"13b7df83-cade-4afb-ace0-7c089cb3893c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "5520f3f71fea206c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.391Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=959c74e2-5800-4503-8d32-da8bba0c2cd5_2, timestamp=2025-02-02T21:57:05.384133Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ffbff966-42b9-36fa-0e76-7c6a6768675a, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T21:57:05.133133Z, lastStatusUpdateTimestamp=2025-02-02T21:57:05.384133Z, failureReason=, associateAccountUpdate=Account(accountId=13b7df83-cade-4afb-ace0-7c089cb3893c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "5520f3f71fea206c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.390",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.389Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=959c74e2-5800-4503-8d32-da8bba0c2cd5, timestamp=2025-02-02T21:57:05.133133Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ffbff966-42b9-36fa-0e76-7c6a6768675a, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T21:57:05.133133Z, lastStatusUpdateTimestamp=2025-02-02T21:57:05.133133Z, failureReason=, associateAccountUpdate=Account(accountId=13b7df83-cade-4afb-ace0-7c089cb3893c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "9c5a9f23f00d8160",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.389",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.389Z",
            "@version": "1",
            "message": "Portfolio link: eb86c76f-df83-40d8-817d-574d65e7ad10 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e5fde68ac3eb0a15",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.389",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.389Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"feb64eca-f996-4d9a-b6c9-0947d797807d\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "e5fde68ac3eb0a15",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.387",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.387Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=40d37203-380d-494b-8594-00545683cf69_2, timestamp=2025-02-02T21:33:08.038886Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5c0e6bdd-9697-f01f-9eb4-5b92d1d1e1c1, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T21:33:07.714203Z, lastStatusUpdateTimestamp=2025-02-02T21:33:08.038886Z, failureReason=, associateAccountUpdate=Account(accountId=feb64eca-f996-4d9a-b6c9-0947d797807d), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e5fde68ac3eb0a15",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.385",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.385Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"f5938635-c98a-431d-91fb-93114bdd251f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "066ffb6052b97fef",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.385",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.385Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=40d37203-380d-494b-8594-00545683cf69, timestamp=2025-02-02T21:33:07.714203Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5c0e6bdd-9697-f01f-9eb4-5b92d1d1e1c1, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T21:33:07.714203Z, lastStatusUpdateTimestamp=2025-02-02T21:33:07.714203Z, failureReason=, associateAccountUpdate=Account(accountId=feb64eca-f996-4d9a-b6c9-0947d797807d), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "a48907d14b25e22a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.384",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.384Z",
            "@version": "1",
            "message": "Portfolio link: 05841524-da36-46ab-9936-2bcbed069512 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "066ffb6052b97fef",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.382",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.381Z",
            "@version": "1",
            "message": "Portfolio link: 01b97862-a93a-46f1-abc8-ad7dcb5de7aa set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d1001f6b2cb41cc9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.382",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.382Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"a1cf7616-708e-4484-a5cd-fb78b9278d5f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d1001f6b2cb41cc9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.382",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.382Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e_2, timestamp=2025-02-02T18:18:36.210912Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.210912Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "066ffb6052b97fef",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.380",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.379Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d1001f6b2cb41cc9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.379",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.379Z",
            "@version": "1",
            "message": "Portfolio link: d3ac6f3d-52d2-449e-8288-8607db4ce588 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c94ee5fcc0214116",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.379",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.379Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"0d7cb982-1617-45ff-bf52-c4d4de435f5a\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c94ee5fcc0214116",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.377",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.377Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"2e2735a3-9969-4285-a02c-b28db574d000\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "41e05e574975c249",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.377",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.377Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c94ee5fcc0214116",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.376Z",
            "@version": "1",
            "message": "Portfolio link: d2e95cbe-7a6a-44ae-8f10-057f96d01af7 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "41e05e574975c249",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.373Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "41e05e574975c249",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.372",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.372Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e, timestamp=2025-02-02T18:18:35.924393Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.924393Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f12d8a8b6fbdecb4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.370",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.37Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f, timestamp=2025-02-02T18:18:35.903351Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903351Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "6d18b98610c005a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.368",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.368Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba, timestamp=2025-02-02T18:18:35.885991Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.885991Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "473fca8872784a9f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.365",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.364Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.365",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.365Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.365",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.365Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83, timestamp=2025-02-02T18:18:35.872926Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872926Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0e3a757864c1b92e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.364",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.364Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='371a527b-0c4e-4dbb-a0d9-779d0201582d' and payload='{\"event_id\":\"eddde247-190a-48c8-91ca-4f55a93ccf95_2\",\"timestamp\":\"2025-02-02T18:18:32.863712Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.233",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.233Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.233",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.232Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:44.228",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:44.228Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:38.228",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:38.228Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:38.224",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:38.224Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.223",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.223Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.221",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.221Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcf4795a825aae45",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.219Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6a9b25ca-a4e9-49e3-8360-1809a942c7e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "882eeae5a02573b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.219Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8, timestamp=2025-02-02T18:18:32.237102Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.237102Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "623c73c9bfc6cf09",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.217Z",
            "@version": "1",
            "message": "Portfolio link: cb3d47e2-cf41-4d7e-8dbd-00a70ff7ad9d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "882eeae5a02573b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.214",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.213Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "882eeae5a02573b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.211",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.21Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.211",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.21Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.211",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.211Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c, timestamp=2025-02-02T18:15:21.336Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c0bc236f7629ada8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:59:35.210",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:59:35.21Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b191e42c-ee17-495d-b334-483d511a1fe4' and payload='{\"event_id\":\"f70889b8-a50c-48f6-a53e-e1e1d4729657_2\",\"timestamp\":\"2025-02-02T18:15:17.927629Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:44.363",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:44.363Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:44.363",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:44.363Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:44.360",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:44.36Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:38.360",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:38.359Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:38.356",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:38.355Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.355",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.355Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.351",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.351Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='37961a00-12fb-46fe-bc86-3eba2b01f184' and payload='{\"event_id\":\"32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2\",\"timestamp\":\"2025-02-02T18:18:32.638887Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.351",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.351Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.351",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.351Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.351",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.351Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "3ee1ac6fe10a854f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.210",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.21Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.210",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.21Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:35.206",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:35.206Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:29.205",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:29.205Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:29.201",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:29.201Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.201",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.201Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.197Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2fc1033b4136a2b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.196Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657, timestamp=2025-02-02T18:15:17.602876Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.602876Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c90591e62ab3d7e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.194",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.194Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f_2, timestamp=2025-02-02T18:12:01.317155Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:01.317155Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "aac55492555c4131",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.192",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.192Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.192",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.192Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f, timestamp=2025-02-02T18:12:00.880962Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.880962Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e99aa3c334870484",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.191",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.191Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cec1527d-c63d-4dec-9848-789f29b87d85' and payload='{\"event_id\":\"3da00001-379f-4e93-9e01-d1b7fd676102_2\",\"timestamp\":\"2025-02-02T18:12:00.307645Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:58:26.191",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:58:26.191Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:35.349",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:35.349Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:35.349",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:35.349Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:35.346",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:35.346Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:29.345",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:29.345Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:29.342",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:29.342Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.341",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.341Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.338",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.337Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.338",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.338Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8f6da08e78c04e3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.337",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.337Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='82708a52-911c-4515-88a3-c63e151d6454' and payload='{\"event_id\":\"ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2\",\"timestamp\":\"2025-02-02T18:18:32.373190Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.337",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.337Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.190",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.19Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.190",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.19Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:26.186",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:26.185Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:20.185",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:20.185Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:20.179",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:20.178Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:17.178",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:17.178Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:17.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:17.17Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e6907fecb6323b16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:17.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:17.17Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:17.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:17.169Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:57:17.169",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:57:17.169Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='8b248740-9b17-4c13-9109-228b737b9c4e' and payload='{\"event_id\":\"302da870-018a-41d5-9a75-43192cb155a3_2\",\"timestamp\":\"2025-02-02T18:12:00.183405Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:50.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:50.289Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:26.337",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:26.337Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:26.337",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:26.337Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:26.333",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:26.333Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:20.333",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:20.333Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:20.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:20.329Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.329Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.327",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.327Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "dd78af3f0b474d91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.325",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.325Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62, timestamp=2025-02-02T18:18:32.275074Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.275074Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d5b0032e530678b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.323",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.323Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f, timestamp=2025-02-02T18:18:32.250427Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.250427Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "45f76523b683e5b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.321Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"aebc8925-ca78-4905-8f86-4e0c2bbc3969\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0473fd53922f9168",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.321Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95, timestamp=2025-02-02T18:18:32.214034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.214034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "95d739e58ab81721",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.320",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.32Z",
            "@version": "1",
            "message": "Portfolio link: c32e5a1f-0fc2-4cd8-9c8e-cb9f01540b73 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0473fd53922f9168",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.318",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.318Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0473fd53922f9168",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.316",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.316Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe, timestamp=2025-02-02T18:15:21.313898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313898Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c997613745b4c659",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.314",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.314Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6_2, timestamp=2025-02-02T18:15:19.328675Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.328675Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f58b42ab20d6fde3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.31Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.311Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.311Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6, timestamp=2025-02-02T18:15:18.883906Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.883906Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d2844a7be0975fd4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.310",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.31Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='1f547a95-6c8c-4077-bda4-954eb2b99b3b' and payload='{\"event_id\":\"b57bae48-b074-4ef8-ade2-212e40302b35_2\",\"timestamp\":\"2025-02-02T18:15:18.388619Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.169",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.169Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.169",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.169Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:17.164",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:17.164Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:11.164",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:11.164Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:11.160",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:11.16Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:08.159",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:08.159Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:08.153",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:08.152Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:08.153",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:08.153Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:08.153",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:08.153Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "16942f4ca6765480",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:56:08.152",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:56:08.152Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='ed3d439c-c03e-41bd-9f80-3f465806665e' and payload='{\"event_id\":\"0e1bf68f-2a84-4542-9845-3980e502d305_2\",\"timestamp\":\"2025-02-02T18:11:59.886359Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:17.310",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:17.31Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:17.310",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:17.31Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:17.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:17.306Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:11.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:11.306Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:11.302",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:11.302Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.302",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.302Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.297Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.298Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.298Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "fd7c99b893552cc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.297",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.297Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b16cd359-7a1d-4473-9b50-15fe6813671b' and payload='{\"event_id\":\"43924148-99c5-4330-91b4-f69ed9b9a954_2\",\"timestamp\":\"2025-02-02T18:15:18.121289Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.147",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.146Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.147",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.146Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:08.142",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:08.142Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:02.142",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:02.142Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:55:02.137",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:55:02.137Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:59.137",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:59.137Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:59.131",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:59.131Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "816c435e9247281e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:59.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:59.13Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='5bf64cfa-773b-44c5-bd61-b4b0baf5efd8' and payload='{\"event_id\":\"ef19f9fa-112d-42b8-971c-05413cb098fe_2\",\"timestamp\":\"2025-02-02T18:11:59.881603Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:59.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:59.13Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:59.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:59.13Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:08.297",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:08.297Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:08.297",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:08.297Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:08.293",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:08.293Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:02.293",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:02.293Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:54:02.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:54:02.289Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.288Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.285",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.285Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "e31101434847d7bd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.285",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.284Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.285",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.284Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.284",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.284Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='02e28334-4ade-44fa-beed-c1e83b142c38' and payload='{\"event_id\":\"b9140690-89d2-4b72-8a97-b9e00ccdf264_2\",\"timestamp\":\"2025-02-02T18:15:17.957587Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.13Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9cb44a9a-54cb-4fc0-bba6-789926a3e374)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.13Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9cb44a9a-54cb-4fc0-bba6-789926a3e374)\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:59.126",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:59.126Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:55.794",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:55.793Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:55.793",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:55.793Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:55.793",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:55.793Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-f909fc6f-5863-4f93-9564-f5176d8d65a7 sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:55.793",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:55.793Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:53.125",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:53.125Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=be2291c4-0779-4df5-bf06-471c62542700)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:53.122",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:53.122Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.122",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.122Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=3ab1526f-9e24-461c-a6f8-b793481ceb00)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.119Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f7c2c7d44e57e8cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.118",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.118Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102, timestamp=2025-02-02T18:11:59.701332Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.701332Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "df594456ed7b8214",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.117",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.117Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe, timestamp=2025-02-02T18:11:59.668207Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.668207Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "ebd5839f4763c799",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.115",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.115Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3, timestamp=2025-02-02T18:11:59.689817Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.689817Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e53a1e4b8d20fa5e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.114Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305, timestamp=2025-02-02T18:11:59.650040Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.650040Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a1e7a524878ec824",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.114Z",
            "@version": "1",
            "message": "Unknown event type received: PlanUpdateEvent(eventId=116c0074-72fe-4ce8-b505-98ad8be87086, timestamp=2025-02-03T02:37:36.999711Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3187d8f0-e52f-4b40-a7a0-353adecc3078, planId=fe31710b-f7de-4b04-b8d0-434411a833b2, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T02:37:36.999711Z, lastStatusUpdateTimestamp=2025-02-03T02:37:36.999711Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9adb90f9dd6f5524",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.113",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.113Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=116c0074-72fe-4ce8-b505-98ad8be87086, timestamp=2025-02-03T02:37:36.999711Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3187d8f0-e52f-4b40-a7a0-353adecc3078, planId=fe31710b-f7de-4b04-b8d0-434411a833b2, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T02:37:36.999711Z, lastStatusUpdateTimestamp=2025-02-03T02:37:36.999711Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9adb90f9dd6f5524",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.113",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.112Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"70559344-7c19-4286-a211-d8cae654a656\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "b50739e8bde75729",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.111",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.111Z",
            "@version": "1",
            "message": "Portfolio link: 01270845-0a75-44fe-95ef-f73387579e82 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b50739e8bde75729",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.109",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.109Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b50739e8bde75729",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.107",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.107Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5, timestamp=2025-02-02T18:18:35.872620Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872620Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "ef10fbd305d5a6ad",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.101",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.1Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.101",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.1Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:50.096",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:50.096Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:44.096",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:44.096Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:44.092",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:44.092Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:41.091",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:41.091Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:41.089",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:41.089Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9a8455966850c7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:41.083",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:41.083Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:41.083",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:41.083Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:41.079",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:41.079Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:35.078",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:35.078Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:35.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:35.074Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.074Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.072",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.072Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "cea1a258962d7cf8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.070",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.07Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f, timestamp=2025-02-02T18:18:32.270727Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270727Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "5e13e76742824b48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.069Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d, timestamp=2025-02-02T18:18:32.276619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.276619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "31d5468356b80f40",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.069Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"ed277ca9-d065-45b7-830b-60074891b8a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "65092d0b642504f7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.067Z",
            "@version": "1",
            "message": "Portfolio link: 010a602e-be78-4289-a896-658fae32d5af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "65092d0b642504f7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.065",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.065Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "65092d0b642504f7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.065",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.065Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"977948eb-2a17-4a9b-add0-2051070eecd4\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c14a1a2ab20870df",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.063",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.063Z",
            "@version": "1",
            "message": "Portfolio link: 8a8bf865-b994-4326-bf09-62f6bedc92f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c14a1a2ab20870df",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.061",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.061Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c14a1a2ab20870df",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.059",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.059Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131, timestamp=2025-02-02T18:15:21.313774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313774Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "05eebfff553bd8ed",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.058",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.058Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a, timestamp=2025-02-02T18:15:21.335038Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.335038Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "013ee5064f72d476",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.052",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.052Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.052",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.052Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:32.048",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:32.048Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:26.047",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:26.047Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:26.042",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:26.042Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:23.041",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:23.041Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:23.039",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:23.039Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0d239663ef600124",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:23.033",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:23.033Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:23.033",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:23.033Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:23.030",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:23.029Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:17.029",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:17.029Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:17.025",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:17.025Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:14.025",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:14.025Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:14.022",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:14.022Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c1cd81bca7075e8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:14.013",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:14.013Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:14.013",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:14.013Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:14.009",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:14.009Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:08.009",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:08.009Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:08.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:08.005Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:05.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:05.004Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:05.002",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:05.002Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2632b74de5489bde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:05.000",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:05Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746, timestamp=2025-02-02T18:15:17.666778Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.666778Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "df540303ffee2e82",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.999",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.999Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c, timestamp=2025-02-02T18:15:17.645211Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.645211Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2abf1050f6e5b023",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.997",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.997Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"5204f800-b9b9-4d39-9090-612432f352cb\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d353c321b16a24ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.997",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.997Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7, timestamp=2025-02-02T18:15:17.626378Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.626378Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "954d17343b6d0451",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.995",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.995Z",
            "@version": "1",
            "message": "Portfolio link: e06b17b7-b739-0167-ee56-496786a1515d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "d353c321b16a24ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.993",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.993Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "d353c321b16a24ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.991",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.991Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1f96b6c27b7cfcd0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.991",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.991Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c, timestamp=2025-02-02T18:12:03.180258Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.180258Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f491a1498da8f4ba",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.989",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.989Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1f96b6c27b7cfcd0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.987",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.987Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0fba32864cf36dec",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.987",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.987Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1f96b6c27b7cfcd0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.985",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.985Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0fba32864cf36dec",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.983",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.982Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "9e1d43f4ff039973",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.983",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.983Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0fba32864cf36dec",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.981",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.981Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9e1d43f4ff039973",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.978",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.977Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9e1d43f4ff039973",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.976",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.976Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "768e325b62868bfd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.975",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.975Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "5d52b0e218f08f69",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.973Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "0f021198b990e720",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.972",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.972Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "7dcc4c3da2471000",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.970",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.97Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e1eeba4e00db48b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.969",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.969Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.969",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.969Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:53:04.969",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:53:04.969Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:59.283",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:59.283Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:59.283",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:59.283Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:59.280",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:59.28Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:53.279",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:53.279Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:53.276",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:53.276Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:50.275",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:50.275Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:50.272",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:50.272Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "c0c8e747cf44c6f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:50.271",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:50.271Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7bee721e-0f9c-4229-b2d3-fb1acc923a55' and payload='{\"event_id\":\"b5d5568e-03d4-486c-a349-61ca99a12f80_2\",\"timestamp\":\"2025-02-02T18:15:17.884450Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:50.271",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:50.271Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:50.271",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:50.271Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:11.768",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:11.768Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Resetting the last seen epoch of partition deposit.portfolio.account.linked.v1-0 to 159 since the associated topicId changed from null to PVW0AbSQSzak4Y7aqzsxzw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:04.969",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:04.969Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:04.969",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:04.969Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:52:04.965",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:52:04.965Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:58.964",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:58.964Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:58.961",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:58.96Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:55.960",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:55.96Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:55.956",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:55.955Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:55.956",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:55.956Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:55.956",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:55.956Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8a0c6d221d2f474b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:55.955",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:55.955Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70e9cad0-6b40-4d02-9e76-af99e07a2e93' and payload='{\"event_id\":\"7f00e547-7515-463e-9513-a8e5c260fd3d_2\",\"timestamp\":\"2025-02-02T18:18:32.379670Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:50.270",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:50.27Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:50.270",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:50.27Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:50.267",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:50.267Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:44.266",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:44.266Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:44.262",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:44.262Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.262",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.262Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.260",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.259Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "22d99c9839438c39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.258",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.258Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954, timestamp=2025-02-02T18:15:17.633221Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.633221Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "bcc90e45e7678c19",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.256",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.256Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80, timestamp=2025-02-02T18:15:17.601487Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601487Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "89ba6f41fb39e411",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.254",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.254Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264, timestamp=2025-02-02T18:15:17.655289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.655289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f77a8b00c248cbde",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.252Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"3f40eb18-437c-49c7-9750-c5acfc34bf53\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "6c3969faa4e83bb0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.252Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35, timestamp=2025-02-02T18:15:17.651086Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.651086Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "5ff58986062f5314",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.251Z",
            "@version": "1",
            "message": "Portfolio link: 73795a58-b65c-46d8-a93d-ed2e0f03e3b1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "6c3969faa4e83bb0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.249",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.249Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "6c3969faa4e83bb0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.247",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.246Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"add20b62-73b3-4842-b740-951d9ec6078c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "669523d0fa1c64af",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.247",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.247Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279, timestamp=2025-02-02T18:12:03.154431Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.154431Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8dfb3b24ab90639f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.246Z",
            "@version": "1",
            "message": "Portfolio link: b2111ed1-8c3a-4c3b-bc43-e996d71543f1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "669523d0fa1c64af",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.243",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.243Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b07bd9f9-46d2-4dbd-8199-2f50c3e95608_2, timestamp=2025-02-02T20:49:21.619006Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c116aef8-f420-1c10-47ef-c07c44250356, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T20:49:21.340089Z, lastStatusUpdateTimestamp=2025-02-02T20:49:21.619006Z, failureReason=, associateAccountUpdate=Account(accountId=add20b62-73b3-4842-b740-951d9ec6078c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "669523d0fa1c64af",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.241Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"626098d1-ab7f-42da-b0f7-2fd285b1fa5b\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8b0cd78d0cc50634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.241Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b07bd9f9-46d2-4dbd-8199-2f50c3e95608, timestamp=2025-02-02T20:49:21.340089Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c116aef8-f420-1c10-47ef-c07c44250356, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T20:49:21.340089Z, lastStatusUpdateTimestamp=2025-02-02T20:49:21.340089Z, failureReason=, associateAccountUpdate=Account(accountId=add20b62-73b3-4842-b740-951d9ec6078c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "f96a102746164021",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.240",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.24Z",
            "@version": "1",
            "message": "Portfolio link: 43719c32-218a-4faf-9343-6d5ad294196b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8b0cd78d0cc50634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.237",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.237Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6d461672-8a6c-4e1d-b8fd-fa08d4c7fae0_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d56a4f77-d3c1-47d6-86f3-6013de860f6f, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.861518Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=626098d1-ab7f-42da-b0f7-2fd285b1fa5b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "8b0cd78d0cc50634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.231",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.231Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6d461672-8a6c-4e1d-b8fd-fa08d4c7fae0, timestamp=2025-02-02T18:18:35.861518Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d56a4f77-d3c1-47d6-86f3-6013de860f6f, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.861518Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.861518Z, failureReason=, associateAccountUpdate=Account(accountId=626098d1-ab7f-42da-b0f7-2fd285b1fa5b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d6e1873007f0e125",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.23Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d6ec010b-6ede-47c3-a56b-5ca2677cff99' and payload='{\"event_id\":\"2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2\",\"timestamp\":\"2025-02-02T18:18:32.417678Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 7:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.23Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:51:41.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:51:41.23Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-7@42616",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:55.955",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:55.955Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:55.955",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:55.954Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:55.951",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:55.95Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:49.950",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:49.95Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:49.946",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:49.946Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.946",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.946Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.943",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.943Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3372e1e3b8f95490",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.942",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.942Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401, timestamp=2025-02-02T18:18:32.217467Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217467Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f636ae5aaf83b3f0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.941",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.941Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d, timestamp=2025-02-02T18:18:32.217415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217415Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "6be6c8a69e86b37c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.941",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.94Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "126e7510ed401c65",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.939Z",
            "@version": "1",
            "message": "Portfolio link: d6fd8cd7-c240-4c9a-89d6-5cbe5272e654 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "126e7510ed401c65",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.937",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.937Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "126e7510ed401c65",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.937",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.936Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"6d855749-902b-4731-ac3b-5d16c8496476\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a7a1298ae2c46a1b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.935",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.935Z",
            "@version": "1",
            "message": "Portfolio link: b40da19d-1a3b-4d77-8540-9bf1e923fa5f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a7a1298ae2c46a1b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.932",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.932Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125_2, timestamp=2025-02-02T18:15:21.564236Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.564236Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a7a1298ae2c46a1b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.930",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.93Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19, timestamp=2025-02-02T18:15:21.355537Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.355537Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "ce9bd88b7a32a917",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.929",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.929Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125, timestamp=2025-02-02T18:15:21.329310Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329310Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "197d6ebb5414d28a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.928",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.927Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36_2, timestamp=2025-02-02T18:15:19.336071Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.336071Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "05e6df96d39c677c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.925",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.925Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36, timestamp=2025-02-02T18:15:18.859365Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.859365Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "05910df6451941dc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.925",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.925Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.925",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.925Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:46.925",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:46.924Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='426606eb-8509-4077-8372-7c0a8a3956b5' and payload='{\"event_id\":\"730b71fb-e333-4a1b-b909-fa384032c0c9_2\",\"timestamp\":\"2025-02-02T18:15:18.430034Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:41.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:41.23Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:41.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:41.23Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:41.226",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:41.226Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:35.226",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:35.225Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:35.222",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:35.222Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.221",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.221Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.219Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "0a89c2cd9356c2d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.217Z",
            "@version": "1",
            "message": "Portfolio link: 038dcdc9-070c-451b-a1c7-0ed5784aa4c8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "24211a65d224dd8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.217Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"5e7d9b64-724e-483a-ae7a-2f361b352afc\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "24211a65d224dd8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.217Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb, timestamp=2025-02-02T18:18:32.277746Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.277746Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d2ec51a3647dfe0f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.215",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.215Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6b5b99e3-7143-4e68-ae90-2c82a1d67f9a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=767f8c3c-2cad-4a3f-bc54-6fc658084c48, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.351735Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=5e7d9b64-724e-483a-ae7a-2f361b352afc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "24211a65d224dd8d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.214",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.214Z",
            "@version": "1",
            "message": "Portfolio link: 0a68f670-9851-4844-bab9-a57f10abc65d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "858412a1a8e50ed4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.214",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.214Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"cc96472f-92e9-4e4f-8945-7ef0cc3558e3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "858412a1a8e50ed4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.212Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"3f97c1ca-bd5a-4a4d-8c17-a16d5711379b\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "800e641ab00c2dd3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.212Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9439ff35-9133-48cc-af6a-fe43d19d450e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e93d0211-5c5d-4f61-89f8-f7dc88928c7a, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.330879Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=cc96472f-92e9-4e4f-8945-7ef0cc3558e3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "858412a1a8e50ed4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.211",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.211Z",
            "@version": "1",
            "message": "Portfolio link: b714ade9-d1f1-4457-81a2-423a171d3e9f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "800e641ab00c2dd3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.206",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.206Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8fcdba86-4cae-4e9e-9dfb-902ff5c5f1fa_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=4a024cfd-73d6-431c-96d6-5695f7a71d72, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.334539Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=3f97c1ca-bd5a-4a4d-8c17-a16d5711379b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "800e641ab00c2dd3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.204",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.204Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8fcdba86-4cae-4e9e-9dfb-902ff5c5f1fa, timestamp=2025-02-02T18:15:21.334539Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=4a024cfd-73d6-431c-96d6-5695f7a71d72, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.334539Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.334539Z, failureReason=, associateAccountUpdate=Account(accountId=3f97c1ca-bd5a-4a4d-8c17-a16d5711379b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "6336612c7340a02d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.202Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6b5b99e3-7143-4e68-ae90-2c82a1d67f9a, timestamp=2025-02-02T18:15:21.351735Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=767f8c3c-2cad-4a3f-bc54-6fc658084c48, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.351735Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.351735Z, failureReason=, associateAccountUpdate=Account(accountId=5e7d9b64-724e-483a-ae7a-2f361b352afc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "d1345d400f8dc58f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.199",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.198Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-7@42608",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.199",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.199Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9439ff35-9133-48cc-af6a-fe43d19d450e, timestamp=2025-02-02T18:15:21.330879Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e93d0211-5c5d-4f61-89f8-f7dc88928c7a, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.330879Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.330879Z, failureReason=, associateAccountUpdate=Account(accountId=cc96472f-92e9-4e4f-8945-7ef0cc3558e3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "bf7087dabc67c99c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.198Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='68e23076-aaf4-4ccf-98eb-4ef3461a2894' and payload='{\"event_id\":\"e1b9785b-87f8-4a1b-b2c2-2022c975723c_2\",\"timestamp\":\"2025-02-02T18:15:17.883862Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 7:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:50:32.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:50:32.198Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:46.924",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:46.924Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:46.924",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:46.924Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:46.920",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:46.919Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:40.919",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:40.919Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:40.915",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:40.915Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:37.915",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:37.914Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:37.911",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:37.91Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "48bc5da763f38041",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:37.910",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:37.91Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='db56dc6b-5dbb-4e40-abd0-9dced38150fd' and payload='{\"event_id\":\"e04cfe2a-743c-4828-9070-1db0a12573cd_2\",\"timestamp\":\"2025-02-02T18:15:18.083039Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:37.910",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:37.91Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:37.910",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:37.91Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:32.197",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:32.197Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:32.197",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:32.197Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:32.193",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:32.193Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:26.193",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:26.193Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:26.189",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:26.189Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.189",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.189Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.186",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.186Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "15a964734054af66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.183",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.183Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c, timestamp=2025-02-02T18:15:17.609848Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.609848Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f3937ddda1b446382c119bd35c5e",
            "spanId": "02f9998d27b58c34",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.169Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=159}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42990, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=158}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 3 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=161}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=159}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=154}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.17Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.160",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.16Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7649, memberId='consumer-deposit_portfolio_service_prod-1-f909fc6f-5863-4f93-9564-f5176d8d65a7', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.160",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.16Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.160",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.16Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:23.149",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:23.149Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7649: {consumer-deposit_portfolio_service_prod-1-f909fc6f-5863-4f93-9564-f5176d8d65a7=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:22.736",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:22.735Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight METADATA request with correlation id 4353 due to node 3 being disconnected (elapsed time since creation: 31027ms, elapsed time since send: 31027ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:49:22.735",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:49:22.735Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 3 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:55.715",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:55.715Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7649, memberId='consumer-deposit_portfolio_service_prod-1-f909fc6f-5863-4f93-9564-f5176d8d65a7', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:52.711",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:52.711Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:52.711",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:52.711Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:52.695",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:52.695Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 1 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:52.695",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:52.695Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 6 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:52.667",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:52.667Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 4 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.710",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.71Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 5 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 2 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "Error occurred while not processing records",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)\n\tat brave.kafka.clients.TracingConsumer.commitSync(TracingConsumer.java:189)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3064)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3059)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3045)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2837)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1331)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Lost previously assigned partitions vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions lost: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions revoked: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.709Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.708",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.708Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "26c2122fd32bc14d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.708",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.708Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Failing OffsetCommit request since the consumer is not part of an active group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.707",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.707Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "26c2122fd32bc14d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.705",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.705Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "3b5fb7003c3666c1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.705",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.705Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "26c2122fd32bc14d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.704",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.704Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3b5fb7003c3666c1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.702",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.702Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "af4131d54a451172",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.702",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.702Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3b5fb7003c3666c1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.701",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.701Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "af4131d54a451172",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.697",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.697Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "af4131d54a451172",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.695",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.695Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "2753381a93701f7b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.693Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "5e2db22b6abd7575",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.691",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.691Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "7ba8a2d34c828d44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.689Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "bf282b53c2d2b639",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.684",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.683Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.684",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.684Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "6fd0f88fd7d22daf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.683Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:51.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:51.683Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:37.909",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:37.908Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:37.909",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:37.908Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:37.904",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:37.904Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:31.904",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:31.904Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:31.899",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:31.899Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:28.899",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:28.899Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:28.895",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:28.894Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:28.895",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:28.895Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a412cbc60064861d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:28.894",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:28.894Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf' and payload='{\"event_id\":\"cf95cbd9-3d29-4bd7-94a6-06f003261996_2\",\"timestamp\":\"2025-02-02T18:15:17.816588Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:48:28.894",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:48:28.894Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:51.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:51.683Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:51.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:51.683Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:51.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:51.679Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:45.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:45.679Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:45.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:45.674Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:42.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:42.674Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:42.670",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:42.67Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:42.670",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:42.67Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48deb87c32b2cc49",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:42.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:42.669Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70e9cad0-6b40-4d02-9e76-af99e07a2e93' and payload='{\"event_id\":\"7f00e547-7515-463e-9513-a8e5c260fd3d_2\",\"timestamp\":\"2025-02-02T18:18:32.379670Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:42.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:42.669Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:28.894",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:28.894Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:28.894",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:28.894Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:28.890",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:28.89Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:22.890",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:22.889Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:22.886",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:22.886Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.886",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.886Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.884",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.883Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b92a353653a18873",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.882",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.882Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9, timestamp=2025-02-02T18:15:17.663083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.663083Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f81d3de5658a183a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.881",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.881Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd, timestamp=2025-02-02T18:15:17.632413Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.632413Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "10fc12a0f520fe84",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.880",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.879Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996, timestamp=2025-02-02T18:15:17.653597Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.653597Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "01a7283803e55ca8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.879",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.879Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"6a543854-abc3-4604-a4a6-3ce3ed17e540\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a23c070ea08bd20e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.878",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.878Z",
            "@version": "1",
            "message": "Portfolio link: df5f254f-4e48-44a4-988d-d3404218ac58 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a23c070ea08bd20e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.875",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.875Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a23c070ea08bd20e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.874",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.874Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5, timestamp=2025-02-02T18:12:03.175090Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.175090Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a444babf0955888f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.873",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.873Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Resetting the last seen epoch of partition deposit.portfolio.created.v1-0 to 157 since the associated topicId changed from null to gYkVB7EmRlG5nOpH1yh__Q",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.873",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.873Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"16a09951-9ba5-419e-bef8-84622a082b17\", \"customerId\": \"1748736000001872\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1abd42743f21c939",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.745",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.745Z",
            "@version": "1",
            "message": "Portfolio: 16a09951-9ba5-419e-bef8-84622a082b17 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1abd42743f21c939",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.742",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.742Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"fe31710b-f7de-4b04-b8d0-434411a833b2\", \"accountId\": \"d4bed9d0-fb77-43b0-9ab5-d7f286327b48\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "568574a6c9be64f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.742",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.742Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5c14a408-c41e-4436-b697-eb197a59f619_2, timestamp=2025-02-03T04:03:34.129802Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=39ddd032-0265-4e3c-bafc-a61b70ad9e89, planId=16a09951-9ba5-419e-bef8-84622a082b17, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T04:03:33.238294Z, lastStatusUpdateTimestamp=2025-02-03T04:03:34.129802Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1abd42743f21c939",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.740",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.74Z",
            "@version": "1",
            "message": "Portfolio link: 194567ce-a96f-4de0-95e5-9265adf8186f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "568574a6c9be64f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.738",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.738Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b3353bf7-fe0a-4d49-b4ef-e51b5aabd371_2, timestamp=2025-02-03T03:25:55.505843Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d1f95511-ea94-93cb-d2a4-c369f5a0a5bb, planId=fe31710b-f7de-4b04-b8d0-434411a833b2, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T03:25:55.239906Z, lastStatusUpdateTimestamp=2025-02-03T03:25:55.505843Z, failureReason=, associateAccountUpdate=Account(accountId=d4bed9d0-fb77-43b0-9ab5-d7f286327b48), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "568574a6c9be64f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.736",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.736Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"2f397384-aef1-4955-a3d2-1e5d93a2d3c6\", \"accountId\": \"847adace-e1ba-4129-bd14-26ad4ddb5319\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "214496d766ae6693",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.736",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.736Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b3353bf7-fe0a-4d49-b4ef-e51b5aabd371, timestamp=2025-02-03T03:25:55.239906Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d1f95511-ea94-93cb-d2a4-c369f5a0a5bb, planId=fe31710b-f7de-4b04-b8d0-434411a833b2, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T03:25:55.239906Z, lastStatusUpdateTimestamp=2025-02-03T03:25:55.239906Z, failureReason=, associateAccountUpdate=Account(accountId=d4bed9d0-fb77-43b0-9ab5-d7f286327b48), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "17963d683eee1a2e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.735",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.735Z",
            "@version": "1",
            "message": "Portfolio link: 7f1120fe-1782-425d-bd92-c3f427b7049b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "214496d766ae6693",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.732",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.732Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f9ce07e-801b-42c8-b43c-36311a1840ab_2, timestamp=2025-02-03T02:25:45.446910Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8ce1311f-cf02-3a1e-5f6f-16562968b243, planId=2f397384-aef1-4955-a3d2-1e5d93a2d3c6, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T02:25:45.230728Z, lastStatusUpdateTimestamp=2025-02-03T02:25:45.446910Z, failureReason=, associateAccountUpdate=Account(accountId=847adace-e1ba-4129-bd14-26ad4ddb5319), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "214496d766ae6693",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.731",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.731Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"e8997912-4343-4217-a30f-267737c20f84\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2cb3da10abb40f42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.731",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.731Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f9ce07e-801b-42c8-b43c-36311a1840ab, timestamp=2025-02-03T02:25:45.230728Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8ce1311f-cf02-3a1e-5f6f-16562968b243, planId=2f397384-aef1-4955-a3d2-1e5d93a2d3c6, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T02:25:45.230728Z, lastStatusUpdateTimestamp=2025-02-03T02:25:45.230728Z, failureReason=, associateAccountUpdate=Account(accountId=847adace-e1ba-4129-bd14-26ad4ddb5319), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "ec9e5942cbf721b6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.729",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.729Z",
            "@version": "1",
            "message": "Portfolio link: 0476eca2-34c1-4945-93e3-33dbb8b35db8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2cb3da10abb40f42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.727",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.727Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1_2, timestamp=2025-02-02T20:49:28.710444Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.710444Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2cb3da10abb40f42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.726",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.725Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1, timestamp=2025-02-02T20:49:28.467773Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.467773Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8674726776d83240",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.725",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.725Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"272f2b99-38d9-45be-ba67-d5fb9d9f88c0\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d315220e3bee8efd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.724",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.724Z",
            "@version": "1",
            "message": "Portfolio link: 5fc8d7a4-f280-4f8f-a63a-85f60a1add38 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "d315220e3bee8efd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.722",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.721Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"9790d47d-51cc-46ba-9966-9bef635f9bb9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a91ce108b8381c64",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.722",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.722Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "d315220e3bee8efd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.720",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.72Z",
            "@version": "1",
            "message": "Portfolio link: 3fc46cbb-75b9-42a1-9852-3e05ff6531c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a91ce108b8381c64",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.718",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.718Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"55af6aea-2424-4cb6-a7e0-dc8ebdceff23\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c0c3d830807e02f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.718",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.718Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a91ce108b8381c64",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.716",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.716Z",
            "@version": "1",
            "message": "Portfolio link: 9ff492fc-605b-4132-b5a2-7ecc1c685b27 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c0c3d830807e02f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.713",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.713Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c0c3d830807e02f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.711",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.711Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0, timestamp=2025-02-02T18:18:35.903081Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903081Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "be5a93990e5eda5e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.710",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.71Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e, timestamp=2025-02-02T18:18:35.856574Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.856574Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "7751c74a60cae356",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.708",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.707Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.708",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.708Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454, timestamp=2025-02-02T18:18:35.859684Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.859684Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e923e86827888bc6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.707",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.707Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d7400648-0588-46be-ae7f-91e0385a8291' and payload='{\"event_id\":\"58a87771-a9fb-462f-b149-600751268491_2\",\"timestamp\":\"2025-02-02T18:18:32.462144Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 3:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:19.707",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:19.707Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:47:10.755",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:47:10.754Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:42.667",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:42.667Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:42.667",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:42.667Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:42.663",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:42.663Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:36.663",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:36.663Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:36.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:36.659Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.651Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "9a00ebba58d60109",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.653Z",
            "@version": "1",
            "message": "Portfolio link: d6fd8cd7-c240-4c9a-89d6-5cbe5272e654 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "9a00ebba58d60109",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.653Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "9a00ebba58d60109",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.653Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d, timestamp=2025-02-02T18:18:32.217415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217415Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "6743e0397534cf37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.655Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401, timestamp=2025-02-02T18:18:32.217467Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217467Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "2854e23f99a21824",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.657Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.659Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1b25d1776cb5631",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.648Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125_2, timestamp=2025-02-02T18:15:21.564236Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.564236Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "221dfeeb2e261e9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.65Z",
            "@version": "1",
            "message": "Portfolio link: b40da19d-1a3b-4d77-8540-9bf1e923fa5f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "221dfeeb2e261e9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.65Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"6d855749-902b-4731-ac3b-5d16c8496476\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "221dfeeb2e261e9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.638Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='426606eb-8509-4077-8372-7c0a8a3956b5' and payload='{\"event_id\":\"730b71fb-e333-4a1b-b909-fa384032c0c9_2\",\"timestamp\":\"2025-02-02T18:15:18.430034Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.639Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.639Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.639Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36, timestamp=2025-02-02T18:15:18.859365Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.859365Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "174f40c5ce61304f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.642Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36_2, timestamp=2025-02-02T18:15:19.336071Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.336071Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "d380e97d6aafb731",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.644Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125, timestamp=2025-02-02T18:15:21.329310Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329310Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "f941e29cb16e5be0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:33.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:33.646Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19, timestamp=2025-02-02T18:15:21.355537Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.355537Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "a244bac424a870f5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:19.707",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:19.707Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:19.707",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:19.707Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:19.703",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:19.703Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:13.702",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:13.702Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:13.698",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:13.698Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.698",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.698Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.696",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.696Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "14728ab6ffb2ffd2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.694",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.694Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"13b7df83-cade-4afb-ace0-7c089cb3893c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c9e4f82cda0df562",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.694",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.694Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491, timestamp=2025-02-02T18:18:32.218115Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.218115Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "075385e6986a6d9b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.693Z",
            "@version": "1",
            "message": "Portfolio link: 9642f8af-f3c6-4dc1-a064-2dba62d367f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c9e4f82cda0df562",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.691",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.69Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=959c74e2-5800-4503-8d32-da8bba0c2cd5_2, timestamp=2025-02-02T21:57:05.384133Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ffbff966-42b9-36fa-0e76-7c6a6768675a, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T21:57:05.133133Z, lastStatusUpdateTimestamp=2025-02-02T21:57:05.384133Z, failureReason=, associateAccountUpdate=Account(accountId=13b7df83-cade-4afb-ace0-7c089cb3893c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c9e4f82cda0df562",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.689Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"feb64eca-f996-4d9a-b6c9-0947d797807d\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "417c3072f2f0e922",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.689Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=959c74e2-5800-4503-8d32-da8bba0c2cd5, timestamp=2025-02-02T21:57:05.133133Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ffbff966-42b9-36fa-0e76-7c6a6768675a, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T21:57:05.133133Z, lastStatusUpdateTimestamp=2025-02-02T21:57:05.133133Z, failureReason=, associateAccountUpdate=Account(accountId=13b7df83-cade-4afb-ace0-7c089cb3893c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8368fd378174be44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.687Z",
            "@version": "1",
            "message": "Portfolio link: eb86c76f-df83-40d8-817d-574d65e7ad10 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "417c3072f2f0e922",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.685",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.685Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=40d37203-380d-494b-8594-00545683cf69_2, timestamp=2025-02-02T21:33:08.038886Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5c0e6bdd-9697-f01f-9eb4-5b92d1d1e1c1, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T21:33:07.714203Z, lastStatusUpdateTimestamp=2025-02-02T21:33:08.038886Z, failureReason=, associateAccountUpdate=Account(accountId=feb64eca-f996-4d9a-b6c9-0947d797807d), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "417c3072f2f0e922",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.684",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.683Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"f5938635-c98a-431d-91fb-93114bdd251f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "9cbfc2471b9e8e91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.684",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.684Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=40d37203-380d-494b-8594-00545683cf69, timestamp=2025-02-02T21:33:07.714203Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5c0e6bdd-9697-f01f-9eb4-5b92d1d1e1c1, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T21:33:07.714203Z, lastStatusUpdateTimestamp=2025-02-02T21:33:07.714203Z, failureReason=, associateAccountUpdate=Account(accountId=feb64eca-f996-4d9a-b6c9-0947d797807d), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "74aa157b23a9bab6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.682",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.682Z",
            "@version": "1",
            "message": "Portfolio link: 05841524-da36-46ab-9936-2bcbed069512 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9cbfc2471b9e8e91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.68Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"a1cf7616-708e-4484-a5cd-fb78b9278d5f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "be9777e0b5bf466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.68Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e_2, timestamp=2025-02-02T18:18:36.210912Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.210912Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "9cbfc2471b9e8e91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.678",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.678Z",
            "@version": "1",
            "message": "Portfolio link: 01b97862-a93a-46f1-abc8-ad7dcb5de7aa set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "be9777e0b5bf466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.676",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.676Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"0d7cb982-1617-45ff-bf52-c4d4de435f5a\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "e2563685bb1ea6bb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.676",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.676Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "be9777e0b5bf466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.674Z",
            "@version": "1",
            "message": "Portfolio link: d3ac6f3d-52d2-449e-8288-8607db4ce588 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e2563685bb1ea6bb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.672",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.672Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"2e2735a3-9969-4285-a02c-b28db574d000\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "aaa95358249e4602",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.672",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.672Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e2563685bb1ea6bb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.670",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.67Z",
            "@version": "1",
            "message": "Portfolio link: d2e95cbe-7a6a-44ae-8f10-057f96d01af7 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "aaa95358249e4602",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.667",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.667Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "aaa95358249e4602",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.666",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.666Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e, timestamp=2025-02-02T18:18:35.924393Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.924393Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "57f0c1febdae1128",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.664",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.664Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f, timestamp=2025-02-02T18:18:35.903351Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903351Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "409f568882914f64",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.663",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.663Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba, timestamp=2025-02-02T18:18:35.885991Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.885991Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "4e7865a1d91c1efc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.66Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='371a527b-0c4e-4dbb-a0d9-779d0201582d' and payload='{\"event_id\":\"eddde247-190a-48c8-91ca-4f55a93ccf95_2\",\"timestamp\":\"2025-02-02T18:18:32.863712Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.66Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.66Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:46:10.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:46:10.66Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83, timestamp=2025-02-02T18:18:35.872926Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872926Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c4cdfec567a75180",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:33.682",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:33.634Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:33.682",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:33.638Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:33.682",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:33.638Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:27.633",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:27.633Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:27.630",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:27.63Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:24.630",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:24.629Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:24.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:24.626Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "15bd26f9e75413e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:24.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:24.626Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:24.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:24.626Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:24.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:24.625Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='db56dc6b-5dbb-4e40-abd0-9dced38150fd' and payload='{\"event_id\":\"e04cfe2a-743c-4828-9070-1db0a12573cd_2\",\"timestamp\":\"2025-02-02T18:15:18.083039Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:10.659",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:10.658Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:10.658",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:10.658Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:10.654",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:10.654Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:04.654",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:04.654Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:04.650",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:04.65Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:01.649",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:01.649Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:01.644",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:01.644Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b330a0c11d453d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:01.644",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:01.644Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:01.644",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:01.644Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:45:01.644",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:45:01.644Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='37961a00-12fb-46fe-bc86-3eba2b01f184' and payload='{\"event_id\":\"32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2\",\"timestamp\":\"2025-02-02T18:18:32.638887Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:24.625",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:24.625Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:24.625",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:24.625Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:24.621",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:24.621Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:18.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:18.621Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:18.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:18.617Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:15.617",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:15.617Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:15.613",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:15.612Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:15.613",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:15.613Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:15.613",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:15.613Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "546b30455364f7b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:15.612",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:15.612Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf' and payload='{\"event_id\":\"cf95cbd9-3d29-4bd7-94a6-06f003261996_2\",\"timestamp\":\"2025-02-02T18:15:17.816588Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:01.643",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:01.643Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:01.643",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:01.643Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:44:01.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:44:01.638Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:55.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:55.638Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:55.634",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:55.634Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:52.633",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:52.633Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:52.629",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:52.629Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:52.629",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:52.629Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2d30f4e263636473",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:52.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:52.628Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='82708a52-911c-4515-88a3-c63e151d6454' and payload='{\"event_id\":\"ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2\",\"timestamp\":\"2025-02-02T18:18:32.373190Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:52.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:52.628Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:30.525",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:30.525Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:30.525",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:30.525Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:30.525",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:30.525Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-e5a17bff-6f8c-44f5-887e-7347277b481b sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:30.525",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:30.524Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:27.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:27.634Z",
            "@version": "1",
            "message": "[Producer clientId=producer-2] Resetting the last seen epoch of partition deposit.portfolio.account.linked.v1-0 to 159 since the associated topicId changed from null to PVW0AbSQSzak4Y7aqzsxzw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:15.612",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:15.612Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:15.612",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:15.612Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:15.608",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:15.608Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:09.608",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:09.608Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:09.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:09.604Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.603",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.603Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.601",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.601Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "1839bc1bbd152b41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.600",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.6Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9, timestamp=2025-02-02T18:15:17.663083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.663083Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "48a7085b5d0992da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.598",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.598Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd, timestamp=2025-02-02T18:15:17.632413Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.632413Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "ba3341deafc6ff83",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.596",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.596Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"6a543854-abc3-4604-a4a6-3ce3ed17e540\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0b58799fb4cd9f36",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.596",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.596Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996, timestamp=2025-02-02T18:15:17.653597Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.653597Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "68c2bb39700265d7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.595",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.595Z",
            "@version": "1",
            "message": "Portfolio link: df5f254f-4e48-44a4-988d-d3404218ac58 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "0b58799fb4cd9f36",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.592",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.592Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "0b58799fb4cd9f36",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.59Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9\", \"accountId\": \"c10b1cfa-d072-4cde-a8b8-185ccdcb3274\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "811bfda872ca7700",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.59Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5, timestamp=2025-02-02T18:12:03.175090Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.175090Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "cb5f03908face592",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.589Z",
            "@version": "1",
            "message": "Portfolio link: 6386aee7-5929-44a6-b5a1-58dc0f192ad4 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "811bfda872ca7700",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.587Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=89561828-6351-40dc-ae15-73a3d8edb80c_2, timestamp=2025-02-03T04:31:33.325570Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70552ce6-2a2c-f552-5ce6-d1f7f59459da, planId=3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T04:31:32.958096Z, lastStatusUpdateTimestamp=2025-02-03T04:31:33.325570Z, failureReason=, associateAccountUpdate=Account(accountId=c10b1cfa-d072-4cde-a8b8-185ccdcb3274), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "811bfda872ca7700",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.585",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.585Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9\", \"customerId\": \"1748736000001871\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "17c511500db56765",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.585",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.585Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=89561828-6351-40dc-ae15-73a3d8edb80c, timestamp=2025-02-03T04:31:32.958096Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70552ce6-2a2c-f552-5ce6-d1f7f59459da, planId=3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T04:31:32.958096Z, lastStatusUpdateTimestamp=2025-02-03T04:31:32.958096Z, failureReason=, associateAccountUpdate=Account(accountId=c10b1cfa-d072-4cde-a8b8-185ccdcb3274), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "a6a6ff7624681653",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.584",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.584Z",
            "@version": "1",
            "message": "Portfolio: 3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "17c511500db56765",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.575Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"8b69c629-ef1b-4bcf-aeb9-0183359d456b\", \"customerId\": \"1748736000001870\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "fc5f3d907782ad88",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.575Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38289735-0cd6-41d9-bfd3-ad910c309b47_2, timestamp=2025-02-03T04:01:55.043154Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6c099f6-5bb5-4675-8509-bed8c4dad9aa, planId=3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T04:01:54.301835Z, lastStatusUpdateTimestamp=2025-02-03T04:01:55.043154Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "17c511500db56765",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.574",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.574Z",
            "@version": "1",
            "message": "Portfolio: 8b69c629-ef1b-4bcf-aeb9-0183359d456b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "fc5f3d907782ad88",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.571Z",
            "@version": "1",
            "message": "Unknown event type received: PlanUpdateEvent(eventId=5f987e90-bfa5-44e2-ad2f-36d63c4cc52f, timestamp=2025-02-03T03:18:05.409334Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb7ab099-a938-4a61-af47-b96dabd7732d, planId=8b69c629-ef1b-4bcf-aeb9-0183359d456b, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T03:18:05.409334Z, lastStatusUpdateTimestamp=2025-02-03T03:18:05.409334Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "ae078772be4dc040",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.572Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5f987e90-bfa5-44e2-ad2f-36d63c4cc52f_2, timestamp=2025-02-03T03:18:06.367746Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cb7ab099-a938-4a61-af47-b96dabd7732d, planId=8b69c629-ef1b-4bcf-aeb9-0183359d456b, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T03:18:05.409334Z, lastStatusUpdateTimestamp=2025-02-03T03:18:06.367746Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "fc5f3d907782ad88",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.569",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.569Z",
            "@version": "1",
            "message": "[Producer clientId=producer-2] Resetting the last seen epoch of partition deposit.portfolio.created.v1-0 to 157 since the associated topicId changed from null to gYkVB7EmRlG5nOpH1yh__Q",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.569",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.569Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"2f397384-aef1-4955-a3d2-1e5d93a2d3c6\", \"customerId\": \"1748736000001868\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "b1c63402cfadfafc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.569",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.569Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5f987e90-bfa5-44e2-ad2f-36d63c4cc52f, timestamp=2025-02-03T03:18:05.409334Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb7ab099-a938-4a61-af47-b96dabd7732d, planId=8b69c629-ef1b-4bcf-aeb9-0183359d456b, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T03:18:05.409334Z, lastStatusUpdateTimestamp=2025-02-03T03:18:05.409334Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "ae078772be4dc040",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.563",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.562Z",
            "@version": "1",
            "message": "Portfolio: 2f397384-aef1-4955-a3d2-1e5d93a2d3c6 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1c63402cfadfafc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.56Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"6bb45400-0a6c-4298-a736-182ce5583f63\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c002b99792fc5117",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.56Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=48fd6822-4301-478d-a9bb-35701cbfae1a_2, timestamp=2025-02-03T02:04:28.495670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2ebb6093-212a-4552-a198-8f04a1b67884, planId=2f397384-aef1-4955-a3d2-1e5d93a2d3c6, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T02:04:27.627990Z, lastStatusUpdateTimestamp=2025-02-03T02:04:28.495670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "b1c63402cfadfafc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.559",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.559Z",
            "@version": "1",
            "message": "Portfolio link: 8057a114-ebb7-45b2-82f0-26ff2a1ed05d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "c002b99792fc5117",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.557",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.557Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "c002b99792fc5117",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.554Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae, timestamp=2025-02-02T18:18:35.879229Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.879229Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "cdede6d493d4406c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.553",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.553Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='71e9fad6-4df8-4394-8e87-58f7f1520eef' and payload='{\"event_id\":\"51524c3f-856e-497c-a221-3c06f20066c1_2\",\"timestamp\":\"2025-02-02T18:18:32.770839Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.553",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.553Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:43:06.553",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:43:06.553Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:52.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:52.628Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:52.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:52.628Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:52.624",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:52.624Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:46.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:46.623Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:46.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:46.619Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.619",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.619Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.616Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1a41a10a4f8bdcea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.615",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.615Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62, timestamp=2025-02-02T18:18:32.275074Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.275074Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b4232907e9110613",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.614Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f, timestamp=2025-02-02T18:18:32.250427Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.250427Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3619f36bf95e3d24",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.612",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.612Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95, timestamp=2025-02-02T18:18:32.214034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.214034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "bb266949ed30c0c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.612",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.612Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"aebc8925-ca78-4905-8f86-4e0c2bbc3969\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "398f8142a7250063",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.61Z",
            "@version": "1",
            "message": "Portfolio link: c32e5a1f-0fc2-4cd8-9c8e-cb9f01540b73 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "398f8142a7250063",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.607",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.607Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "398f8142a7250063",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.606",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.605Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe, timestamp=2025-02-02T18:15:21.313898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313898Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "bc0c82239dfe1409",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.604Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6_2, timestamp=2025-02-02T18:15:19.328675Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.328675Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dcae1e449c9cd4c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.602",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.602Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6, timestamp=2025-02-02T18:15:18.883906Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.883906Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "e84cdf747ad6cefb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.601",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.601Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.601",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.601Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:43.601",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:43.601Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='1f547a95-6c8c-4077-bda4-954eb2b99b3b' and payload='{\"event_id\":\"b57bae48-b074-4ef8-ade2-212e40302b35_2\",\"timestamp\":\"2025-02-02T18:15:18.388619Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:06.553",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:06.553Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:06.553",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:06.553Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:06.550",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:06.549Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:00.549",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:00.549Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:42:00.546",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:42:00.545Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.545",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.545Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.543",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.543Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "3aff36f74380a3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.541",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.541Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1, timestamp=2025-02-02T18:18:32.260887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.260887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "69cc2f1f9bed1075",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.541",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.541Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"58e20f85-5439-42d8-9425-43013ebc96a3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "381a3c808dfe0e03",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.54Z",
            "@version": "1",
            "message": "Portfolio link: 231ce3c4-373c-4829-8a1e-6fdb1cfd6d42 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "381a3c808dfe0e03",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.538",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.538Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "381a3c808dfe0e03",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.538",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.538Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"aeb15156-1a75-422a-81df-011a2b82f9ad\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "5f998519d43a61ea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.537",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.537Z",
            "@version": "1",
            "message": "Portfolio link: bbbc005c-844a-4636-a3cf-b268e90c95f2 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "5f998519d43a61ea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.535",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.535Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "5f998519d43a61ea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.533",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.533Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809, timestamp=2025-02-02T18:15:21.346590Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.346590Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "24d1d252aeb85ae0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.530",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.53Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e, timestamp=2025-02-02T18:15:21.340068Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.340068Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "921328b97368ce34",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.529Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.529Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:57.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:57.529Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cbd6fc3d-6ac6-4622-8118-18e24f7603ce' and payload='{\"event_id\":\"c8022740-c60c-48cc-b318-c87e0f9ca9ad_2\",\"timestamp\":\"2025-02-02T18:15:18.002417Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:43.600",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:43.6Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:43.600",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:43.6Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:43.596",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:43.595Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:37.595",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:37.595Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:37.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:37.591Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:34.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:34.591Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:34.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:34.586Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:34.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:34.587Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "53e0ebb2b1452138",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:34.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:34.586Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b16cd359-7a1d-4473-9b50-15fe6813671b' and payload='{\"event_id\":\"43924148-99c5-4330-91b4-f69ed9b9a954_2\",\"timestamp\":\"2025-02-02T18:15:18.121289Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:41:34.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:41:34.586Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:57.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:57.529Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:57.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:57.529Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:57.525",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:57.525Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:51.525",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:51.525Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:51.521",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:51.521Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.521",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.521Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.519",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.518Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "e861758b1983a3c4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.517Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"abcb0278-c5ab-4be3-9843-9f04b34f6a10\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "03e2e6ae142701ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.517Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad, timestamp=2025-02-02T18:15:17.615363Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.615363Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "ac02dd518a666308",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.516",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.516Z",
            "@version": "1",
            "message": "Portfolio link: 51e8c46a-5d5f-46c6-91a1-5bbc1988ca00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "03e2e6ae142701ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.514",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.514Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"248921c4-7bd9-46a5-ad5f-f643ae3730a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "921a6511a9719424",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.514",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.514Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "03e2e6ae142701ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.512",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.512Z",
            "@version": "1",
            "message": "Portfolio link: 3a04e5bf-44aa-42c4-a1cf-098335193b60 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "921a6511a9719424",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.509",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.509Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "921a6511a9719424",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.507",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.507Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456, timestamp=2025-02-02T18:12:03.122080Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.122080Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "366ec0e34655cf3c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.504",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.503Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.504",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.504Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.504",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.504Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce, timestamp=2025-02-02T18:12:03.188626Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.188626Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "4f385cb7520618ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:48.503",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:48.503Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9136e8fe-9d64-40ca-9c59-893c62d533dc' and payload='{\"event_id\":\"d57e14f4-204d-4039-b611-ded6d99b9d7c_2\",\"timestamp\":\"2025-02-02T18:12:00.144755Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:34.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:34.585Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:34.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:34.586Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:34.582",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:34.581Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:28.581",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:28.581Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:28.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:28.577Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:25.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:25.576Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:25.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:25.572Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "387f8ad5bbd77b2b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:25.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:25.572Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:25.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:25.572Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:40:25.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:40:25.571Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='02e28334-4ade-44fa-beed-c1e83b142c38' and payload='{\"event_id\":\"b9140690-89d2-4b72-8a97-b9e00ccdf264_2\",\"timestamp\":\"2025-02-02T18:15:17.957587Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:48.503",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:48.503Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:48.503",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:48.502Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:48.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:48.499Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:42.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:42.498Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:42.495",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:42.494Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:39.494",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:39.494Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:39.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:39.49Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "06aa1fe22bd8da74",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:39.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:39.49Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:39.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:39.49Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$557c56cb.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:39.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:39.49Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='fbce2392-d9f6-46ef-925f-00b0ec0890ea' and payload='{\"event_id\":\"f39c3117-78ad-48db-8761-b4e76630aeb9_2\",\"timestamp\":\"2025-02-02T18:12:00.013381Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:25.571",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:25.571Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:25.571",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:25.571Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:25.567",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:25.567Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:19.566",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:19.566Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:19.562",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:19.562Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:16.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:16.557Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7bee721e-0f9c-4229-b2d3-fb1acc923a55' and payload='{\"event_id\":\"b5d5568e-03d4-486c-a349-61ca99a12f80_2\",\"timestamp\":\"2025-02-02T18:15:17.884450Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:16.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:16.557Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:16.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:16.558Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:16.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:16.558Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:39:16.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:39:16.562Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f6a37b0996635962",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:39.488",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:39.488Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:39.488",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:39.488Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:39.485",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:39.485Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:36.886",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:36.886Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Resetting the last seen epoch of partition deposit.portfolio.account.linked.v1-0 to 159 since the associated topicId changed from null to PVW0AbSQSzak4Y7aqzsxzw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:33.484",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:33.484Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:33.481",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:33.48Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.48Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.478",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.478Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "023e3b62d5f2dd68",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.476",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.476Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c, timestamp=2025-02-02T18:11:59.679504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.679504Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "afea47cea19eccdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.473",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.473Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9, timestamp=2025-02-02T18:11:59.663929Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.663929Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f10627cccccb78aff7d487a87da6",
            "spanId": "fc20030db2508ef8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=159}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42990, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=158}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 3 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=161}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=159}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=154}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.456",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.456Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.448",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.448Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7647, memberId='consumer-deposit_portfolio_service_prod-1-e5a17bff-6f8c-44f5-887e-7347277b481b', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.448",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.448Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.448",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.448Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.438",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.438Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7647, memberId='consumer-deposit_portfolio_service_prod-1-e5a17bff-6f8c-44f5-887e-7347277b481b', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.438",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.438Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7647: {consumer-deposit_portfolio_service_prod-1-e5a17bff-6f8c-44f5-887e-7347277b481b=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.430",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.429Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.429Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.429Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-370f5148-4673-46cc-8602-e2366427eec5 sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:30.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:30.429Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:27.827",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:27.826Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:24.823",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:24.823Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:21.820",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:21.82Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:18.816",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:18.816Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:16.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:16.557Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:16.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:16.556Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:16.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:16.552Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:15.813",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:15.813Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:12.810",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:12.809Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:10.552",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:10.552Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:10.548",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:10.548Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:09.806",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:09.806Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.548",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.548Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.545",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.545Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "382e446e230c9a12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.544",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.544Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954, timestamp=2025-02-02T18:15:17.633221Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.633221Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b2ea9d36030fa4ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.543",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.543Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80, timestamp=2025-02-02T18:15:17.601487Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601487Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3233f12eec89bd8c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.541",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.541Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264, timestamp=2025-02-02T18:15:17.655289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.655289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "b46ced6e657111e4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.54Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35, timestamp=2025-02-02T18:15:17.651086Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.651086Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "1d9620e9a9af51b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.54Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"3f40eb18-437c-49c7-9750-c5acfc34bf53\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "6c7f499b13c9c168",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.538",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.538Z",
            "@version": "1",
            "message": "Portfolio link: 73795a58-b65c-46d8-a93d-ed2e0f03e3b1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "6c7f499b13c9c168",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.536",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.536Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "6c7f499b13c9c168",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.535",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.534Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279, timestamp=2025-02-02T18:12:03.154431Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.154431Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "4e47691f4ca124d9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.534",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.534Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9\", \"accountId\": \"c10b1cfa-d072-4cde-a8b8-185ccdcb3274\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2b6ce7998b006902",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.533",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.533Z",
            "@version": "1",
            "message": "Portfolio link: 6386aee7-5929-44a6-b5a1-58dc0f192ad4 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2b6ce7998b006902",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.530",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.53Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=89561828-6351-40dc-ae15-73a3d8edb80c_2, timestamp=2025-02-03T04:31:33.325570Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70552ce6-2a2c-f552-5ce6-d1f7f59459da, planId=3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T04:31:32.958096Z, lastStatusUpdateTimestamp=2025-02-03T04:31:33.325570Z, failureReason=, associateAccountUpdate=Account(accountId=c10b1cfa-d072-4cde-a8b8-185ccdcb3274), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2b6ce7998b006902",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.529Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=89561828-6351-40dc-ae15-73a3d8edb80c, timestamp=2025-02-03T04:31:32.958096Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70552ce6-2a2c-f552-5ce6-d1f7f59459da, planId=3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T04:31:32.958096Z, lastStatusUpdateTimestamp=2025-02-03T04:31:32.958096Z, failureReason=, associateAccountUpdate=Account(accountId=c10b1cfa-d072-4cde-a8b8-185ccdcb3274), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "685a0ee6d1ceed39",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.529Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9\", \"customerId\": \"1748736000001871\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "836df1d9e8607de3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.527Z",
            "@version": "1",
            "message": "Portfolio: 3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "836df1d9e8607de3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.524",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.524Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38289735-0cd6-41d9-bfd3-ad910c309b47_2, timestamp=2025-02-03T04:01:55.043154Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6c099f6-5bb5-4675-8509-bed8c4dad9aa, planId=3783eca0-5f9b-4e8c-b8b7-0ff2ed0e79b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T04:01:54.301835Z, lastStatusUpdateTimestamp=2025-02-03T04:01:55.043154Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "836df1d9e8607de3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.524",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.524Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"8b69c629-ef1b-4bcf-aeb9-0183359d456b\", \"customerId\": \"1748736000001870\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8e59e1b4a5131b30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.522",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.522Z",
            "@version": "1",
            "message": "Portfolio: 8b69c629-ef1b-4bcf-aeb9-0183359d456b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8e59e1b4a5131b30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.518",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.518Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5f987e90-bfa5-44e2-ad2f-36d63c4cc52f_2, timestamp=2025-02-03T03:18:06.367746Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cb7ab099-a938-4a61-af47-b96dabd7732d, planId=8b69c629-ef1b-4bcf-aeb9-0183359d456b, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T03:18:05.409334Z, lastStatusUpdateTimestamp=2025-02-03T03:18:06.367746Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "8e59e1b4a5131b30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.518",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.518Z",
            "@version": "1",
            "message": "Unknown event type received: PlanUpdateEvent(eventId=5f987e90-bfa5-44e2-ad2f-36d63c4cc52f, timestamp=2025-02-03T03:18:05.409334Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb7ab099-a938-4a61-af47-b96dabd7732d, planId=8b69c629-ef1b-4bcf-aeb9-0183359d456b, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T03:18:05.409334Z, lastStatusUpdateTimestamp=2025-02-03T03:18:05.409334Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "83a8bb9619a7e6e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.516",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.516Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5f987e90-bfa5-44e2-ad2f-36d63c4cc52f, timestamp=2025-02-03T03:18:05.409334Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb7ab099-a938-4a61-af47-b96dabd7732d, planId=8b69c629-ef1b-4bcf-aeb9-0183359d456b, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-03T03:18:05.409334Z, lastStatusUpdateTimestamp=2025-02-03T03:18:05.409334Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "83a8bb9619a7e6e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.515",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.515Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"2f397384-aef1-4955-a3d2-1e5d93a2d3c6\", \"customerId\": \"1748736000001868\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f3714a6c62a9d114",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:07.515",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:07.515Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Resetting the last seen epoch of partition deposit.portfolio.created.v1-0 to 157 since the associated topicId changed from null to gYkVB7EmRlG5nOpH1yh__Q",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.803",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.802Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.522",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.522Z",
            "@version": "1",
            "message": "Portfolio: 2f397384-aef1-4955-a3d2-1e5d93a2d3c6 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.Portfolio",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f3714a6c62a9d114",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.518",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.518Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"6bb45400-0a6c-4298-a736-182ce5583f63\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d0a75e66aa9e4d70",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.518",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.518Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=48fd6822-4301-478d-a9bb-35701cbfae1a_2, timestamp=2025-02-03T02:04:28.495670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2ebb6093-212a-4552-a198-8f04a1b67884, planId=2f397384-aef1-4955-a3d2-1e5d93a2d3c6, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-03T02:04:27.627990Z, lastStatusUpdateTimestamp=2025-02-03T02:04:28.495670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate={}, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f3714a6c62a9d114",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.516",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.516Z",
            "@version": "1",
            "message": "Portfolio link: 8057a114-ebb7-45b2-82f0-26ff2a1ed05d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "d0a75e66aa9e4d70",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.513",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.513Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "d0a75e66aa9e4d70",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.511",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.51Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae, timestamp=2025-02-02T18:18:35.879229Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.879229Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "ca411f88bd36e037",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.510",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.51Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='71e9fad6-4df8-4394-8e87-58f7f1520eef' and payload='{\"event_id\":\"51524c3f-856e-497c-a221-3c06f20066c1_2\",\"timestamp\":\"2025-02-02T18:18:32.770839Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.510",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.51Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:06.510",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:06.51Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:03.799",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:03.799Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:38:00.796",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:38:00.796Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:57.793",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:57.792Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:54.789",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:54.789Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:51.786",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:51.786Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:48.783",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:48.782Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:45.779",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:45.779Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:42.776",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:42.776Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:39.773",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:39.773Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:36.770",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:36.769Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:33.766",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:33.766Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:30.763",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:30.763Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:27.760",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:27.759Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:24.756",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:24.756Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:21.753",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:21.753Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:18.750",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:18.75Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:15.747",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:15.746Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:12.743",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:12.743Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:09.740",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:09.74Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:06.737",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:06.736Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:06.509",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:06.509Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:06.509",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:06.509Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:06.504",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:06.504Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:03.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:03.733Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:00.729",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:00.729Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:00.504",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:00.504Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:37:00.500",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:37:00.5Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.726",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.726Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.499Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.497",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.497Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "c7edc212eda857c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.496",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.496Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"58e20f85-5439-42d8-9425-43013ebc96a3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "dd191b73f22f4b94",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.496",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.496Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1, timestamp=2025-02-02T18:18:32.260887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.260887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "76beee6bad4e4f05",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.494",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.494Z",
            "@version": "1",
            "message": "Portfolio link: 231ce3c4-373c-4829-8a1e-6fdb1cfd6d42 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dd191b73f22f4b94",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.492",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.491Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"aeb15156-1a75-422a-81df-011a2b82f9ad\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "de98fc65dc21f3f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.492",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.492Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "dd191b73f22f4b94",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.49Z",
            "@version": "1",
            "message": "Portfolio link: bbbc005c-844a-4636-a3cf-b268e90c95f2 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "de98fc65dc21f3f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.486",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.486Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "de98fc65dc21f3f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.485",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.485Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809, timestamp=2025-02-02T18:15:21.346590Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.346590Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "bbe9cacae630c758",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.483",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.482Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e, timestamp=2025-02-02T18:15:21.340068Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.340068Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "5ec5947ff99004d9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.482",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.482Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cbd6fc3d-6ac6-4622-8118-18e24f7603ce' and payload='{\"event_id\":\"c8022740-c60c-48cc-b318-c87e0f9ca9ad_2\",\"timestamp\":\"2025-02-02T18:15:18.002417Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.482",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.482Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:57.482",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:57.482Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:54.723",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:54.723Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:51.719",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:51.719Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:48.716",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:48.716Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:45.713",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:45.713Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:42.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:42.709Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:39.706",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:39.706Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:36.703",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:36.703Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:33.699",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:33.699Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:30.696",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:30.696Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:27.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:27.693Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:24.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:24.689Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:21.686",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:21.686Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:18.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:18.683Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:15.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:15.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:12.676",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:12.676Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:09.673",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:09.673Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:06.670",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:06.669Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:03.666",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:03.666Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:36:00.663",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:36:00.662Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:57.659",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:57.659Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:57.481",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:57.481Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:57.481",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:57.481Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:57.477",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:57.477Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:54.656",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:54.656Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:51.684",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:51.652Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:51.476",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:51.476Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:51.472",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:51.472Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.649",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.648Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.472",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.472Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.470",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.47Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3ee090fa9e0bb250",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.468",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.468Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"abcb0278-c5ab-4be3-9843-9f04b34f6a10\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2ff3b9a91534cb07",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.468",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.468Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad, timestamp=2025-02-02T18:15:17.615363Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.615363Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "3d8623a225a24d90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.467",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.467Z",
            "@version": "1",
            "message": "Portfolio link: 51e8c46a-5d5f-46c6-91a1-5bbc1988ca00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2ff3b9a91534cb07",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.464",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.464Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"248921c4-7bd9-46a5-ad5f-f643ae3730a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "86c1610f62e44ce4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.464",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.464Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "2ff3b9a91534cb07",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.461",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.461Z",
            "@version": "1",
            "message": "Portfolio link: 3a04e5bf-44aa-42c4-a1cf-098335193b60 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "86c1610f62e44ce4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.458",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.458Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "86c1610f62e44ce4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.457",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.457Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456, timestamp=2025-02-02T18:12:03.122080Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.122080Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "ae0ec7ce4a879199",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.453Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9136e8fe-9d64-40ca-9c59-893c62d533dc' and payload='{\"event_id\":\"d57e14f4-204d-4039-b611-ded6d99b9d7c_2\",\"timestamp\":\"2025-02-02T18:12:00.144755Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.454Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.454Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:48.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:48.454Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce, timestamp=2025-02-02T18:12:03.188626Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.188626Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "63c5dde92bf982be",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:45.645",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:45.645Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:42.642",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:42.642Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:39.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:39.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:36.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:36.635Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:33.632",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:33.632Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:30.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:30.628Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:27.623",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:27.623Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:24.620",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:24.62Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:22.665",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:22.665Z",
            "@version": "1",
            "message": "[Producer clientId=producer-1] Resetting the last seen epoch of partition deposit-portfolio-service.portfolio-link.snapshot.v2-0 to 112 since the associated topicId changed from null to h2CV0iFTQAif70jMHd0YAw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:21.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:21.616Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:18.613",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:18.613Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.858",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.858Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: com.arbm.digibank.exception.PortfolioAlreadyExistsException: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-10",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "3e79a17b3f6218d8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.858",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.858Z",
            "@version": "1",
            "message": "An error occurred: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-10",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "3e79a17b3f6218d8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.857",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.857Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "3e79a17b3f6218d8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.819",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.819Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: com.arbm.digibank.exception.PortfolioAlreadyExistsException: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-7",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "6b9e118b248d039e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.819",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.819Z",
            "@version": "1",
            "message": "An error occurred: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-7",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "6b9e118b248d039e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.818",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.818Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "6b9e118b248d039e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.799",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.799Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: com.arbm.digibank.exception.PortfolioAlreadyExistsException: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-4",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "fd85e99c67e700c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.799",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.799Z",
            "@version": "1",
            "message": "An error occurred: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-4",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "fd85e99c67e700c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:16.798",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:16.798Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-4",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "fd85e99c67e700c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:15.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:15.609Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.777",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.777Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: com.arbm.digibank.exception.PortfolioAlreadyExistsException: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-6",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "ea3d54758c1cdb54",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.777",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.777Z",
            "@version": "1",
            "message": "An error occurred: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-6",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "ea3d54758c1cdb54",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.776",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.776Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-6",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "ea3d54758c1cdb54",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.756",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.756Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: com.arbm.digibank.exception.PortfolioAlreadyExistsException: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-3",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "5bb5c8a42adcd0a1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.756",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.756Z",
            "@version": "1",
            "message": "An error occurred: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-3",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "5bb5c8a42adcd0a1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.754",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.754Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "5bb5c8a42adcd0a1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.733Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: com.arbm.digibank.exception.PortfolioAlreadyExistsException: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-5",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "967686abb4679e17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.733Z",
            "@version": "1",
            "message": "An error occurred: Portfolio link is already created for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-5",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "967686abb4679e17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.732",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.732Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "967686abb4679e17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:12.606",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:12.606Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:10.712",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:10.711Z",
            "@version": "1",
            "message": "Exception occurred during linking account to portfolio: VaultException(httpStatus='400', vaultErrorCode='004.005.000', tracingId='2ab25496ea6ad314c511debca56b2d10', message='Account product version 135 not in plan supported versions: 68, 67')",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "http-nio-8080-exec-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "6e1d23a1df8c7ea2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:10.712",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:10.712Z",
            "@version": "1",
            "message": "An error occurred during linking the account to the portfolio creation: Account product version 135 not in plan supported versions: 68, 67",
            "logger_name": "com.arbm.digibank.exception.PortfolioExceptionHandler",
            "thread_name": "http-nio-8080-exec-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "6e1d23a1df8c7ea2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:10.551",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:10.55Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=9443af4b-0123-4cb7-ad31-78ddd0b8e30d, customerId=1723881540677221)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "6e1d23a1df8c7ea2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:10.545",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:10.545Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: 9443af4b-0123-4cb7-ad31-78ddd0b8e30d, errorId=b270188a-3180-4fee-b9df-f15bbc070996)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-2",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0f03e298b6bc452deccf61d895350",
            "spanId": "243fb9df7e165047",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:09.603",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:09.603Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:06.618",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:06.599Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:03.596",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:03.596Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:35:00.593",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:35:00.593Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:57.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:57.589Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:54.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:54.585Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:51.602",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:51.582Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:48.579",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:48.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:48.453",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:48.453Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:48.453",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:48.453Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:48.449",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:48.449Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:45.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:45.575Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:42.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:42.572Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:42.448",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:42.448Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:42.444",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:42.444Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:39.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:39.568Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:39.444",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:39.444Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:39.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:39.439Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:39.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:39.439Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$8ca1205c.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:39.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:39.439Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "39d4f0546c1a34b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:39.438",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:39.438Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='fbce2392-d9f6-46ef-925f-00b0ec0890ea' and payload='{\"event_id\":\"f39c3117-78ad-48db-8761-b4e76630aeb9_2\",\"timestamp\":\"2025-02-02T18:12:00.013381Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:36.595",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:36.565Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:33.562",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:33.562Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:30.558",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:30.558Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:27.555",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:27.555Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:24.552",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:24.552Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:21.569",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:21.548Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:18.545",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:18.545Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:15.542",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:15.542Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:12.539",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:12.539Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:09.534",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:09.534Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:06.530",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:06.53Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:03.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:03.527Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:34:00.523",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:34:00.523Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:57.520",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:57.52Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:54.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:54.517Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:51.513",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:51.513Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:48.509",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:48.509Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:47.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:47.417Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:47.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:47.417Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:46.361",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:46.361Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:46.360",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:46.36Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Discovered group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null)",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:46.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:46.211Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight JOIN_GROUP request with correlation id 4231 due to node 2147483646 being disconnected (elapsed time since creation: 307423ms, elapsed time since send: 307423ms, request timeout: 305000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:46.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:46.211Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:46.211",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:46.211Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 2147483646 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:39.438",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:39.438Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:39.438",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:39.438Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:39.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:39.433Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:33.433",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:33.433Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:33.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:33.429Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.428",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.428Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.425",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.425Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "f74b3c906bba6e3d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.424",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.423Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c, timestamp=2025-02-02T18:11:59.679504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.679504Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "241f4b5530734481",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.421",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.421Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9, timestamp=2025-02-02T18:11:59.663929Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.663929Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "67a0efdaa193d03bfa14013b30a489c2",
            "spanId": "a91fe084a2716e86",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=159}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42990, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=158}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 3 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=161}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=159}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=154}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=160}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.409",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.409Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.4Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7646, memberId='consumer-deposit_portfolio_service_prod-1-370f5148-4673-46cc-8602-e2366427eec5', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.401Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.401",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.401Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.391",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.39Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7646, memberId='consumer-deposit_portfolio_service_prod-1-370f5148-4673-46cc-8602-e2366427eec5', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:30.391",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:30.39Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7646: {consumer-deposit_portfolio_service_prod-1-370f5148-4673-46cc-8602-e2366427eec5=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:27.565",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:27.565Z",
            "@version": "1",
            "message": "[Producer clientId=producer-2] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:27.387",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:27.386Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:27.386",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:27.386Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:26.326",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:26.326Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:26.325",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:26.325Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Discovered group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null)",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-03 16:33:26.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-03T16:33:26.175Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 2147483646 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    }
]