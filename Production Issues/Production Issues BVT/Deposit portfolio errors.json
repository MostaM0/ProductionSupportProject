[
    {
        "@timestamp": "2025-02-02 21:46:56.621",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:56.621Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:56.621",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:56.621Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:56.617",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:56.617Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:50.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:50.616Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:50.612",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:50.612Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:47.611",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:47.611Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:47.607",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:47.606Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:47.607",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:47.607Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:47.607",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:47.607Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "04b7bc9cd5ffdff4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:47.606",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:47.606Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='ed3d439c-c03e-41bd-9f80-3f465806665e' and payload='{\"event_id\":\"0e1bf68f-2a84-4542-9845-3980e502d305_2\",\"timestamp\":\"2025-02-02T18:11:59.886359Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:32.697",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:32.696Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:32.697",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:32.697Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:32.692",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:32.692Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:26.692",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:26.692Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:26.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:26.687Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.687Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.684",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.684Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c4016680652e8f5f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.682",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.682Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6a9b25ca-a4e9-49e3-8360-1809a942c7e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ede00e1b68869cb5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.682",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.682Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8, timestamp=2025-02-02T18:18:32.237102Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.237102Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "fb4a8fb1526bcd5e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.68Z",
            "@version": "1",
            "message": "Portfolio link: cb3d47e2-cf41-4d7e-8dbd-00a70ff7ad9d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ede00e1b68869cb5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.677",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.676Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ede00e1b68869cb5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.673",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.673Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c, timestamp=2025-02-02T18:15:21.336Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7b72aa78007b2d6c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.672",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.672Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b191e42c-ee17-495d-b334-483d511a1fe4' and payload='{\"event_id\":\"f70889b8-a50c-48f6-a53e-e1e1d4729657_2\",\"timestamp\":\"2025-02-02T18:15:17.927629Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.672",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.672Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:46:23.672",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:46:23.672Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:47.605",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:47.605Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:47.605",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:47.605Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:47.601",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:47.601Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:41.600",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:41.6Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:41.596",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:41.596Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:38.595",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:38.595Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:38.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:38.59Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:38.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:38.591Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:38.591",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:38.591Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9abef3e1608eeb37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:38.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:38.59Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='5bf64cfa-773b-44c5-bd61-b4b0baf5efd8' and payload='{\"event_id\":\"ef19f9fa-112d-42b8-971c-05413cb098fe_2\",\"timestamp\":\"2025-02-02T18:11:59.881603Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:23.671",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:23.671Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:23.671",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:23.671Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:23.666",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:23.666Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:17.665",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:17.665Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:17.661",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:17.66Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.66Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.657",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.657Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3c61aa1ef4d4c4c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.654",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.654Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657, timestamp=2025-02-02T18:15:17.602876Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.602876Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "fed5b9c2b79fc1fd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.652",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.652Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f_2, timestamp=2025-02-02T18:12:01.317155Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:01.317155Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "68071830097d55c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.648",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.647Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.648",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.648Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f, timestamp=2025-02-02T18:12:00.880962Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.880962Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f1941665010e243f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.647Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cec1527d-c63d-4dec-9848-789f29b87d85' and payload='{\"event_id\":\"3da00001-379f-4e93-9e01-d1b7fd676102_2\",\"timestamp\":\"2025-02-02T18:12:00.307645Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:45:14.647",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:45:14.647Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:38.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:38.59Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9eb35a6a-5e3b-4ef2-bfe5-db44d916aac2)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:38.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:38.59Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9eb35a6a-5e3b-4ef2-bfe5-db44d916aac2)\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:38.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:38.585Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:32.585",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:32.585Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=0a1eb259-693c-4e77-a8dc-685be53ca804)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:32.581",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:32.581Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.577Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102, timestamp=2025-02-02T18:11:59.701332Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.701332Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2efa6d5c32b00539",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.578Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.58Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=70438a03-8081-4faf-a055-279881948799)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.576Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe, timestamp=2025-02-02T18:11:59.668207Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.668207Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7208c8909b801c2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.575Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3, timestamp=2025-02-02T18:11:59.689817Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.689817Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7f095b39cae345f7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.574",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.574Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"70559344-7c19-4286-a211-d8cae654a656\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "6958f8a905eaa328",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.574",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.574Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305, timestamp=2025-02-02T18:11:59.650040Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.650040Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "45d70469e3f751c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.571",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.571Z",
            "@version": "1",
            "message": "Portfolio link: 01270845-0a75-44fe-95ef-f73387579e82 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6958f8a905eaa328",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.568Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6958f8a905eaa328",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.567",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.567Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5, timestamp=2025-02-02T18:18:35.872620Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872620Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "96bf780259f23e66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.56Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.56Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.555",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.555Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:23.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:23.554Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:23.551",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:23.55Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.550",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.55Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.547",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.547Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.54Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.54Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.536",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.536Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.646",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.645Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.645",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.645Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.641",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.64Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.535",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.535Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.531Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.527Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f, timestamp=2025-02-02T18:18:32.270727Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270727Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "99e64561c2d418ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.528Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.53Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.515Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131, timestamp=2025-02-02T18:15:21.313774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313774Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "256a8c53346037ab",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.516Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9c0b54b5b3ad292",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.518Z",
            "@version": "1",
            "message": "Portfolio link: 8a8bf865-b994-4326-bf09-62f6bedc92f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9c0b54b5b3ad292",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.521Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"977948eb-2a17-4a9b-add0-2051070eecd4\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f9c0b54b5b3ad292",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.521Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "453a4b93ded3a26c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.524Z",
            "@version": "1",
            "message": "Portfolio link: 010a602e-be78-4289-a896-658fae32d5af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "453a4b93ded3a26c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.526Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"ed277ca9-d065-45b7-830b-60074891b8a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "453a4b93ded3a26c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.526Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d, timestamp=2025-02-02T18:18:32.276619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.276619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "96cbc4ea64602c67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.515",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.513Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a, timestamp=2025-02-02T18:15:21.335038Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.335038Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "db156e9bb0440f78",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.507",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.506Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.507",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.507Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.502",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.502Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:08.640",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:08.64Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:08.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:08.635Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.635Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.627Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='8b248740-9b17-4c13-9109-228b737b9c4e' and payload='{\"event_id\":\"302da870-018a-41d5-9a75-43192cb155a3_2\",\"timestamp\":\"2025-02-02T18:12:00.183405Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.628Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.628Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.628Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.501",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.501Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.497",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.497Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.497",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.496Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.494",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.494Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.485",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.484Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.485",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.484Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.481",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.48Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:56.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:56.479Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:56.476",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:56.475Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.475",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.475Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.472",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.472Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.454Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.454Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.450",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.45Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:47.449",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:47.449Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:47.445",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:47.445Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.444",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.444Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.442",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.442Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.441",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.441Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c, timestamp=2025-02-02T18:15:17.645211Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.645211Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "3ef25ec49a316086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.441",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.441Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746, timestamp=2025-02-02T18:15:17.666778Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.666778Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "96d5e8c21474fd17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.440",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.439Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7, timestamp=2025-02-02T18:15:17.626378Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.626378Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4b57993c82fccaf7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.439Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"5204f800-b9b9-4d39-9090-612432f352cb\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2fbb7e9c85f62521",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.436",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.436Z",
            "@version": "1",
            "message": "Portfolio link: e06b17b7-b739-0167-ee56-496786a1515d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2fbb7e9c85f62521",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.434Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2fbb7e9c85f62521",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.433",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.433Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c, timestamp=2025-02-02T18:12:03.180258Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.180258Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4fd44a90bc9d130b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.432",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.432Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ec9a8782c4f87de0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.429Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9a8782c4f87de0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.427",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.426Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d4d8a894f16244fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.427",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.427Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9a8782c4f87de0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.424",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.423Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d4d8a894f16244fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.421",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.421Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d4d8a894f16244fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.420",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.42Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8d93335318261865",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.417Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8d93335318261865",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.413",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.413Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8d93335318261865",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.412",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.411Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71777f310104f242",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.411",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.41Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "908aac51b0a8287f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.410",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.41Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0d75555e748d1316",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.408",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.408Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf413324941b8d43",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.406",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.406Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.406",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.406Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c176777887d4f143",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.405",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.405Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.405",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.405Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:05.627",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:05.626Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:05.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:05.626Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:05.619",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:05.619Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:59.618",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:59.618Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:59.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:59.614Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.613",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.613Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.606",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.605Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.605",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.604Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.605",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.605Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.604Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='ed3d439c-c03e-41bd-9f80-3f465806665e' and payload='{\"event_id\":\"0e1bf68f-2a84-4542-9845-3980e502d305_2\",\"timestamp\":\"2025-02-02T18:11:59.886359Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:44.404",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:44.404Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:44.404",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:44.404Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:44.400",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:44.4Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:38.399",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:38.399Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:38.395",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:38.394Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.394",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.394Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.389",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.388Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.389",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.389Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.388",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.388Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70e9cad0-6b40-4d02-9e76-af99e07a2e93' and payload='{\"event_id\":\"7f00e547-7515-463e-9513-a8e5c260fd3d_2\",\"timestamp\":\"2025-02-02T18:18:32.379670Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.388",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.388Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:56.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:56.603Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:56.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:56.604Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:56.599",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:56.599Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:50.599",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:50.598Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:50.594",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:50.594Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.594",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.594Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='5bf64cfa-773b-44c5-bd61-b4b0baf5efd8' and payload='{\"event_id\":\"ef19f9fa-112d-42b8-971c-05413cb098fe_2\",\"timestamp\":\"2025-02-02T18:11:59.881603Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:35.386",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:35.386Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:35.386",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:35.386Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:35.381",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:35.381Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:29.381",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:29.38Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:29.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:29.376Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.376Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.374Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.373",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.373Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401, timestamp=2025-02-02T18:18:32.217467Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217467Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c7c3c1566d8f9f06",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.372",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.372Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d, timestamp=2025-02-02T18:18:32.217415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217415Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9d0eb2ecc2d035dc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.371",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.371Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8f6b552e7016114a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.368",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.368Z",
            "@version": "1",
            "message": "Portfolio link: d6fd8cd7-c240-4c9a-89d6-5cbe5272e654 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8f6b552e7016114a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.366",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.366Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"6d855749-902b-4731-ac3b-5d16c8496476\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "5ca1d2ca16bb061a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.366",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.366Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8f6b552e7016114a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.363",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.363Z",
            "@version": "1",
            "message": "Portfolio link: b40da19d-1a3b-4d77-8540-9bf1e923fa5f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5ca1d2ca16bb061a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.359",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.359Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125_2, timestamp=2025-02-02T18:15:21.564236Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.564236Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5ca1d2ca16bb061a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.358",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.358Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19, timestamp=2025-02-02T18:15:21.355537Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.355537Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "840fbdeb29d67183",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.357",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.357Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125, timestamp=2025-02-02T18:15:21.329310Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329310Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6f07c7f2d1f8d3b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.356",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.356Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36_2, timestamp=2025-02-02T18:15:19.336071Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.336071Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c32638394cd9f545",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.354",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.353Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36, timestamp=2025-02-02T18:15:18.859365Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.859365Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0581cafe4332d560",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.352Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='426606eb-8509-4077-8372-7c0a8a3956b5' and payload='{\"event_id\":\"730b71fb-e333-4a1b-b909-fa384032c0c9_2\",\"timestamp\":\"2025-02-02T18:15:18.430034Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.353Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.353Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:47.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:47.587Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=a1efa90e-56f3-4a19-a97e-5df0941476d5)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:47.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:47.587Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=a1efa90e-56f3-4a19-a97e-5df0941476d5)\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:47.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:47.583Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:41.582",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:41.582Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=52cd4d4e-21c8-4ec2-bfc1-fbf9d5b27e17)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:41.578",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:41.578Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.577Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=7712070d-4805-4bf4-a3f7-083fbf1eb21c)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.575Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.573",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.572Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102, timestamp=2025-02-02T18:11:59.701332Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.701332Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e25f470326d1b9ea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.570",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.57Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe, timestamp=2025-02-02T18:11:59.668207Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.668207Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cd2c179e406326ad",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.568Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3, timestamp=2025-02-02T18:11:59.689817Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.689817Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f772755f88c2e91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.566",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.566Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"70559344-7c19-4286-a211-d8cae654a656\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ea0d81bac08473f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.566",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.566Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305, timestamp=2025-02-02T18:11:59.650040Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.650040Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "029fec498d259220",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.565",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.565Z",
            "@version": "1",
            "message": "Portfolio link: 01270845-0a75-44fe-95ef-f73387579e82 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ea0d81bac08473f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.549Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.553Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.553Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.56Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5, timestamp=2025-02-02T18:18:35.872620Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872620Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "493a5a62ffe57f1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.562Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ea0d81bac08473f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:32.548",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:32.548Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:32.544",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:32.544Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.544",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.543Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.541",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.541Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.533",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.533Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.533",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.533Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.529Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:26.352",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:26.351Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:26.352",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:26.351Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:26.347",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:26.347Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:23.528",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:23.528Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:23.524",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:23.524Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.524",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.524Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.521",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.521Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.519",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.519Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f, timestamp=2025-02-02T18:18:32.270727Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270727Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a3be3bc3920353b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.517Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"ed277ca9-d065-45b7-830b-60074891b8a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c0e3a361900de837",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.517Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d, timestamp=2025-02-02T18:18:32.276619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.276619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b69c28df65fc632f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.516",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.516Z",
            "@version": "1",
            "message": "Portfolio link: 010a602e-be78-4289-a896-658fae32d5af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c0e3a361900de837",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.514",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.513Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"977948eb-2a17-4a9b-add0-2051070eecd4\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c16420fb9697a09d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.514",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.514Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c0e3a361900de837",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.512",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.512Z",
            "@version": "1",
            "message": "Portfolio link: 8a8bf865-b994-4326-bf09-62f6bedc92f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c16420fb9697a09d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.510",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.51Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c16420fb9697a09d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.508",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.508Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131, timestamp=2025-02-02T18:15:21.313774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313774Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "37ccbb134b656c4d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.506",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.506Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a, timestamp=2025-02-02T18:15:21.335038Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.335038Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aeb778343ef37e81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.499Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.499Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.495",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.494Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.346",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.346Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.342",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.341Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.341",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.341Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.336",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.335Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.336",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.336Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.335",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.335Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='db56dc6b-5dbb-4e40-abd0-9dced38150fd' and payload='{\"event_id\":\"e04cfe2a-743c-4828-9070-1db0a12573cd_2\",\"timestamp\":\"2025-02-02T18:15:18.083039Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.335",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.335Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:14.494",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:14.494Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:14.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:14.49Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.489",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.489Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.487",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.487Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.48Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.48Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.476",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.476Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:05.475",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:05.475Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:05.471",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:05.471Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.471",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.471Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.468",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.468Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.453",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.453Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.453",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.453Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.449",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.448Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:56.448",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:56.448Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:56.444",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:56.444Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.443",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.443Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.441",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.441Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.439Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746, timestamp=2025-02-02T18:15:17.666778Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.666778Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "77869f772c037ceb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.437",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.437Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c, timestamp=2025-02-02T18:15:17.645211Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.645211Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7031d116fff19f4e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.435",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.435Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"5204f800-b9b9-4d39-9090-612432f352cb\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "00d37576a3c57086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.435",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.435Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7, timestamp=2025-02-02T18:15:17.626378Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.626378Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed08ca64abb35fae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.433Z",
            "@version": "1",
            "message": "Portfolio link: e06b17b7-b739-0167-ee56-496786a1515d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "00d37576a3c57086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.431",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.431Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "00d37576a3c57086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.429Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c, timestamp=2025-02-02T18:12:03.180258Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.180258Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f8500dc63115ea16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.426",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.426Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=88ffceda-b315-4041-8ae9-6c93ba4b072d_2, timestamp=2025-02-02T18:18:33.857002Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=337c658d-102e-4583-9114-bb4e9f86f1e6, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.457015Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.857002Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "949a7f1d97e7c767",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.423",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.423Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42562",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.423",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.423Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=88ffceda-b315-4041-8ae9-6c93ba4b072d, timestamp=2025-02-02T18:18:33.457015Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=337c658d-102e-4583-9114-bb4e9f86f1e6, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.457015Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.457015Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "d53f4c3f4693039e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.422Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='86a85338-cf5d-46f8-89cf-757e65b8935d' and payload='{\"event_id\":\"22b15dce-fb0b-40eb-bd6c-bef64648f90f_2\",\"timestamp\":\"2025-02-02T18:18:32.726303Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Partition 1 of topic vault.core_api.v1.plans.plan_update.events.DLT with partition count 1 is not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.422Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Partition 1 of topic vault.core_api.v1.plans.plan_update.events.DLT with partition count 1 is not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Partition 1 of topic vault.core_api.v1.plans.plan_update.events.DLT with partition count 1 is not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:17.333",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:17.333Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:17.333",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:17.333Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:17.328Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:11.328",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:11.328Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:11.323",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:11.323Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.323",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.322Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.313",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.313Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.312",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.311Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.312",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.312Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.311Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf' and payload='{\"event_id\":\"cf95cbd9-3d29-4bd7-94a6-06f003261996_2\",\"timestamp\":\"2025-02-02T18:15:17.816588Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:53.422Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:53.422Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:53.418",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:53.418Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:47.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:47.417Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:47.413",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:47.413Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.413",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.412Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.408",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.407Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42561",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.408",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.408Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.407Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='541e94a7-7641-4be4-89ce-778b4d17c6f1' and payload='{\"event_id\":\"9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2\",\"timestamp\":\"2025-02-02T18:18:32.684563Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.407Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:08.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:08.311Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:08.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:08.311Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:08.307",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:08.306Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:02.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:02.306Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:02.302",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:02.301Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.301",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.301Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.298Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.297",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.297Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9, timestamp=2025-02-02T18:15:17.663083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.663083Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9c7c95e78bf08794",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.296",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.296Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd, timestamp=2025-02-02T18:15:17.632413Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.632413Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "12dda0bb44acfd12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.295",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.295Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996, timestamp=2025-02-02T18:15:17.653597Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.653597Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "09bad4294860dbac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.294",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.294Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"6a543854-abc3-4604-a4a6-3ce3ed17e540\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1212d2753fd503d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.292",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.291Z",
            "@version": "1",
            "message": "Portfolio link: df5f254f-4e48-44a4-988d-d3404218ac58 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "1212d2753fd503d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.289Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "1212d2753fd503d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.288Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"e8997912-4343-4217-a30f-267737c20f84\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "e652db0af1a61af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.288Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5, timestamp=2025-02-02T18:12:03.175090Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.175090Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "493251c88e049333",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.285",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.285Z",
            "@version": "1",
            "message": "Portfolio link: 0476eca2-34c1-4945-93e3-33dbb8b35db8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e652db0af1a61af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.283",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.283Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1_2, timestamp=2025-02-02T20:49:28.710444Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.710444Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e652db0af1a61af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.282",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.282Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"272f2b99-38d9-45be-ba67-d5fb9d9f88c0\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2cd764e0ea1c7634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.282",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.282Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1, timestamp=2025-02-02T20:49:28.467773Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.467773Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "3bf589c1581f1c61",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.279",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.279Z",
            "@version": "1",
            "message": "Portfolio link: 5fc8d7a4-f280-4f8f-a63a-85f60a1add38 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2cd764e0ea1c7634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.277Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"9790d47d-51cc-46ba-9966-9bef635f9bb9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f9d844f6806ac412",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.277Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2cd764e0ea1c7634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.274",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.274Z",
            "@version": "1",
            "message": "Portfolio link: 3fc46cbb-75b9-42a1-9852-3e05ff6531c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9d844f6806ac412",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.272",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.272Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"55af6aea-2424-4cb6-a7e0-dc8ebdceff23\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "97fe96ef916e64da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.272",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.272Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9d844f6806ac412",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.269",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.269Z",
            "@version": "1",
            "message": "Portfolio link: 9ff492fc-605b-4132-b5a2-7ecc1c685b27 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "97fe96ef916e64da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.266",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.266Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "97fe96ef916e64da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.265",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.265Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0, timestamp=2025-02-02T18:18:35.903081Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903081Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2c5091987f3a5022",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.264",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.263Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e, timestamp=2025-02-02T18:18:35.856574Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.856574Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "54bda1d1ddf10f65",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.26Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d7400648-0588-46be-ae7f-91e0385a8291' and payload='{\"event_id\":\"58a87771-a9fb-462f-b149-600751268491_2\",\"timestamp\":\"2025-02-02T18:18:32.462144Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 3:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.261Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.261Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.261Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454, timestamp=2025-02-02T18:18:35.859684Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.859684Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "48b06455fc1ad452",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:44.407Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:44.407Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:44.403",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:44.402Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:38.402",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:38.402Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:38.398",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:38.398Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.397",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.397Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.393",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.392Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42560",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.393",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.393Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.392Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70c7edfd-90d3-4b19-bb4f-0cae17925aaa' and payload='{\"event_id\":\"7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2\",\"timestamp\":\"2025-02-02T18:18:32.541566Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.392Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:02.833",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:02.833Z",
            "@version": "1",
            "message": "Portfolio link: fddd007e-9591-489c-aaa6-d2c0105b01de set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe57e09b98606db2bba61fd93bf04",
            "spanId": "9c6fe7446c29ebc7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:02.639",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:02.638Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=2234d244-93c3-48c6-a847-50bf7f225502, customerId=1707355016613363)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe57e09b98606db2bba61fd93bf04",
            "spanId": "9c6fe7446c29ebc7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:02.633",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:02.632Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: 2234d244-93c3-48c6-a847-50bf7f225502, errorId=e1e6cfdd-1f8a-4115-8f44-1fd9aa83e17f)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-4",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe57e09b98606db2bba61fd93bf04",
            "spanId": "15cfe5dda8b4c9c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:59.259",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:59.259Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:59.259",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:59.259Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:59.255",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:59.254Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:53.254",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:53.254Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:53.250",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:53.249Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.249",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.249Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.247",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.247Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.246Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"d1297a12-3da8-4373-9579-8f4b8fe16864\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "06bd5848ace1b12f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.246Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491, timestamp=2025-02-02T18:18:32.218115Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.218115Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9ed9d11bb360e1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.243",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.243Z",
            "@version": "1",
            "message": "Portfolio link: 54cc8449-1230-4d55-8c9f-5654ea0645f6 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "06bd5848ace1b12f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.240",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.24Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0f82be80-d38e-40c9-b4d7-e55f5dcb95bb_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=815a84bc-b7e0-41cc-8268-0811a41ad267, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.907672Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=d1297a12-3da8-4373-9579-8f4b8fe16864), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "06bd5848ace1b12f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.239",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.239Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0f82be80-d38e-40c9-b4d7-e55f5dcb95bb, timestamp=2025-02-02T18:18:35.907672Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=815a84bc-b7e0-41cc-8268-0811a41ad267, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.907672Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.907672Z, failureReason=, associateAccountUpdate=Account(accountId=d1297a12-3da8-4373-9579-8f4b8fe16864), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8d27af6c06c6bf90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.238",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.238Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38598d65-7b1d-406c-9244-cea98b8da8eb_2, timestamp=2025-02-02T18:18:33.718459Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8c5d4e47-2d73-4878-a679-4aa05c03cc84, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.446239Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.718459Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "cc49e9251f85f745",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.236Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38598d65-7b1d-406c-9244-cea98b8da8eb, timestamp=2025-02-02T18:18:33.446239Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8c5d4e47-2d73-4878-a679-4aa05c03cc84, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.446239Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.446239Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "21a16bf8b710af82",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.235Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='2349a394-ce38-41af-8248-8803d766e3ad' and payload='{\"event_id\":\"a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2\",\"timestamp\":\"2025-02-02T18:18:33.026227Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.235Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.235Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:35.392Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:35.392Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:35.388",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:35.387Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:29.387",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:29.387Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:29.383",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:29.383Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.382",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.382Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.380",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.38Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.378",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.378Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f, timestamp=2025-02-02T18:18:32.257670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.257670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b88754d4a761f6a3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.376Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca, timestamp=2025-02-02T18:18:32.256509Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.256509Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "38028d00f9981bfc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.373Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"90e97238-bdd9-4ec0-90ae-5f447a41dc03\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d35b2ea6ffab02b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.374Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd, timestamp=2025-02-02T18:18:32.235636Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.235636Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "86f7ff833e109fdc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.373",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.373Z",
            "@version": "1",
            "message": "Portfolio link: f5fe584b-a89c-4341-b9a5-301a0639a495 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "d35b2ea6ffab02b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.370",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.37Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"6a1c1cc2-1dca-4969-b38a-a33258686d9c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "adfc37a80eaf26c7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.370",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.37Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2156f8a8-35fb-4eb8-93cf-68b9a2752b91_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5b340218-b738-416f-b23d-7882012e09f9, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.327863Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=90e97238-bdd9-4ec0-90ae-5f447a41dc03), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "d35b2ea6ffab02b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.369",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.369Z",
            "@version": "1",
            "message": "Portfolio link: da7379e5-bcfd-4ab0-984c-ee16303d519b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "adfc37a80eaf26c7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.367",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.367Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2d185a4b-997c-45bc-a4fe-901c08b79616_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=175814f0-af7a-40f4-a3f0-56518bea217f, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.357805Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a1c1cc2-1dca-4969-b38a-a33258686d9c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "adfc37a80eaf26c7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.366",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.366Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"46edb274-c9f3-402c-a17d-d88855b8cb49\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "7702129621a9a85d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.365",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.365Z",
            "@version": "1",
            "message": "Portfolio link: 249025a3-088b-457c-bcb8-101b20ddc6b8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7702129621a9a85d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.363",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.362Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=123e8ee2-ec7e-4f47-a35f-5bab3e8bbab5_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=acd5ed35-b25f-4568-ac18-e951d0c4bd97, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.338350Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=46edb274-c9f3-402c-a17d-d88855b8cb49), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7702129621a9a85d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.360",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.36Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=123e8ee2-ec7e-4f47-a35f-5bab3e8bbab5, timestamp=2025-02-02T18:15:21.338350Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=acd5ed35-b25f-4568-ac18-e951d0c4bd97, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.338350Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.338350Z, failureReason=, associateAccountUpdate=Account(accountId=46edb274-c9f3-402c-a17d-d88855b8cb49), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6453bbb8a7d3beac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.358",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.358Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2156f8a8-35fb-4eb8-93cf-68b9a2752b91, timestamp=2025-02-02T18:15:21.327863Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5b340218-b738-416f-b23d-7882012e09f9, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.327863Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.327863Z, failureReason=, associateAccountUpdate=Account(accountId=90e97238-bdd9-4ec0-90ae-5f447a41dc03), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "830bdd8524c512c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.356",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.356Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2d185a4b-997c-45bc-a4fe-901c08b79616, timestamp=2025-02-02T18:15:21.357805Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=175814f0-af7a-40f4-a3f0-56518bea217f, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.357805Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.357805Z, failureReason=, associateAccountUpdate=Account(accountId=6a1c1cc2-1dca-4969-b38a-a33258686d9c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "efa61f5b0ba1db3f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.354",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.354Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4da7b786-67b2-4c29-b81d-b2f12d97d2f7_2, timestamp=2025-02-02T18:15:19.151091Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ca3ce62f-da0c-4169-aca4-5417ed8e1b53, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.861548Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.151091Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bf03d62a1e97639e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.351",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.351Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4da7b786-67b2-4c29-b81d-b2f12d97d2f7, timestamp=2025-02-02T18:15:18.861548Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ca3ce62f-da0c-4169-aca4-5417ed8e1b53, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.861548Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.861548Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4d9994ef5fdff7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.350",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.35Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='e654e2b6-4bd4-463d-acdd-ae00ff189961' and payload='{\"event_id\":\"366fe816-e754-4073-8f06-15b5b39bfaf9_2\",\"timestamp\":\"2025-02-02T18:15:17.775418Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.350",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.35Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.350",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.35Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42548",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:50.234Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:50.234Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:50.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:50.23Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:44.229",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:44.229Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:44.225",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:44.225Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.224",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.224Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.220",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.219Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43498",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.220",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.22Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.219Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7b50b27c-32dd-460a-862e-692858e38ac6' and payload='{\"event_id\":\"11f0b2f0-4e04-498e-b6b7-726dc05b6450_2\",\"timestamp\":\"2025-02-02T18:18:32.941730Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.219Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:26.349",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:26.349Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:26.349",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:26.349Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:26.344",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:26.344Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:20.344",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:20.344Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:20.340",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:20.339Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.339",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.339Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.337",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.336Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.335",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.334Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9, timestamp=2025-02-02T18:15:17.629756Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.629756Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b4675f79f0c8ecbd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.334",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.333Z",
            "@version": "1",
            "message": "Portfolio link: e0806fb4-5c0d-4997-b4a1-f63777729e62 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "44a663662934736e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.334",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.334Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"629ae079-797a-4b68-ae42-658eafbdec66\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "44a663662934736e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.331",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.331Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5497c814-b4ba-4b38-b8b5-fdd657ae0087_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=dbc6dae3-b379-4f09-a1ae-7159b58c6e36, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.203364Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=629ae079-797a-4b68-ae42-658eafbdec66), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "44a663662934736e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.329Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c7a181a7a866c17d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.329Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5497c814-b4ba-4b38-b8b5-fdd657ae0087, timestamp=2025-02-02T18:12:03.203364Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=dbc6dae3-b379-4f09-a1ae-7159b58c6e36, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.203364Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.203364Z, failureReason=, associateAccountUpdate=Account(accountId=629ae079-797a-4b68-ae42-658eafbdec66), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "35bacb94592dc35d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.328",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.328Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c7a181a7a866c17d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.326",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.326Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c7a181a7a866c17d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.325",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.325Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c727bc77bfaaae18",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.324",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.324Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c727bc77bfaaae18",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.322",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.322Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "bc9193665eace996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.322",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.322Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c727bc77bfaaae18",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.32Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bc9193665eace996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.318",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.318Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bc9193665eace996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.316",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.316Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7d75faf6b8c9d6fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.314",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.314Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "54dc4c4629efc4a0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.312",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.311Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "043e472d4ecfbd89",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.309",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.309Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "43f853779a45c3ba",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.305Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "943c1f31b6170d2a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.304Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.305Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.305Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:41.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:41.217Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:41.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:41.217Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:41.213",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:41.213Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:35.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:35.212Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:35.208",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:35.208Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.207",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.207Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.203",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.203Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.202Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef' and payload='{\"event_id\":\"24e37ff4-d62f-4342-88a9-3ad378b58154_2\",\"timestamp\":\"2025-02-02T18:18:32.502774Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.202Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.202Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43497",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:17.303",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:17.303Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:17.303",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:17.303Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:17.299",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:17.299Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:11.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:11.298Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:11.294",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:11.294Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.293",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.293Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.289Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.288Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70e9cad0-6b40-4d02-9e76-af99e07a2e93' and payload='{\"event_id\":\"7f00e547-7515-463e-9513-a8e5c260fd3d_2\",\"timestamp\":\"2025-02-02T18:18:32.379670Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.288Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.288Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:32.200",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:32.2Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:32.200",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:32.2Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:32.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:32.196Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:26.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:26.195Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:26.192",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:26.191Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.191",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.191Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.189",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.189Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.188",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.188Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969, timestamp=2025-02-02T18:18:32.270360Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270360Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c2eadf6ea1c5151b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.187",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.187Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450, timestamp=2025-02-02T18:18:32.255540Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.255540Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5014aa9ab02a83c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.186",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.186Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154, timestamp=2025-02-02T18:18:32.228598Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.228598Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6d74a6ff6b1aeb85",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.185",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.185Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"b4ef4e64-d69e-4409-ab83-338be2467388\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8637ecb42ba30ac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.182",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.182Z",
            "@version": "1",
            "message": "Portfolio link: f8ee0aea-c920-4a1c-9d33-add0ee2f9a94 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8637ecb42ba30ac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.180",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.18Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"cceaa826-e5f4-481e-9590-bba5821db2d9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ec9668b64cf4748f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.180",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.18Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3bbb5cf3-b25c-4459-8b95-463d7a098dec_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=bcd4904d-df8f-4a78-b880-6a55f2d194a3, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.330362Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=b4ef4e64-d69e-4409-ab83-338be2467388), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8637ecb42ba30ac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.177",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.177Z",
            "@version": "1",
            "message": "Portfolio link: 9d92f26e-8ac2-4b56-9e6b-ddde972ad0de set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9668b64cf4748f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.175Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6f5a4361-5410-467d-a08d-efd981005ffc\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "530e50b83d2c54b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.175Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ed0c46cf-d6f9-4478-b47f-afc8f5390995_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0039ffd2-ac99-47b3-9a68-dd2d7dae0550, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.345190Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=cceaa826-e5f4-481e-9590-bba5821db2d9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9668b64cf4748f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.172",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.172Z",
            "@version": "1",
            "message": "Portfolio link: a5779740-4e89-4b88-a39e-b36e2daee94c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "530e50b83d2c54b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.168",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.168Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=545d58e3-8a5d-478b-bddf-0b2d9b0705d9_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0e27362e-8b0e-4e81-84a1-cac2d40027bf, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336628Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6f5a4361-5410-467d-a08d-efd981005ffc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "530e50b83d2c54b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.161",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.161Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ed0c46cf-d6f9-4478-b47f-afc8f5390995, timestamp=2025-02-02T18:15:21.345190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0039ffd2-ac99-47b3-9a68-dd2d7dae0550, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.345190Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.345190Z, failureReason=, associateAccountUpdate=Account(accountId=cceaa826-e5f4-481e-9590-bba5821db2d9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "28cc4baea5b19996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.160",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.16Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3bbb5cf3-b25c-4459-8b95-463d7a098dec, timestamp=2025-02-02T18:15:21.330362Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=bcd4904d-df8f-4a78-b880-6a55f2d194a3, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.330362Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.330362Z, failureReason=, associateAccountUpdate=Account(accountId=b4ef4e64-d69e-4409-ab83-338be2467388), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7e664647e593459c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.157Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.158Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43487",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.158Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=545d58e3-8a5d-478b-bddf-0b2d9b0705d9, timestamp=2025-02-02T18:15:21.336628Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0e27362e-8b0e-4e81-84a1-cac2d40027bf, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336628Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336628Z, failureReason=, associateAccountUpdate=Account(accountId=6f5a4361-5410-467d-a08d-efd981005ffc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f07d2ec621b486dc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.157Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b6a444bf-c3b3-482c-a72f-5f429889cb04' and payload='{\"event_id\":\"2f3a644b-f371-4473-9876-44c8670ec1d5_2\",\"timestamp\":\"2025-02-02T18:15:17.928662Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:08.287",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:08.287Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:08.287",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:08.287Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:08.283",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:08.282Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:07.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:07.733Z",
            "@version": "1",
            "message": "Portfolio link: eb86c76f-df83-40d8-817d-574d65e7ad10 set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe493e6ac3915baeb0d683f9ccf29",
            "spanId": "5b9b389563547dd8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:07.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:07.614Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=feb64eca-f996-4d9a-b6c9-0947d797807d, customerId=1730699089744064)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe493e6ac3915baeb0d683f9ccf29",
            "spanId": "5b9b389563547dd8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:07.607",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:07.607Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: feb64eca-f996-4d9a-b6c9-0947d797807d, errorId=e42cd024-6954-4bac-aee5-b3b518751b3d)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe493e6ac3915baeb0d683f9ccf29",
            "spanId": "7431e826792b5aeb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:02.282",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:02.282Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:02.278",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:02.277Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.277Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.275",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.275Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.273",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.273Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401, timestamp=2025-02-02T18:18:32.217467Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217467Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0e394e019116d85e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.271",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.271Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d, timestamp=2025-02-02T18:18:32.217415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217415Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "09e0ca86c577c728",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.270",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.27Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0dfe07a862bfd964",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.269",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.269Z",
            "@version": "1",
            "message": "Portfolio link: d6fd8cd7-c240-4c9a-89d6-5cbe5272e654 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0dfe07a862bfd964",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.267",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.267Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"6d855749-902b-4731-ac3b-5d16c8496476\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ad2d883e7ae9a577",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.267",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.267Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0dfe07a862bfd964",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.265",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.265Z",
            "@version": "1",
            "message": "Portfolio link: b40da19d-1a3b-4d77-8540-9bf1e923fa5f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ad2d883e7ae9a577",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.262",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.262Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125_2, timestamp=2025-02-02T18:15:21.564236Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.564236Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ad2d883e7ae9a577",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.260",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.26Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19, timestamp=2025-02-02T18:15:21.355537Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.355537Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2db4c33686d88184",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.258",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.258Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125, timestamp=2025-02-02T18:15:21.329310Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329310Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "95257c423c85ade9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.256",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.256Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36_2, timestamp=2025-02-02T18:15:19.336071Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.336071Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7312ae67ed5dd8cb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.253",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.253Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36, timestamp=2025-02-02T18:15:18.859365Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.859365Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3841fd617f9db558",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.252Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='426606eb-8509-4077-8372-7c0a8a3956b5' and payload='{\"event_id\":\"730b71fb-e333-4a1b-b909-fa384032c0c9_2\",\"timestamp\":\"2025-02-02T18:15:18.430034Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.252Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.252Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:57.281",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:57.281Z",
            "@version": "1",
            "message": "Portfolio link: a29c5503-d68a-4479-925f-e5d16a70887c set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe4893d3ac10ca67b52efc1861a94",
            "spanId": "b628655c21bad235",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:57.089",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:57.089Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=29a2654f-ede4-48ae-af48-91707580224b, customerId=1707355016613363)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe4893d3ac10ca67b52efc1861a94",
            "spanId": "b628655c21bad235",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:57.080",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:57.08Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: 29a2654f-ede4-48ae-af48-91707580224b, errorId=997db015-b68f-48d5-a162-4060034fc91a)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-9",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe4893d3ac10ca67b52efc1861a94",
            "spanId": "71e3dee2ea6f6af5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:23.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:23.157Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:23.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:23.157Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:23.153",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:23.153Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:17.152",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:17.152Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:17.147",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:17.147Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.146",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.146Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.142",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.142Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.141Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='a9437d08-d10f-422b-8de1-3196e564d72d' and payload='{\"event_id\":\"0afded4b-b775-4e49-813c-f9deb13795e2_2\",\"timestamp\":\"2025-02-02T18:15:17.883170Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.141Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.141Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43486",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:59.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:59.251Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:59.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:59.251Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:59.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:59.246Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:53.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:53.246Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:53.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:53.241Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.241Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.235Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='db56dc6b-5dbb-4e40-abd0-9dced38150fd' and payload='{\"event_id\":\"e04cfe2a-743c-4828-9070-1db0a12573cd_2\",\"timestamp\":\"2025-02-02T18:15:18.083039Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.236Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.236Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.236Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:14.139",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:14.139Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:14.139",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:14.139Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:14.135",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:14.135Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:08.134",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:08.134Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:08.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:08.13Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.129",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.129Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.127",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.127Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.126",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.126Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2, timestamp=2025-02-02T18:15:17.601860Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601860Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e5b77717cbcc2937",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.124",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.124Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"1d60989c-7f0e-4d9d-96f6-ef0415e93616\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "57cf97ef1b3e48a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.124",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.124Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5, timestamp=2025-02-02T18:15:17.657282Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.657282Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4a7cb52cdedf0040",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.121",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.121Z",
            "@version": "1",
            "message": "Portfolio link: 5728fe2e-95b2-4833-be9f-6541f355d1e3 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "57cf97ef1b3e48a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.119Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"5f9c8f0f-369b-43f7-a738-c07a8a652ea7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "71bef686352ae62d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.119Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "57cf97ef1b3e48a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.116",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.116Z",
            "@version": "1",
            "message": "Portfolio link: 1ca8affe-59f5-49ae-ae28-0ee32f13198f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71bef686352ae62d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.114Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"824e1725-77fc-4930-abce-4e8868d460e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "711cb8e299024d8e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.114Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71bef686352ae62d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.111",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.111Z",
            "@version": "1",
            "message": "Portfolio link: 8c32dde8-bb51-422e-bfe6-6152660e31ee set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "711cb8e299024d8e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.109",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.109Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"e5d317f6-f145-4a21-80f4-a891b09c0e56\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0f0359e4ad1dd029",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.109",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.109Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "711cb8e299024d8e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.106",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.106Z",
            "@version": "1",
            "message": "Portfolio link: d70537b0-7064-4d2d-b57f-444e61d78ac1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0f0359e4ad1dd029",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.104Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"b0fbe6ac-0e51-4150-bb96-adf8c4751d6e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "caa6c42b95beb600",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.104Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0f0359e4ad1dd029",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.101",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.101Z",
            "@version": "1",
            "message": "Portfolio link: 4472bf40-b488-4b48-93cb-9f64b8c13ab4 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "caa6c42b95beb600",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.098",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.098Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d_2, timestamp=2025-02-02T18:12:03.309330Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.309330Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "caa6c42b95beb600",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.097",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.097Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34, timestamp=2025-02-02T18:12:03.193924Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.193924Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "88bea47699f1067f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.096",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.095Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b, timestamp=2025-02-02T18:12:03.131381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.131381Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dc928d4ff09ceed5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.096",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.096Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801, timestamp=2025-02-02T18:12:03.138203Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.138203Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eb702543e4447b4c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.095",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.095Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918, timestamp=2025-02-02T18:12:03.146816Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.146816Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ba076edbcd3a8225",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.094",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.094Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d, timestamp=2025-02-02T18:12:03.117591Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.117591Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "814fb1b6185f2c02",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.093",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.093Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"06cc0375-c266-490f-ad40-5e12f0571d26\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "609322b9cb048fc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.090",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.09Z",
            "@version": "1",
            "message": "Portfolio link: 33403511-4e61-4a50-94d6-9b36efab630f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "609322b9cb048fc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.088",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.088Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8591b6fc-8575-45c9-a964-8043e739fee8_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8d71aa9e-6e8c-4323-956b-682b7648cddd, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.893290Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=06cc0375-c266-490f-ad40-5e12f0571d26), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "609322b9cb048fc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.087",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.087Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"1668a546-3d04-435c-8c94-5daa902b5c82\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "569d8f54066fae81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.084",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.084Z",
            "@version": "1",
            "message": "Portfolio link: 6e370d26-6e50-4764-bb3a-aafcf9a35e00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "569d8f54066fae81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.081",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.081Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"92580375-a276-4b8c-beab-f7ff5e85e0de\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "61a108c816013c52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.081",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.081Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bbd90dd3-a90c-41b2-84c1-d93f152c6820_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d572356c-db21-4199-9f63-20d909a8eccc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.884335Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=1668a546-3d04-435c-8c94-5daa902b5c82), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "569d8f54066fae81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.078",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.077Z",
            "@version": "1",
            "message": "Portfolio link: f5a7bbd0-e4f1-4393-a626-6235cfd4ed32 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "61a108c816013c52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.073Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=753ae715-e1d4-4315-aaea-90efd5b63c70_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5c4d5964-138a-4786-9e29-b76435e421a9, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.890502Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=92580375-a276-4b8c-beab-f7ff5e85e0de), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "61a108c816013c52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.072",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.072Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=753ae715-e1d4-4315-aaea-90efd5b63c70, timestamp=2025-02-02T18:18:35.890502Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5c4d5964-138a-4786-9e29-b76435e421a9, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.890502Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.890502Z, failureReason=, associateAccountUpdate=Account(accountId=92580375-a276-4b8c-beab-f7ff5e85e0de), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "10c9b4f3f51db732",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.071",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.071Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8591b6fc-8575-45c9-a964-8043e739fee8, timestamp=2025-02-02T18:18:35.893290Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8d71aa9e-6e8c-4323-956b-682b7648cddd, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.893290Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.893290Z, failureReason=, associateAccountUpdate=Account(accountId=06cc0375-c266-490f-ad40-5e12f0571d26), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8599c14108b0d60",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.069Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bbd90dd3-a90c-41b2-84c1-d93f152c6820, timestamp=2025-02-02T18:18:35.884335Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d572356c-db21-4199-9f63-20d909a8eccc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.884335Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.884335Z, failureReason=, associateAccountUpdate=Account(accountId=1668a546-3d04-435c-8c94-5daa902b5c82), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c7b032c13b260a32",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.068",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.067Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d5c8a047-11d6-4cfe-9cea-a982cf166adc' and payload='{\"event_id\":\"d9e6e00a-7e91-4c3d-8b49-694f8c057915_2\",\"timestamp\":\"2025-02-02T18:18:32.983549Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.068",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.068Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.068",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.068Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42981",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:50.234Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:50.234Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:50.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:50.23Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:44.229",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:44.229Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:44.225",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:44.225Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.224",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.224Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.220",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.22Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.219Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.219Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.218",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.218Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf' and payload='{\"event_id\":\"cf95cbd9-3d29-4bd7-94a6-06f003261996_2\",\"timestamp\":\"2025-02-02T18:15:17.816588Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:05.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:05.066Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:05.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:05.067Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:05.061",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:05.061Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:59.061",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:59.06Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:59.056",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:59.056Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:56.056",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:56.055Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:56.051",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:56.051Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:56.050",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:56.049Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b62db519-2186-4b63-87ff-3693dc879509' and payload='{\"event_id\":\"5db7f139-0ef4-413d-838c-40406039ba33_2\",\"timestamp\":\"2025-02-02T18:18:32.903180Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:56.050",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:56.05Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42980",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:56.050",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:56.05Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42980",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42980\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42980\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:45.038",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:45.037Z",
            "@version": "1",
            "message": "[Producer clientId=producer-1] Resetting the last seen epoch of partition deposit-portfolio-service.portfolio-link.snapshot.v2-0 to 112 since the associated topicId changed from null to h2CV0iFTQAif70jMHd0YAw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:41.216",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:41.216Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:41.216",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:41.216Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:41.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:41.212Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:35.211",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:35.211Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:35.207",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:35.207Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.206",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.206Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.204",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.204Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.202Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9, timestamp=2025-02-02T18:15:17.663083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.663083Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ec316d0be35851da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.200",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.2Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd, timestamp=2025-02-02T18:15:17.632413Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.632413Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "856d1c7f136bc3de",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.197Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996, timestamp=2025-02-02T18:15:17.653597Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.653597Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e0141b4ea6f6136b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.197",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.197Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"6a543854-abc3-4604-a4a6-3ce3ed17e540\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "b95d69b328c50045",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.196Z",
            "@version": "1",
            "message": "Portfolio link: df5f254f-4e48-44a4-988d-d3404218ac58 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b95d69b328c50045",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.194",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.194Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b95d69b328c50045",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.192",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.192Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"e8997912-4343-4217-a30f-267737c20f84\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1a1ee83c9af7cc84",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.192",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.192Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5, timestamp=2025-02-02T18:12:03.175090Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.175090Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4af88bf6bbb1eb30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.181",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.181Z",
            "@version": "1",
            "message": "Portfolio link: 0476eca2-34c1-4945-93e3-33dbb8b35db8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1a1ee83c9af7cc84",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.178",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.178Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1_2, timestamp=2025-02-02T20:49:28.710444Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.710444Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1a1ee83c9af7cc84",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.176",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.176Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"272f2b99-38d9-45be-ba67-d5fb9d9f88c0\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "7297e864cbcef8a6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.176",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.176Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1, timestamp=2025-02-02T20:49:28.467773Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.467773Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a8f70ef75ee24526",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.175Z",
            "@version": "1",
            "message": "Portfolio link: 5fc8d7a4-f280-4f8f-a63a-85f60a1add38 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7297e864cbcef8a6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.173",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.173Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"9790d47d-51cc-46ba-9966-9bef635f9bb9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1f793811475152df",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.173",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.173Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7297e864cbcef8a6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.172",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.172Z",
            "@version": "1",
            "message": "Portfolio link: 3fc46cbb-75b9-42a1-9852-3e05ff6531c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1f793811475152df",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.169Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"55af6aea-2424-4cb6-a7e0-dc8ebdceff23\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "30cee5e4a1ab9966",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.170",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.17Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1f793811475152df",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.168",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.168Z",
            "@version": "1",
            "message": "Portfolio link: 9ff492fc-605b-4132-b5a2-7ecc1c685b27 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "30cee5e4a1ab9966",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.166",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.166Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "30cee5e4a1ab9966",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.164",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.164Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0, timestamp=2025-02-02T18:18:35.903081Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903081Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b0181414037bdc4e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.162",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.161Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e, timestamp=2025-02-02T18:18:35.856574Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.856574Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "196bda4a1a5f2e6c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.158Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.158Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454, timestamp=2025-02-02T18:18:35.859684Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.859684Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c712d15b83f4278d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.157Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d7400648-0588-46be-ae7f-91e0385a8291' and payload='{\"event_id\":\"58a87771-a9fb-462f-b149-600751268491_2\",\"timestamp\":\"2025-02-02T18:18:32.462144Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 3:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:29:32.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:29:32.157Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:56.049",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:56.049Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:56.049",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:56.049Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:56.045",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:56.044Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33_2, timestamp=2025-02-02T18:18:32.903180Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.903180Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:50.044",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:50.044Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:50.039",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:50.039Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33_2, timestamp=2025-02-02T18:18:32.903180Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.903180Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.039",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.038Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.036",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.036Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915, timestamp=2025-02-02T18:18:32.259307Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.259307Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "664aafab9b2ccb30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.036",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.036Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33_2, timestamp=2025-02-02T18:18:32.903180Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.903180Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ef3057f6f56d7ff6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.035",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.034Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"61c5040f-6ca4-471b-8c00-7e38bdaa13d5\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "9acd57a2e284304c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.035",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.035Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33, timestamp=2025-02-02T18:18:32.225041Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.225041Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b3d1cca1cfd66bcf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.032",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.032Z",
            "@version": "1",
            "message": "Portfolio link: d4d1fd73-8048-43be-a175-9eca40e740af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9acd57a2e284304c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.028",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.028Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e84a64c9-e09a-4f52-8e43-52a6675dd125_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b80b46e-f7a5-42d9-bb51-fd92b4cc3a14, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329965Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=61c5040f-6ca4-471b-8c00-7e38bdaa13d5), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9acd57a2e284304c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.026",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.025Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b5b78e87-e78f-4826-9463-67ab83bd1f28' and payload='{\"event_id\":\"4257e8fe-0a88-4738-aacc-348857f601b3_2\",\"timestamp\":\"2025-02-02T18:15:18.351087Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.026",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.026Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42975",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.026",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.026Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42975",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42975\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42975\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:47.026",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:47.026Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e84a64c9-e09a-4f52-8e43-52a6675dd125, timestamp=2025-02-02T18:15:21.329965Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7b80b46e-f7a5-42d9-bb51-fd92b4cc3a14, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329965Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329965Z, failureReason=, associateAccountUpdate=Account(accountId=61c5040f-6ca4-471b-8c00-7e38bdaa13d5), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0766f0b9d9f69fcd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:32.156",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:32.156Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:32.156",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:32.156Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:32.152",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:32.152Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:26.151",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:26.151Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:26.147",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:26.147Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.146",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.146Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.144",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.143Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3dd16e5850e15850",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.141Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"06cc0375-c266-490f-ad40-5e12f0571d26\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "89e9bc0d80937788",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.141Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491, timestamp=2025-02-02T18:18:32.218115Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.218115Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "806d957d00eebffa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.140",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.139Z",
            "@version": "1",
            "message": "Portfolio link: 33403511-4e61-4a50-94d6-9b36efab630f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "89e9bc0d80937788",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.137",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.137Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"1668a546-3d04-435c-8c94-5daa902b5c82\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "286d628c929774b7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.137",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.137Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8591b6fc-8575-45c9-a964-8043e739fee8_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8d71aa9e-6e8c-4323-956b-682b7648cddd, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.893290Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=06cc0375-c266-490f-ad40-5e12f0571d26), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "89e9bc0d80937788",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.136",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.135Z",
            "@version": "1",
            "message": "Portfolio link: 6e370d26-6e50-4764-bb3a-aafcf9a35e00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "286d628c929774b7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.133",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.133Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"92580375-a276-4b8c-beab-f7ff5e85e0de\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "88f0bada8af2dfdf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.133",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.133Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bbd90dd3-a90c-41b2-84c1-d93f152c6820_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d572356c-db21-4199-9f63-20d909a8eccc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.884335Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=1668a546-3d04-435c-8c94-5daa902b5c82), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "286d628c929774b7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.132",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.131Z",
            "@version": "1",
            "message": "Portfolio link: f5a7bbd0-e4f1-4393-a626-6235cfd4ed32 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "88f0bada8af2dfdf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.128",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.128Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=753ae715-e1d4-4315-aaea-90efd5b63c70_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5c4d5964-138a-4786-9e29-b76435e421a9, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.890502Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=92580375-a276-4b8c-beab-f7ff5e85e0de), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "88f0bada8af2dfdf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.126",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.126Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=753ae715-e1d4-4315-aaea-90efd5b63c70, timestamp=2025-02-02T18:18:35.890502Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5c4d5964-138a-4786-9e29-b76435e421a9, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.890502Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.890502Z, failureReason=, associateAccountUpdate=Account(accountId=92580375-a276-4b8c-beab-f7ff5e85e0de), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "fb7ccba224003a72",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.124",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.124Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8591b6fc-8575-45c9-a964-8043e739fee8, timestamp=2025-02-02T18:18:35.893290Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8d71aa9e-6e8c-4323-956b-682b7648cddd, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.893290Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.893290Z, failureReason=, associateAccountUpdate=Account(accountId=06cc0375-c266-490f-ad40-5e12f0571d26), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bad0f58c4c7f6912",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.121",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.121Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bbd90dd3-a90c-41b2-84c1-d93f152c6820, timestamp=2025-02-02T18:18:35.884335Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d572356c-db21-4199-9f63-20d909a8eccc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.884335Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.884335Z, failureReason=, associateAccountUpdate=Account(accountId=1668a546-3d04-435c-8c94-5daa902b5c82), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cbebc03ab9a3a8fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.120",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.12Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d5c8a047-11d6-4cfe-9cea-a982cf166adc' and payload='{\"event_id\":\"d9e6e00a-7e91-4c3d-8b49-694f8c057915_2\",\"timestamp\":\"2025-02-02T18:18:32.983549Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.120",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.12Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:28:23.120",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:28:23.12Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42981",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:47.025",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:47.024Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:47.025",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:47.025Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:47.020",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:47.02Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3_2, timestamp=2025-02-02T18:15:18.351087Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.351087Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:41.019",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:41.019Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:41.015",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:41.015Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3_2, timestamp=2025-02-02T18:15:18.351087Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.351087Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.014",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.014Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.012",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.012Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3_2, timestamp=2025-02-02T18:15:18.351087Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.351087Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ae42a2a2a75054d6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.011",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.011Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3, timestamp=2025-02-02T18:15:17.649053Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.649053Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "40f2dd3e4e619623",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.010",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.01Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"a4e2fd25-c018-4c13-864d-acec62d210ef\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a0b680427858ba0a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.008",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.007Z",
            "@version": "1",
            "message": "Portfolio link: d94f8415-77bc-4b17-ae73-0b94243c90a7 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a0b680427858ba0a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.005Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"ae032bbf-6460-41db-b3e9-e9463546d026\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2e3fe3f023edd50a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.005Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c18e5d9c-458b-4ab7-a555-954580bb1fcf_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c063d40e-f331-4f13-9fcb-638437572d83, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.148402Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=a4e2fd25-c018-4c13-864d-acec62d210ef), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a0b680427858ba0a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:38.002",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:38.002Z",
            "@version": "1",
            "message": "Portfolio link: 1444f321-49e7-4abb-83d2-d55c0aedd92e set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2e3fe3f023edd50a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:37.999",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:37.999Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=14e4cd98-d950-4b6f-89e8-1bb1d9026253_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=261570be-4794-4a49-8a88-baa9ff508e1c, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.155329Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=ae032bbf-6460-41db-b3e9-e9463546d026), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2e3fe3f023edd50a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:37.998",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:37.998Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c18e5d9c-458b-4ab7-a555-954580bb1fcf, timestamp=2025-02-02T18:12:03.148402Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c063d40e-f331-4f13-9fcb-638437572d83, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.148402Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.148402Z, failureReason=, associateAccountUpdate=Account(accountId=a4e2fd25-c018-4c13-864d-acec62d210ef), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7e4c05ad2a23e1f5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:37.996",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:37.996Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=14e4cd98-d950-4b6f-89e8-1bb1d9026253, timestamp=2025-02-02T18:12:03.155329Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=261570be-4794-4a49-8a88-baa9ff508e1c, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.155329Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.155329Z, failureReason=, associateAccountUpdate=Account(accountId=ae032bbf-6460-41db-b3e9-e9463546d026), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bc8a67e867cbfb29",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:37.995",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:37.995Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='46d54936-d90a-40eb-bb6e-6c9afa5827ed' and payload='{\"event_id\":\"c1f96f04-febe-4980-82fb-207ffc5cdbca_2\",\"timestamp\":\"2025-02-02T18:11:59.971066Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:37.995",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:37.995Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42969",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:37.995",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:37.995Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42969",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42969\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42969\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:23.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:23.119Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:23.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:23.119Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:23.115",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:23.114Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:17.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:17.114Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:17.110",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:17.109Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:14.109",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:14.109Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:14.105",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:14.105Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "47e5f8ad82988688",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:14.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:14.104Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b62db519-2186-4b63-87ff-3693dc879509' and payload='{\"event_id\":\"5db7f139-0ef4-413d-838c-40406039ba33_2\",\"timestamp\":\"2025-02-02T18:18:32.903180Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:14.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:14.104Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42980",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:27:14.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:27:14.104Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42980",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42980\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42980\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:37.993",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:37.993Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:37.993",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:37.993Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:37.989",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:37.989Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca_2, timestamp=2025-02-02T18:11:59.971066Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.971066Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:31.988",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:31.988Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:31.983",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:31.983Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca_2, timestamp=2025-02-02T18:11:59.971066Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.971066Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.982",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.982Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.980",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.98Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca_2, timestamp=2025-02-02T18:11:59.971066Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.971066Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b7cb4c59197a306b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.979",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.979Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca, timestamp=2025-02-02T18:11:59.663595Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.663595Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6d09e65532a994fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.978",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.978Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"f5938635-c98a-431d-91fb-93114bdd251f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "4716732243d646e3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.976",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.976Z",
            "@version": "1",
            "message": "Portfolio link: 05841524-da36-46ab-9936-2bcbed069512 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4716732243d646e3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.973Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"a1cf7616-708e-4484-a5cd-fb78b9278d5f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "b8f7e84ac31dc864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.973Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e_2, timestamp=2025-02-02T18:18:36.210912Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.210912Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4716732243d646e3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.970",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.97Z",
            "@version": "1",
            "message": "Portfolio link: 01b97862-a93a-46f1-abc8-ad7dcb5de7aa set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b8f7e84ac31dc864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.968",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.968Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b8f7e84ac31dc864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.967",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.967Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"0d7cb982-1617-45ff-bf52-c4d4de435f5a\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "750e3f5839ed5509",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.965",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.965Z",
            "@version": "1",
            "message": "Portfolio link: d3ac6f3d-52d2-449e-8288-8607db4ce588 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "750e3f5839ed5509",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.962",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.962Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"2e2735a3-9969-4285-a02c-b28db574d000\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "6a7026a3567eff9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.962",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.962Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "750e3f5839ed5509",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.959",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.959Z",
            "@version": "1",
            "message": "Portfolio link: d2e95cbe-7a6a-44ae-8f10-057f96d01af7 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6a7026a3567eff9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.955",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.955Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6a7026a3567eff9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.954",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.954Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e, timestamp=2025-02-02T18:18:35.924393Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.924393Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "86a66698467d2a9a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.953",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.953Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f, timestamp=2025-02-02T18:18:35.903351Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903351Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6c4e6fae63a1d3c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.952",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.952Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba, timestamp=2025-02-02T18:18:35.885991Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.885991Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fd5d6cb1773b9b50",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.950",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.949Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.950",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.95Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.950",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.95Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83, timestamp=2025-02-02T18:18:35.872926Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872926Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5f5cce12c810621a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:28.949",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:28.949Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='371a527b-0c4e-4dbb-a0d9-779d0201582d' and payload='{\"event_id\":\"eddde247-190a-48c8-91ca-4f55a93ccf95_2\",\"timestamp\":\"2025-02-02T18:18:32.863712Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:14.102",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:14.102Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:14.102",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:14.102Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:14.098",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:14.098Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33_2, timestamp=2025-02-02T18:18:32.903180Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.903180Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:08.097",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:08.097Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:08.093",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:08.092Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33_2, timestamp=2025-02-02T18:18:32.903180Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.903180Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.092",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.092Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.090",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.09Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33_2, timestamp=2025-02-02T18:18:32.903180Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.903180Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "458fe531a7eee864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.088",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.088Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915, timestamp=2025-02-02T18:18:32.259307Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.259307Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "27c14bddeb0c438d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.086",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.085Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5db7f139-0ef4-413d-838c-40406039ba33, timestamp=2025-02-02T18:18:32.225041Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b62db519-2186-4b63-87ff-3693dc879509, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.225041Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.225041Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f69f5df6-2ff8-a3f1-138e-77410c5e6bb4), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3192c4c02f56e341",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.085",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.085Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"61c5040f-6ca4-471b-8c00-7e38bdaa13d5\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f1cbadf5d56243ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.084",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.084Z",
            "@version": "1",
            "message": "Portfolio link: d4d1fd73-8048-43be-a175-9eca40e740af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f1cbadf5d56243ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.081",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.081Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e84a64c9-e09a-4f52-8e43-52a6675dd125_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b80b46e-f7a5-42d9-bb51-fd92b4cc3a14, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329965Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=61c5040f-6ca4-471b-8c00-7e38bdaa13d5), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f1cbadf5d56243ca",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.077",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.076Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42975",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.077",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.077Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42975",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42975\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42975\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.077",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.077Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e84a64c9-e09a-4f52-8e43-52a6675dd125, timestamp=2025-02-02T18:15:21.329965Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7b80b46e-f7a5-42d9-bb51-fd92b4cc3a14, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329965Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329965Z, failureReason=, associateAccountUpdate=Account(accountId=61c5040f-6ca4-471b-8c00-7e38bdaa13d5), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "56044ff4a6d47fe1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:26:05.076",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:26:05.076Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b5b78e87-e78f-4826-9463-67ab83bd1f28' and payload='{\"event_id\":\"4257e8fe-0a88-4738-aacc-348857f601b3_2\",\"timestamp\":\"2025-02-02T18:15:18.351087Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:28.948",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:28.948Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:28.948",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:28.948Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:28.944",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:28.944Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:22.943",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:22.943Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:22.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:22.939Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:19.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:19.938Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:19.934",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:19.934Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fe2abbb7d64251ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:19.933",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:19.933Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='37961a00-12fb-46fe-bc86-3eba2b01f184' and payload='{\"event_id\":\"32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2\",\"timestamp\":\"2025-02-02T18:18:32.638887Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:19.933",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:19.933Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:19.933",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:19.933Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:05.076",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:05.076Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:05.076",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:05.076Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:25:05.072",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:25:05.071Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3_2, timestamp=2025-02-02T18:15:18.351087Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.351087Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:59.071",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:59.071Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:59.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:59.066Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3_2, timestamp=2025-02-02T18:15:18.351087Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.351087Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.066",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.066Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.064",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.063Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3_2, timestamp=2025-02-02T18:15:18.351087Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.351087Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "80a47fa0626adf1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.061",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.061Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"a4e2fd25-c018-4c13-864d-acec62d210ef\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "07f98b12e60c526e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.061",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.061Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4257e8fe-0a88-4738-aacc-348857f601b3, timestamp=2025-02-02T18:15:17.649053Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b5b78e87-e78f-4826-9463-67ab83bd1f28, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.649053Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.649053Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=44617e65-264c-398d-2867-b086c25981ef), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1001f11bedd83c04",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.060",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.06Z",
            "@version": "1",
            "message": "Portfolio link: d94f8415-77bc-4b17-ae73-0b94243c90a7 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "07f98b12e60c526e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.058",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.058Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c18e5d9c-458b-4ab7-a555-954580bb1fcf_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c063d40e-f331-4f13-9fcb-638437572d83, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.148402Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=a4e2fd25-c018-4c13-864d-acec62d210ef), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "07f98b12e60c526e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.057",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.057Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"ae032bbf-6460-41db-b3e9-e9463546d026\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "3ad50624cc34074d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.056",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.056Z",
            "@version": "1",
            "message": "Portfolio link: 1444f321-49e7-4abb-83d2-d55c0aedd92e set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3ad50624cc34074d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.053",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.053Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=14e4cd98-d950-4b6f-89e8-1bb1d9026253_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=261570be-4794-4a49-8a88-baa9ff508e1c, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.155329Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=ae032bbf-6460-41db-b3e9-e9463546d026), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3ad50624cc34074d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.051",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.051Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c18e5d9c-458b-4ab7-a555-954580bb1fcf, timestamp=2025-02-02T18:12:03.148402Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c063d40e-f331-4f13-9fcb-638437572d83, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.148402Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.148402Z, failureReason=, associateAccountUpdate=Account(accountId=a4e2fd25-c018-4c13-864d-acec62d210ef), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "294c830f4275d742",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.047",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.046Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42969",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.047",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.047Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42969",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42969\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42969\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.047",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.047Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=14e4cd98-d950-4b6f-89e8-1bb1d9026253, timestamp=2025-02-02T18:12:03.155329Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=261570be-4794-4a49-8a88-baa9ff508e1c, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.155329Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.155329Z, failureReason=, associateAccountUpdate=Account(accountId=ae032bbf-6460-41db-b3e9-e9463546d026), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3e9bc4b735a78c75",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:56.046",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:56.046Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='46d54936-d90a-40eb-bb6e-6c9afa5827ed' and payload='{\"event_id\":\"c1f96f04-febe-4980-82fb-207ffc5cdbca_2\",\"timestamp\":\"2025-02-02T18:11:59.971066Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:19.932",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:19.932Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:19.932",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:19.932Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:19.927",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:19.927Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:13.927",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:13.926Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:13.922",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:13.922Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:10.921",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:10.921Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:10.917",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:10.916Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:10.917",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:10.917Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:10.917",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:10.917Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d50e8500bd9b97d0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:24:10.916",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:24:10.916Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='82708a52-911c-4515-88a3-c63e151d6454' and payload='{\"event_id\":\"ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2\",\"timestamp\":\"2025-02-02T18:18:32.373190Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:56.046",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:56.046Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:56.046",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:56.046Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:56.042",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:56.041Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca_2, timestamp=2025-02-02T18:11:59.971066Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.971066Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:50.041",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:50.041Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:50.037",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:50.037Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca_2, timestamp=2025-02-02T18:11:59.971066Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.971066Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.036",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.036Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.034",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.034Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca_2, timestamp=2025-02-02T18:11:59.971066Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.971066Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "939c379069482230",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.032",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.031Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c1f96f04-febe-4980-82fb-207ffc5cdbca, timestamp=2025-02-02T18:11:59.663595Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=46d54936-d90a-40eb-bb6e-6c9afa5827ed, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.663595Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.663595Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c76242c0-0ede-a164-73bf-dfa7ae5c0340), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b197e36e33c301de",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.031",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.031Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"f5938635-c98a-431d-91fb-93114bdd251f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8127ddb452ea867b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.030",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.03Z",
            "@version": "1",
            "message": "Portfolio link: 05841524-da36-46ab-9936-2bcbed069512 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8127ddb452ea867b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.028",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.027Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"a1cf7616-708e-4484-a5cd-fb78b9278d5f\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "07c755fc25c1b8b3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.028",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.028Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e_2, timestamp=2025-02-02T18:18:36.210912Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.210912Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8127ddb452ea867b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.026",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.026Z",
            "@version": "1",
            "message": "Portfolio link: 01b97862-a93a-46f1-abc8-ad7dcb5de7aa set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "07c755fc25c1b8b3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.024",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.024Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"0d7cb982-1617-45ff-bf52-c4d4de435f5a\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "142c950a554c4b24",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.024",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.024Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "07c755fc25c1b8b3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.023",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.023Z",
            "@version": "1",
            "message": "Portfolio link: d3ac6f3d-52d2-449e-8288-8607db4ce588 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "142c950a554c4b24",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.020",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.02Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"2e2735a3-9969-4285-a02c-b28db574d000\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1f3e75266374c40b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.020",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.02Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "142c950a554c4b24",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.019",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.018Z",
            "@version": "1",
            "message": "Portfolio link: d2e95cbe-7a6a-44ae-8f10-057f96d01af7 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1f3e75266374c40b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.015",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.015Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1f3e75266374c40b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.013",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.013Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f7359eec-4ff5-44d2-85e6-7bc1ad8f901e, timestamp=2025-02-02T18:18:35.924393Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a89c272c-d793-434a-87fb-1be352d08aa8, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.924393Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.924393Z, failureReason=, associateAccountUpdate=Account(accountId=f5938635-c98a-431d-91fb-93114bdd251f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "18e5f535c85b9b5d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.011",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.011Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9be4f9c7-d4f4-4984-b5d7-0d3e4019ec3f, timestamp=2025-02-02T18:18:35.903351Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1d77593e-f266-479f-9400-212eaa6aaaac, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903351Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903351Z, failureReason=, associateAccountUpdate=Account(accountId=a1cf7616-708e-4484-a5cd-fb78b9278d5f), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8cde98472f879339",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.009",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.009Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6ee74360-33ed-4942-bc8f-eca3e4eb90ba, timestamp=2025-02-02T18:18:35.885991Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1ba6a74-ff44-4749-bafe-4ca6e9455ee5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.885991Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.885991Z, failureReason=, associateAccountUpdate=Account(accountId=2e2735a3-9969-4285-a02c-b28db574d000), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ebbce9bbcb194f64",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.004Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.005Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42900",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42900\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.005Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74b4a89c-d2a4-426f-acc6-deaf3a459f83, timestamp=2025-02-02T18:18:35.872926Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9001389-1993-44bf-b2eb-c702cfdb2299, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872926Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872926Z, failureReason=, associateAccountUpdate=Account(accountId=0d7cb982-1617-45ff-bf52-c4d4de435f5a), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "dd8de70d4385285f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:47.004",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:47.004Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='371a527b-0c4e-4dbb-a0d9-779d0201582d' and payload='{\"event_id\":\"eddde247-190a-48c8-91ca-4f55a93ccf95_2\",\"timestamp\":\"2025-02-02T18:18:32.863712Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:10.916",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:10.916Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:10.916",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:10.916Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:10.912",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:10.911Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:04.911",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:04.911Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:04.906",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:04.906Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.906",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.906Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.903",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.903Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8be7c5da34b3456",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.902",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.902Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62, timestamp=2025-02-02T18:18:32.275074Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.275074Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9bd0fc634cdde2fb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.901",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.901Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f, timestamp=2025-02-02T18:18:32.250427Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.250427Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0e76e98d69e130d3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.900",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.9Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"aebc8925-ca78-4905-8f86-4e0c2bbc3969\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "67cdffa96b72c277",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.900",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.9Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95, timestamp=2025-02-02T18:18:32.214034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.214034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "66388ffab3e4fcee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.897",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.896Z",
            "@version": "1",
            "message": "Portfolio link: c32e5a1f-0fc2-4cd8-9c8e-cb9f01540b73 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "67cdffa96b72c277",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.893",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.893Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "67cdffa96b72c277",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.892",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.892Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe, timestamp=2025-02-02T18:15:21.313898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313898Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f2f8b49d3cfae5ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.891",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.891Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6_2, timestamp=2025-02-02T18:15:19.328675Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.328675Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2df586519424eb69",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.889",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.888Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6, timestamp=2025-02-02T18:15:18.883906Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.883906Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0dfbfd864d45eaa2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.888",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.888Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.888",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.888Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:23:01.887",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:23:01.887Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='1f547a95-6c8c-4077-bda4-954eb2b99b3b' and payload='{\"event_id\":\"b57bae48-b074-4ef8-ade2-212e40302b35_2\",\"timestamp\":\"2025-02-02T18:15:18.388619Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:47.004",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:47.004Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:47.004",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:47.004Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:47.000",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:46.999Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:40.999",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:40.999Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:40.994",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:40.994Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:37.994",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:37.993Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:37.989",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:37.988Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:37.989",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:37.989Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42899",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42899\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:37.989",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:37.989Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95_2, timestamp=2025-02-02T18:18:32.863712Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.863712Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cf49c8998e0ae904",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:37.988",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:37.988Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='37961a00-12fb-46fe-bc86-3eba2b01f184' and payload='{\"event_id\":\"32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2\",\"timestamp\":\"2025-02-02T18:18:32.638887Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:01.887",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:01.887Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:01.887",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:01.887Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:22:01.882",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:22:01.882Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:55.882",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:55.881Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:55.877",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:55.877Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:52.877",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:52.876Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:52.872",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:52.872Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0afafcc929989bdb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:52.871",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:52.871Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b16cd359-7a1d-4473-9b50-15fe6813671b' and payload='{\"event_id\":\"43924148-99c5-4330-91b4-f69ed9b9a954_2\",\"timestamp\":\"2025-02-02T18:15:18.121289Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:52.871",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:52.871Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:52.871",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:52.871Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:52.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:52.674Z",
            "@version": "1",
            "message": "[Producer clientId=producer-3] Node 5 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-3",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:37.988",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:37.988Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:37.988",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:37.988Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:37.984",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:37.983Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:31.983",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:31.983Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:31.979",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:31.978Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:28.978",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:28.978Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:28.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:28.972Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='82708a52-911c-4515-88a3-c63e151d6454' and payload='{\"event_id\":\"ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2\",\"timestamp\":\"2025-02-02T18:18:32.373190Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:28.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:28.973Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:28.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:28.973Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42898",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42898\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:21:28.973",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:21:28.973Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f_2, timestamp=2025-02-02T18:18:32.638887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.638887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fbe80cee1cf9f52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:52.869",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:52.869Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:52.869",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:52.869Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:52.865",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:52.865Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:46.864",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:46.864Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:46.860",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:46.859Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:43.859",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:43.859Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:43.855",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:43.855Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dcebb36105e803cc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:43.854",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:43.854Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:43.853",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:43.853Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='02e28334-4ade-44fa-beed-c1e83b142c38' and payload='{\"event_id\":\"b9140690-89d2-4b72-8a97-b9e00ccdf264_2\",\"timestamp\":\"2025-02-02T18:15:17.957587Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:43.853",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:43.853Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:28.971",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:28.971Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:28.971",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:28.971Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:28.966",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:28.966Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:22.966",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:22.966Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:22.961",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:22.961Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.961",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.961Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.958",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.958Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62_2, timestamp=2025-02-02T18:18:32.373190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.373190Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a18f47379a43f37",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.956",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.956Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ab0db579-8abc-4bb3-8ed7-07ae3a5a3b62, timestamp=2025-02-02T18:18:32.275074Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=82708a52-911c-4515-88a3-c63e151d6454, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.275074Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.275074Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=4a9e3e2f-c805-ddfd-7848-6da9bba4b8fd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "83929fc52e4476af",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.954",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.954Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=32e1c9b5-8db7-48d8-9337-2fadb8bd289f, timestamp=2025-02-02T18:18:32.250427Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=37961a00-12fb-46fe-bc86-3eba2b01f184, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.250427Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.250427Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b4226563-ad83-0df3-dc20-015b339694ec), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0fa5f66afa62a6f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.952",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.952Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"aebc8925-ca78-4905-8f86-4e0c2bbc3969\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "af30db28262dddbd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.952",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.952Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=eddde247-190a-48c8-91ca-4f55a93ccf95, timestamp=2025-02-02T18:18:32.214034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=371a527b-0c4e-4dbb-a0d9-779d0201582d, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.214034Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.214034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fa0fa70-c572-a71e-6101-b2589e3feb35), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c83fc55422cc2afd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.950",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.95Z",
            "@version": "1",
            "message": "Portfolio link: c32e5a1f-0fc2-4cd8-9c8e-cb9f01540b73 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "af30db28262dddbd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.947",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.947Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "af30db28262dddbd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.945",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.945Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ac287654-72ec-4fed-867d-a6efcfede5fe, timestamp=2025-02-02T18:15:21.313898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2409e0e7-1619-4288-8ae5-2cb7e1114f34, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313898Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313898Z, failureReason=, associateAccountUpdate=Account(accountId=aebc8925-ca78-4905-8f86-4e0c2bbc3969), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a31428b33ac7fab3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.943",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.943Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6_2, timestamp=2025-02-02T18:15:19.328675Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.328675Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8325d8e59ed0bfce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.938Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='1f547a95-6c8c-4077-bda4-954eb2b99b3b' and payload='{\"event_id\":\"b57bae48-b074-4ef8-ade2-212e40302b35_2\",\"timestamp\":\"2025-02-02T18:15:18.388619Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.939Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.939Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42890",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42890\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:20:19.939",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:20:19.939Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=160431f6-9541-4385-88cf-26fe77c7c9e6, timestamp=2025-02-02T18:15:18.883906Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=09814599-0066-4e5a-a35f-a8d537f02e58, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.883906Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.883906Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2dcc86fdbdfe4fb9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:43.853",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:43.853Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:43.853",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:43.853Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:43.849",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:43.848Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:37.848",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:37.848Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:37.844",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:37.843Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:34.843",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:34.843Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:34.838",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:34.837Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:34.838",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:34.838Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "18521e9c36d487da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:34.837",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:34.837Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7bee721e-0f9c-4229-b2d3-fb1acc923a55' and payload='{\"event_id\":\"b5d5568e-03d4-486c-a349-61ca99a12f80_2\",\"timestamp\":\"2025-02-02T18:15:17.884450Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:34.837",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:34.837Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:19.937",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:19.937Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:19.937",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:19.937Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:19.933",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:19.933Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:13.932",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:13.932Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:13.928",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:13.928Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:10.928",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:10.927Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:10.923",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:10.923Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:10.923",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:10.923Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35_2, timestamp=2025-02-02T18:15:18.388619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.388619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9e0f265bfa6350ee",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:10.922",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:10.922Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b16cd359-7a1d-4473-9b50-15fe6813671b' and payload='{\"event_id\":\"43924148-99c5-4330-91b4-f69ed9b9a954_2\",\"timestamp\":\"2025-02-02T18:15:18.121289Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:19:10.922",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:19:10.922Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42889",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:49.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:49.692Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-d3c615b5-ac13-49ed-91a5-3e6fb0219e4b sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:49.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:49.692Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:49.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:49.692Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:49.692",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:49.692Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:34.836",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:34.836Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:34.836",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:34.836Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:34.832",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:34.831Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:28.831",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:28.831Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:28.826",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:28.826Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.826",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.825Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.823",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.823Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "327f148bf84b8fdd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.822",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.822Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954, timestamp=2025-02-02T18:15:17.633221Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.633221Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fd78266ad1a304e0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.821",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.821Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80, timestamp=2025-02-02T18:15:17.601487Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601487Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6f36fd980f782864",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.820",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.82Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264, timestamp=2025-02-02T18:15:17.655289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.655289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e303ab6f2077a931",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.819",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.819Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"3f40eb18-437c-49c7-9750-c5acfc34bf53\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f50be0e8a9a99dd9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.819",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.819Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35, timestamp=2025-02-02T18:15:17.651086Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.651086Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "81ddce540ded3cd9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.816",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.816Z",
            "@version": "1",
            "message": "Portfolio link: 73795a58-b65c-46d8-a93d-ed2e0f03e3b1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f50be0e8a9a99dd9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.813",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.813Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f50be0e8a9a99dd9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.812",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.812Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"6bb45400-0a6c-4298-a736-182ce5583f63\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "3db4674f4a8cef96",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.812",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.812Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279, timestamp=2025-02-02T18:12:03.154431Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.154431Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "62941f1b87785255",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.809",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.809Z",
            "@version": "1",
            "message": "Portfolio link: 8057a114-ebb7-45b2-82f0-26ff2a1ed05d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "3db4674f4a8cef96",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.805",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.805Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "3db4674f4a8cef96",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.803",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.803Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae, timestamp=2025-02-02T18:18:35.879229Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.879229Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "199e1bbae2e4abce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.802",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.801Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.802",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.802Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:25.801",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:25.801Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='71e9fad6-4df8-4394-8e87-58f7f1520eef' and payload='{\"event_id\":\"51524c3f-856e-497c-a221-3c06f20066c1_2\",\"timestamp\":\"2025-02-02T18:18:32.770839Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:10.920",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:10.92Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:10.920",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:10.92Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:10.916",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:10.916Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:04.915",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:04.915Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:04.911",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:04.911Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:01.911",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:01.91Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:01.906",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:01.905Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954_2, timestamp=2025-02-02T18:15:18.121289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.121289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f820e9a7f1738002",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:01.905",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:01.904Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='02e28334-4ade-44fa-beed-c1e83b142c38' and payload='{\"event_id\":\"b9140690-89d2-4b72-8a97-b9e00ccdf264_2\",\"timestamp\":\"2025-02-02T18:15:17.957587Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:01.905",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:01.905Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:18:01.905",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:18:01.905Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42888",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42888\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:25.801",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:25.801Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:25.801",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:25.801Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:25.796",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:25.796Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:19.796",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:19.796Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:19.791",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:19.791Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.791",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.791Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.788Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "77096330c87e5499",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.787",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.787Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"58e20f85-5439-42d8-9425-43013ebc96a3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "eb850be46c5d18d2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.787",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.787Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1, timestamp=2025-02-02T18:18:32.260887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.260887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f1d3f6cf0685faa7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.784",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.784Z",
            "@version": "1",
            "message": "Portfolio link: 231ce3c4-373c-4829-8a1e-6fdb1cfd6d42 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eb850be46c5d18d2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.781",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.781Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"aeb15156-1a75-422a-81df-011a2b82f9ad\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "9fd251a8bce4c9a9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.781",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.781Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eb850be46c5d18d2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.778",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.777Z",
            "@version": "1",
            "message": "Portfolio link: bbbc005c-844a-4636-a3cf-b268e90c95f2 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9fd251a8bce4c9a9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.774",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.774Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9fd251a8bce4c9a9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.773",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.773Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809, timestamp=2025-02-02T18:15:21.346590Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.346590Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ed771734aa3c8d4e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.770",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.77Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.770",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.77Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.770",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.77Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e, timestamp=2025-02-02T18:15:21.340068Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.340068Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6f38b9e6499595f2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:16.769",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:16.769Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cbd6fc3d-6ac6-4622-8118-18e24f7603ce' and payload='{\"event_id\":\"c8022740-c60c-48cc-b318-c87e0f9ca9ad_2\",\"timestamp\":\"2025-02-02T18:15:18.002417Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:01.904",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:01.904Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:01.904",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:01.904Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:17:01.899",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:17:01.899Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:55.899",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:55.899Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:55.894",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:55.893Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:52.893",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:52.893Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:52.889",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:52.889Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264_2, timestamp=2025-02-02T18:15:17.957587Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.957587Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aac4a7140306a94f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:52.888",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:52.887Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7bee721e-0f9c-4229-b2d3-fb1acc923a55' and payload='{\"event_id\":\"b5d5568e-03d4-486c-a349-61ca99a12f80_2\",\"timestamp\":\"2025-02-02T18:15:17.884450Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 6:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:52.888",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:52.888Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:52.888",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:52.888Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-6@42887",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-6@42887\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:16.769",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:16.768Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:16.769",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:16.768Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:16.764",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:16.764Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:10.763",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:10.763Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:10.758",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:10.758Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.757",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.757Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.755",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.755Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "68a377cfadd0c24a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.753",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.753Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"abcb0278-c5ab-4be3-9843-9f04b34f6a10\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2d95a463af809400",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.753",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.753Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad, timestamp=2025-02-02T18:15:17.615363Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.615363Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "faeba01e1be4b207",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.750",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.75Z",
            "@version": "1",
            "message": "Portfolio link: 51e8c46a-5d5f-46c6-91a1-5bbc1988ca00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2d95a463af809400",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.747",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.747Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"248921c4-7bd9-46a5-ad5f-f643ae3730a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "6bb02289eaf233bf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.747",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.747Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2d95a463af809400",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.742",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.742Z",
            "@version": "1",
            "message": "Portfolio link: 3a04e5bf-44aa-42c4-a1cf-098335193b60 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6bb02289eaf233bf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.738",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.738Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6bb02289eaf233bf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.736",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.736Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456, timestamp=2025-02-02T18:12:03.122080Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.122080Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a0bf289abdf3351d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.734",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.734Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce, timestamp=2025-02-02T18:12:03.188626Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.188626Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "b23cb6a21b1a72db",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.733Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9136e8fe-9d64-40ca-9c59-893c62d533dc' and payload='{\"event_id\":\"d57e14f4-204d-4039-b611-ded6d99b9d7c_2\",\"timestamp\":\"2025-02-02T18:12:00.144755Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.733Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:16:07.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:16:07.733Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:52.887",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:52.887Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:52.887",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:52.887Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:52.883",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:52.883Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:46.882",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:46.882Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:46.878",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:46.877Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:44.976",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:44.976Z",
            "@version": "1",
            "message": "[Producer clientId=producer-1] Resetting the last seen epoch of partition deposit-portfolio-service.portfolio-link.snapshot.v2-0 to 112 since the associated topicId changed from null to h2CV0iFTQAif70jMHd0YAw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.877",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.877Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.874",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.874Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80_2, timestamp=2025-02-02T18:15:17.884450Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.884450Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bde2a14d1bdd3615",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.872",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.872Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=43924148-99c5-4330-91b4-f69ed9b9a954, timestamp=2025-02-02T18:15:17.633221Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b16cd359-7a1d-4473-9b50-15fe6813671b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.633221Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.633221Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ba68d64d-9c45-8647-e45c-59a5daee1bc5), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "53432ee8855e382c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.870",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.87Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b5d5568e-03d4-486c-a349-61ca99a12f80, timestamp=2025-02-02T18:15:17.601487Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7bee721e-0f9c-4229-b2d3-fb1acc923a55, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601487Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601487Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0e5e842c-994a-50b4-65d8-99cbe2e8433d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a0cf6ae2aa59084e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.868",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.868Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9140690-89d2-4b72-8a97-b9e00ccdf264, timestamp=2025-02-02T18:15:17.655289Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=02e28334-4ade-44fa-beed-c1e83b142c38, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.655289Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.655289Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=7fe43b48-f932-0853-b42e-c5644ac118b7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "dc1120109ff1ade8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.866",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.866Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"3f40eb18-437c-49c7-9750-c5acfc34bf53\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "09fc806b3958b3f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.866",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.866Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b57bae48-b074-4ef8-ade2-212e40302b35, timestamp=2025-02-02T18:15:17.651086Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=1f547a95-6c8c-4077-bda4-954eb2b99b3b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.651086Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.651086Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=19694f36-df2b-2d48-0fd6-072fd742be09), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2efbb7ad79f7cd67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.864",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.864Z",
            "@version": "1",
            "message": "Portfolio link: 73795a58-b65c-46d8-a93d-ed2e0f03e3b1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "09fc806b3958b3f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.862",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.862Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "09fc806b3958b3f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.860",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.86Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d253ff1e-ea0a-4e51-ad8c-d508302b9279, timestamp=2025-02-02T18:12:03.154431Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=eb63c1d8-da78-4321-80c7-30acbfe83dc5, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.154431Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.154431Z, failureReason=, associateAccountUpdate=Account(accountId=3f40eb18-437c-49c7-9750-c5acfc34bf53), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "92e7a2516f2efac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.859",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.859Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"add20b62-73b3-4842-b740-951d9ec6078c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "cd5710ce33aa34cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.840",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.84Z",
            "@version": "1",
            "message": "Portfolio link: b2111ed1-8c3a-4c3b-bc43-e996d71543f1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cd5710ce33aa34cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.838",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.838Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b07bd9f9-46d2-4dbd-8199-2f50c3e95608_2, timestamp=2025-02-02T20:49:21.619006Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c116aef8-f420-1c10-47ef-c07c44250356, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T20:49:21.340089Z, lastStatusUpdateTimestamp=2025-02-02T20:49:21.619006Z, failureReason=, associateAccountUpdate=Account(accountId=add20b62-73b3-4842-b740-951d9ec6078c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cd5710ce33aa34cf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.836",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.836Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b07bd9f9-46d2-4dbd-8199-2f50c3e95608, timestamp=2025-02-02T20:49:21.340089Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c116aef8-f420-1c10-47ef-c07c44250356, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T20:49:21.340089Z, lastStatusUpdateTimestamp=2025-02-02T20:49:21.340089Z, failureReason=, associateAccountUpdate=Account(accountId=add20b62-73b3-4842-b740-951d9ec6078c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "dda815cd0788c693",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.835",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.835Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"626098d1-ab7f-42da-b0f7-2fd285b1fa5b\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a10582d98aa7422b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.834",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.834Z",
            "@version": "1",
            "message": "Portfolio link: 43719c32-218a-4faf-9343-6d5ad294196b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a10582d98aa7422b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.831",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.831Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6d461672-8a6c-4e1d-b8fd-fa08d4c7fae0_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d56a4f77-d3c1-47d6-86f3-6013de860f6f, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.861518Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=626098d1-ab7f-42da-b0f7-2fd285b1fa5b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a10582d98aa7422b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.827",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.826Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-7@42616",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.827",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.827Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6d461672-8a6c-4e1d-b8fd-fa08d4c7fae0, timestamp=2025-02-02T18:18:35.861518Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d56a4f77-d3c1-47d6-86f3-6013de860f6f, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.861518Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.861518Z, failureReason=, associateAccountUpdate=Account(accountId=626098d1-ab7f-42da-b0f7-2fd285b1fa5b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "058ddf8209161b9a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.826",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.826Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d6ec010b-6ede-47c3-a56b-5ca2677cff99' and payload='{\"event_id\":\"2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2\",\"timestamp\":\"2025-02-02T18:18:32.417678Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 7:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:43.826",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:43.826Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:07.732",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:07.731Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:07.732",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:07.732Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:07.727",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:07.726Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:01.726",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:01.726Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:15:01.722",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:15:01.721Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:58.721",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:58.721Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:58.716",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:58.715Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:58.716",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:58.716Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:58.716",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:58.716Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "fa42c0ac08c21911",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:58.715",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:58.715Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='fbce2392-d9f6-46ef-925f-00b0ec0890ea' and payload='{\"event_id\":\"f39c3117-78ad-48db-8761-b4e76630aeb9_2\",\"timestamp\":\"2025-02-02T18:12:00.013381Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:43.826",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:43.825Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:43.826",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:43.825Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:43.821",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:43.821Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:37.820",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:37.82Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:37.816",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:37.815Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.815",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.815Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.812",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.812Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3330d6f3491686e8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.810",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.81Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"5e7d9b64-724e-483a-ae7a-2f361b352afc\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1d8687f3b2f15fe7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.810",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.81Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb, timestamp=2025-02-02T18:18:32.277746Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.277746Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9cb97d9f724aa09c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.809",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.809Z",
            "@version": "1",
            "message": "Portfolio link: 038dcdc9-070c-451b-a1c7-0ed5784aa4c8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1d8687f3b2f15fe7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.806",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.806Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"cc96472f-92e9-4e4f-8945-7ef0cc3558e3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "bd70ba38b79e74f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.806",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.806Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6b5b99e3-7143-4e68-ae90-2c82a1d67f9a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=767f8c3c-2cad-4a3f-bc54-6fc658084c48, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.351735Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=5e7d9b64-724e-483a-ae7a-2f361b352afc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "1d8687f3b2f15fe7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.805",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.805Z",
            "@version": "1",
            "message": "Portfolio link: 0a68f670-9851-4844-bab9-a57f10abc65d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bd70ba38b79e74f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.802",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.802Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"3f97c1ca-bd5a-4a4d-8c17-a16d5711379b\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "4a3c94f9808dd05c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.802",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.802Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9439ff35-9133-48cc-af6a-fe43d19d450e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e93d0211-5c5d-4f61-89f8-f7dc88928c7a, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.330879Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=cc96472f-92e9-4e4f-8945-7ef0cc3558e3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bd70ba38b79e74f8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.800",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.8Z",
            "@version": "1",
            "message": "Portfolio link: b714ade9-d1f1-4457-81a2-423a171d3e9f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a3c94f9808dd05c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.796",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.796Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8fcdba86-4cae-4e9e-9dfb-902ff5c5f1fa_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=4a024cfd-73d6-431c-96d6-5695f7a71d72, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.334539Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=3f97c1ca-bd5a-4a4d-8c17-a16d5711379b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a3c94f9808dd05c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.794",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.794Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8fcdba86-4cae-4e9e-9dfb-902ff5c5f1fa, timestamp=2025-02-02T18:15:21.334539Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=4a024cfd-73d6-431c-96d6-5695f7a71d72, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.334539Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.334539Z, failureReason=, associateAccountUpdate=Account(accountId=3f97c1ca-bd5a-4a4d-8c17-a16d5711379b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0de811d035fa12ae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.791",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.791Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6b5b99e3-7143-4e68-ae90-2c82a1d67f9a, timestamp=2025-02-02T18:15:21.351735Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=767f8c3c-2cad-4a3f-bc54-6fc658084c48, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.351735Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.351735Z, failureReason=, associateAccountUpdate=Account(accountId=5e7d9b64-724e-483a-ae7a-2f361b352afc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "82c89c392246d6fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.787Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9439ff35-9133-48cc-af6a-fe43d19d450e, timestamp=2025-02-02T18:15:21.330879Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e93d0211-5c5d-4f61-89f8-f7dc88928c7a, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.330879Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.330879Z, failureReason=, associateAccountUpdate=Account(accountId=cc96472f-92e9-4e4f-8945-7ef0cc3558e3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2fa09adc9edf60da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.787",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.787Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-7@42608",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.786",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.786Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='68e23076-aaf4-4ccf-98eb-4ef3461a2894' and payload='{\"event_id\":\"e1b9785b-87f8-4a1b-b2c2-2022c975723c_2\",\"timestamp\":\"2025-02-02T18:15:17.883862Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 7:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:14:34.786",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:14:34.786Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:58.715",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:58.715Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:58.715",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:58.715Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:58.710",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:58.71Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:52.710",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:52.709Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:52.705",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:52.704Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.704",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.704Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.7Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71ee216334d2df3e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.699",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.699Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c, timestamp=2025-02-02T18:11:59.679504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.679504Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f322057db57260b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.697",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.697Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9, timestamp=2025-02-02T18:11:59.663929Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.663929Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d3ae17c19959cd30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=151}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.68Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.68Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=153}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42968, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=153}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.679",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.679Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.673",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.672Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7470, memberId='consumer-deposit_portfolio_service_prod-1-d3c615b5-ac13-49ed-91a5-3e6fb0219e4b', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.673",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.673Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.673",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.673Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.659Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7470: {consumer-deposit_portfolio_service_prod-1-d3c615b5-ac13-49ed-91a5-3e6fb0219e4b=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.659",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.659Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7470, memberId='consumer-deposit_portfolio_service_prod-1-d3c615b5-ac13-49ed-91a5-3e6fb0219e4b', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.653",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.653Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.653",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.653Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-e507c177-5425-4ef5-a476-9c55b63b27be sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.653",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.653Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:49.653",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:49.653Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:47.250",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:47.25Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:44.247",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:44.247Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:41.243",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:41.243Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:38.240",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:38.24Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:35.237",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:35.237Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:34.787",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:34.785Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:34.785",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:34.785Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:34.779",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:34.779Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:32.233",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:32.233Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:29.229",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:29.228Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:28.779",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:28.779Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:28.774",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:28.774Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:26.225",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:26.225Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.773",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.773Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.770",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.77Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "5eea99eb9afd783d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.768",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.768Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c, timestamp=2025-02-02T18:15:17.609848Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.609848Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f569213f65e6335b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.767",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.767Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"6bb45400-0a6c-4298-a736-182ce5583f63\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "21466afe2fc485cd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.766",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.766Z",
            "@version": "1",
            "message": "Portfolio link: 8057a114-ebb7-45b2-82f0-26ff2a1ed05d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21466afe2fc485cd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.762",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.762Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21466afe2fc485cd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.756",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.755Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.756",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.756Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42973",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42973\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.756",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.756Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b4ce2e46-0dab-4fc2-8a88-ae773f6a26ae, timestamp=2025-02-02T18:18:35.879229Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ec45c11e-4821-4ae5-9dda-33aad229346f, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.879229Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.879229Z, failureReason=, associateAccountUpdate=Account(accountId=6bb45400-0a6c-4298-a736-182ce5583f63), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6bc75bbc5312154b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:25.755",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:25.755Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='71e9fad6-4df8-4394-8e87-58f7f1520eef' and payload='{\"event_id\":\"51524c3f-856e-497c-a221-3c06f20066c1_2\",\"timestamp\":\"2025-02-02T18:18:32.770839Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:23.222",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:23.222Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:20.218",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:20.218Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:17.215",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:17.215Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:14.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:14.212Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:11.209",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:11.208Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:10.920",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:10.92Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:10.920",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:10.92Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Connection to node 3 (b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com/172.21.16.222:9098) terminated during authentication. This may happen due to any of the following reasons: (1) Authentication failed due to invalid credentials with brokers older than 1.0.0, (2) Firewall blocking Kafka TLS traffic (eg it may only allow HTTPS traffic), (3) Transient network issue.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:10.815",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:10.814Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 4 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:10.815",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:10.815Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight METADATA request with correlation id 367 due to node 4 being disconnected (elapsed time since creation: 30029ms, elapsed time since send: 30029ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:08.204",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:08.204Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:05.201",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:05.201Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:13:02.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:13:02.197Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:59.194",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:59.194Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:58.804",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:58.804Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 6 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:56.190",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:56.19Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:55.800",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:55.8Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 1 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:53.187",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:53.187Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:52.797",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:52.797Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 2 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:50.184",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:50.184Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:47.180",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:47.18Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:44.177",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:44.177Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:41.173",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:41.173Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:40.685",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:40.685Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 5 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:40.685",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:40.685Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight METADATA request with correlation id 366 due to node 5 being disconnected (elapsed time since creation: 30019ms, elapsed time since send: 30019ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:39.371",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:39.371Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:35.101",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:35.101Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:32.097",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:32.097Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:29.094",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:29.094Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:26.091",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:26.091Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:25.755",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:25.754Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:25.755",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:25.755Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:25.750",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:25.75Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:23.087",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:23.087Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:20.084",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:20.084Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:19.749",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:19.749Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:19.745",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:19.745Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:17.080",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:17.08Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.744",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.744Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.742",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.742Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1_2, timestamp=2025-02-02T18:18:32.770839Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.770839Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6539903f687cf289",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.740",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.74Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"58e20f85-5439-42d8-9425-43013ebc96a3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "eb32ea125ee715bb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.740",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.74Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=51524c3f-856e-497c-a221-3c06f20066c1, timestamp=2025-02-02T18:18:32.260887Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=71e9fad6-4df8-4394-8e87-58f7f1520eef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.260887Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.260887Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=c1b8dcba-f68f-196c-6e8a-3f0da3a20477), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0aa95a0db0ed40ad",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.739",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.738Z",
            "@version": "1",
            "message": "Portfolio link: 231ce3c4-373c-4829-8a1e-6fdb1cfd6d42 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "eb32ea125ee715bb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.736",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.736Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"eeeda3ac-aa84-465e-b260-449bafaa3d7e\", \"accountId\": \"aeb15156-1a75-422a-81df-011a2b82f9ad\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "aa8d0d2413a6b36b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.736",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.736Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "eb32ea125ee715bb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.735",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.734Z",
            "@version": "1",
            "message": "Portfolio link: bbbc005c-844a-4636-a3cf-b268e90c95f2 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aa8d0d2413a6b36b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.732",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.732Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aa8d0d2413a6b36b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.729",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.729Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8e6db57f-c9e8-4489-9d33-eaf2addb0809, timestamp=2025-02-02T18:15:21.346590Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=243b5811-a98c-4be3-8632-bae143f2a347, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.346590Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.346590Z, failureReason=, associateAccountUpdate=Account(accountId=58e20f85-5439-42d8-9425-43013ebc96a3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "93d7982789fc366e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.726",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.726Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=97b58e97-7918-40ed-a2b6-e5c9e13f803e, timestamp=2025-02-02T18:15:21.340068Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e97d7a0d-c52a-4e9b-9fbc-2ad0c1df8d6b, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.340068Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.340068Z, failureReason=, associateAccountUpdate=Account(accountId=aeb15156-1a75-422a-81df-011a2b82f9ad), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "891fbe892e156c53",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.725",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.725Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cbd6fc3d-6ac6-4622-8118-18e24f7603ce' and payload='{\"event_id\":\"c8022740-c60c-48cc-b318-c87e0f9ca9ad_2\",\"timestamp\":\"2025-02-02T18:15:18.002417Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.725",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.725Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:16.725",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:16.725Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42967",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42967\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:14.077",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:14.077Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:11.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:11.073Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:10.672",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:10.672Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:10.666",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:10.665Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:08.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:08.069Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:05.066",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:05.065Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:12:02.062",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:12:02.062Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:59.058",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:59.058Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:56.055",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:56.055Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:53.050",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:53.05Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:50.047",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:50.046Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:47.043",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:47.043Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:44.040",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:44.04Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:41.036",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:41.036Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:38.031",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:38.03Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:35.027",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:35.027Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:32.024",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:32.024Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:29.021",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:29.02Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:26.017",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:26.017Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:23.014",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:23.013Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:20.010",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:20.01Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:17.007",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:17.006Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:16.724",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:16.723Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:16.724",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:16.724Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:16.719",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:16.719Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:14.003",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:14.003Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:10.999",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:10.999Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:10.718",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:10.718Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:10.714",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:10.714Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.996",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.995Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.713",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.713Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.711",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.711Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad_2, timestamp=2025-02-02T18:15:18.002417Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.002417Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "65ae838bf7ed00b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.708Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"abcb0278-c5ab-4be3-9843-9f04b34f6a10\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2c0d03bdfe4afbf3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.709Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8022740-c60c-48cc-b318-c87e0f9ca9ad, timestamp=2025-02-02T18:15:17.615363Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cbd6fc3d-6ac6-4622-8118-18e24f7603ce, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.615363Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.615363Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d00d1503-4b1a-857a-85f3-0ce5e089892e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "93f789935bbbe0e7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.707",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.707Z",
            "@version": "1",
            "message": "Portfolio link: 51e8c46a-5d5f-46c6-91a1-5bbc1988ca00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2c0d03bdfe4afbf3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.705",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.705Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2c0d03bdfe4afbf3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.704",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.704Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"248921c4-7bd9-46a5-ad5f-f643ae3730a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c073612d733d7ffd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.703",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.703Z",
            "@version": "1",
            "message": "Portfolio link: 3a04e5bf-44aa-42c4-a1cf-098335193b60 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c073612d733d7ffd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.699Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c073612d733d7ffd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.697",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.697Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=00cf4802-c327-43ae-b10e-c804ab36f456, timestamp=2025-02-02T18:12:03.122080Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=48767eba-5882-418b-8e8a-ba188dc3d25f, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.122080Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.122080Z, failureReason=, associateAccountUpdate=Account(accountId=248921c4-7bd9-46a5-ad5f-f643ae3730a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7d059ced106b225d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.692Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.693Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=28b95906-90e0-4626-8189-139fd1a84dce, timestamp=2025-02-02T18:12:03.188626Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9618075b-9e61-4300-899a-8cac07d0ecf0, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.188626Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.188626Z, failureReason=, associateAccountUpdate=Account(accountId=abcb0278-c5ab-4be3-9843-9f04b34f6a10), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "57d4ff7af4bb371d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.692",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.692Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9136e8fe-9d64-40ca-9c59-893c62d533dc' and payload='{\"event_id\":\"d57e14f4-204d-4039-b611-ded6d99b9d7c_2\",\"timestamp\":\"2025-02-02T18:12:00.144755Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:07.692",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:07.692Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42961",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:04.992",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:04.992Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:11:01.988",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:11:01.988Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:58.985",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:58.985Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:55.981",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:55.981Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:52.977",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:52.977Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:49.974",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:49.974Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:46.970",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:46.97Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.966",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.966Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.797",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.797Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.797",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.797Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.788Z",
            "@version": "1",
            "message": "Error occurred while not processing records",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)\n\tat brave.kafka.clients.TracingConsumer.commitSync(TracingConsumer.java:189)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3064)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3059)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3045)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2837)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1331)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.788Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.788Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Lost previously assigned partitions vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.788Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions lost: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.788Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions revoked: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.788Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.787",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.787Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Failing OffsetCommit request since the consumer is not part of an active group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.786",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.786Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=88ffceda-b315-4041-8ae9-6c93ba4b072d_2, timestamp=2025-02-02T18:18:33.857002Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=337c658d-102e-4583-9114-bb4e9f86f1e6, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.457015Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.857002Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "db55e0a9300121b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.783",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.782Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='86a85338-cf5d-46f8-89cf-757e65b8935d' and payload='{\"event_id\":\"22b15dce-fb0b-40eb-bd6c-bef64648f90f_2\",\"timestamp\":\"2025-02-02T18:18:32.726303Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.783",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.783Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.783",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.783Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42562",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:43.783",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:43.783Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=88ffceda-b315-4041-8ae9-6c93ba4b072d, timestamp=2025-02-02T18:18:33.457015Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=337c658d-102e-4583-9114-bb4e9f86f1e6, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.457015Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.457015Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "90e622aeb252fe31",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:07.691",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:07.691Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:07.691",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:07.691Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:07.686",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:07.686Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:01.685",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:01.685Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:10:01.681",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:10:01.681Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:58.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:58.68Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:58.676",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:58.676Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c_2, timestamp=2025-02-02T18:12:00.144755Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.144755Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2456a401566d69c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:58.675",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:58.675Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='fbce2392-d9f6-46ef-925f-00b0ec0890ea' and payload='{\"event_id\":\"f39c3117-78ad-48db-8761-b4e76630aeb9_2\",\"timestamp\":\"2025-02-02T18:12:00.013381Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 8:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:58.675",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:58.675Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:58.675",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:58.675Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-8@42960",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-8@42960\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:43.782",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:43.782Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:43.782",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:43.782Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:43.777",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:43.777Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:37.776",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:37.776Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:37.771",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:37.771Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:34.770",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:34.77Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:34.761",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:34.761Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ef7e9bd334f029b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:34.760",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:34.759Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='541e94a7-7641-4be4-89ce-778b4d17c6f1' and payload='{\"event_id\":\"9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2\",\"timestamp\":\"2025-02-02T18:18:32.684563Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:34.760",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:34.76Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:09:34.760",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:09:34.76Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42561",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:58.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:58.674Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:58.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:58.674Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:58.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:58.669Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:52.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:52.669Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:52.664",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:52.664Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.663",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.663Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.660",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.66Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9_2, timestamp=2025-02-02T18:12:00.013381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.013381Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "239af29a55550e57",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.658",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.658Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d57e14f4-204d-4039-b611-ded6d99b9d7c, timestamp=2025-02-02T18:11:59.679504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9136e8fe-9d64-40ca-9c59-893c62d533dc, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.679504Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.679504Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b467d018-aef4-6238-d65b-c3554808ecce), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a858dfee6891fb79",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.655",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.655Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f39c3117-78ad-48db-8761-b4e76630aeb9, timestamp=2025-02-02T18:11:59.663929Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=fbce2392-d9f6-46ef-925f-00b0ec0890ea, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.663929Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.663929Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=dffc40fc-15ee-49dd-0760-be4bdd43e461), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aa7db8ba20519081",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=153}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42968, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=154}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 3 rack: apse1-az1)], epoch=152}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=150}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.638Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.630",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.63Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7469, memberId='consumer-deposit_portfolio_service_prod-1-e507c177-5425-4ef5-a476-9c55b63b27be', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.630",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.63Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.630",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.63Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.621",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.62Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7469, memberId='consumer-deposit_portfolio_service_prod-1-e507c177-5425-4ef5-a476-9c55b63b27be', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.621",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.621Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7469: {consumer-deposit_portfolio_service_prod-1-e507c177-5425-4ef5-a476-9c55b63b27be=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.615",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.614Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-86116b9d-1c59-4169-aab1-9233fb687e66 sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.615",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.615Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.615",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.615Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:49.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:49.614Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:47.111",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:47.111Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:44.107",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:44.107Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:41.103",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:41.103Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:38.099",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:38.099Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:35.095",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:35.095Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:34.754",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:34.754Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:34.754",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:34.754Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:34.749",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:34.749Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:32.091",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:32.091Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:29.087",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:29.086Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:28.748",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:28.748Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:28.743",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:28.742Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:26.083",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:26.082Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:25.742",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:25.742Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:25.735",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:25.734Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42560",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:25.735",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:25.735Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7c9b8b808b156ac0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:25.734",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:25.734Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70c7edfd-90d3-4b19-bb4f-0cae17925aaa' and payload='{\"event_id\":\"7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2\",\"timestamp\":\"2025-02-02T18:18:32.541566Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:25.734",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:25.734Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:23.078",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:23.078Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:22.874",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:22.873Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 3 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:22.874",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:22.873Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight METADATA request with correlation id 602 due to node 3 being disconnected (elapsed time since creation: 30026ms, elapsed time since send: 30026ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:20.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:20.074Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:17.070",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:17.07Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:14.066",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:14.066Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:11.062",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:11.062Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:08.058",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:08.058Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:05.054",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:05.054Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:08:02.051",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:08:02.05Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:59.046",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:59.046Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:56.042",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:56.042Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:55.851",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:55.851Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 4 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:53.038",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:53.038Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:52.848",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:52.848Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 5 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:52.847",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:52.847Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 1 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:50.034",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:50.034Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:49.843",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:49.842Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 2 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:47.030",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:47.03Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:44.026",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:44.026Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:41.022",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:41.022Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:38.018",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:38.018Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:35.014",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:35.014Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:32.010",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:32.01Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:29.006",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:29.006Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:26.002",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:26.002Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:25.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:25.732Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:25.732",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:25.732Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:25.728",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:25.728Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:22.998",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:22.998Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:19.994",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:19.994Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:19.727",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:19.727Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:19.722",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:19.722Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.990",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.989Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.722",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.721Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.719",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.719Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "eb8a9c132a88aaaa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.718",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.717Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f, timestamp=2025-02-02T18:18:32.257670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.257670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "0e5e2c8a0bdf1e50",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.716",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.716Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca, timestamp=2025-02-02T18:18:32.256509Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.256509Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "80f90e20c28bf1fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.715",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.715Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd, timestamp=2025-02-02T18:18:32.235636Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.235636Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "efb011924435b59b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.714",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.714Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"90e97238-bdd9-4ec0-90ae-5f447a41dc03\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "81256fc23f0be6c3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.711",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.711Z",
            "@version": "1",
            "message": "Portfolio link: f5fe584b-a89c-4341-b9a5-301a0639a495 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "81256fc23f0be6c3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.708Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"6a1c1cc2-1dca-4969-b38a-a33258686d9c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "11c518a200a3629c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.709",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.709Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2156f8a8-35fb-4eb8-93cf-68b9a2752b91_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5b340218-b738-416f-b23d-7882012e09f9, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.327863Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=90e97238-bdd9-4ec0-90ae-5f447a41dc03), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "81256fc23f0be6c3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.706",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.705Z",
            "@version": "1",
            "message": "Portfolio link: da7379e5-bcfd-4ab0-984c-ee16303d519b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "11c518a200a3629c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.703",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.703Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"46edb274-c9f3-402c-a17d-d88855b8cb49\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c6d4b247a54d264b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.703",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.703Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2d185a4b-997c-45bc-a4fe-901c08b79616_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=175814f0-af7a-40f4-a3f0-56518bea217f, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.357805Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a1c1cc2-1dca-4969-b38a-a33258686d9c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "11c518a200a3629c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.699Z",
            "@version": "1",
            "message": "Portfolio link: 249025a3-088b-457c-bcb8-101b20ddc6b8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "c6d4b247a54d264b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.696",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.696Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=123e8ee2-ec7e-4f47-a35f-5bab3e8bbab5_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=acd5ed35-b25f-4568-ac18-e951d0c4bd97, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.338350Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=46edb274-c9f3-402c-a17d-d88855b8cb49), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "c6d4b247a54d264b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.695",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.695Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=123e8ee2-ec7e-4f47-a35f-5bab3e8bbab5, timestamp=2025-02-02T18:15:21.338350Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=acd5ed35-b25f-4568-ac18-e951d0c4bd97, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.338350Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.338350Z, failureReason=, associateAccountUpdate=Account(accountId=46edb274-c9f3-402c-a17d-d88855b8cb49), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "28fe704579a19fcc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.694",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.694Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2156f8a8-35fb-4eb8-93cf-68b9a2752b91, timestamp=2025-02-02T18:15:21.327863Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5b340218-b738-416f-b23d-7882012e09f9, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.327863Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.327863Z, failureReason=, associateAccountUpdate=Account(accountId=90e97238-bdd9-4ec0-90ae-5f447a41dc03), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "0cc8641c7f465d2c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.693Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2d185a4b-997c-45bc-a4fe-901c08b79616, timestamp=2025-02-02T18:15:21.357805Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=175814f0-af7a-40f4-a3f0-56518bea217f, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.357805Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.357805Z, failureReason=, associateAccountUpdate=Account(accountId=6a1c1cc2-1dca-4969-b38a-a33258686d9c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "6fb5cd37b870b015",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.691",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.691Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4da7b786-67b2-4c29-b81d-b2f12d97d2f7_2, timestamp=2025-02-02T18:15:19.151091Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ca3ce62f-da0c-4169-aca4-5417ed8e1b53, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.861548Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.151091Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "7f8245060627e941",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.688Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.689Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42548",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.689",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.689Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4da7b786-67b2-4c29-b81d-b2f12d97d2f7, timestamp=2025-02-02T18:15:18.861548Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ca3ce62f-da0c-4169-aca4-5417ed8e1b53, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.861548Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.861548Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "fc1d086f29e0043e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:16.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:16.688Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='e654e2b6-4bd4-463d-acdd-ae00ff189961' and payload='{\"event_id\":\"366fe816-e754-4073-8f06-15b5b39bfaf9_2\",\"timestamp\":\"2025-02-02T18:15:17.775418Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:13.986",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:13.985Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:10.982",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:10.982Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:07.978",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:07.978Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:04.974",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:04.974Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:07:01.970",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:07:01.97Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:58.966",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:58.966Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:55.961",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:55.961Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:52.957",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:52.957Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:49.953",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:49.953Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:46.949",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:46.949Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:43.945",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:43.945Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:40.941",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:40.941Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:37.937",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:37.936Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:34.932",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:34.932Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:31.928",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:31.928Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:28.924",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:28.924Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:25.920",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:25.92Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:22.916",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:22.916Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:19.912",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:19.912Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:16.908",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:16.908Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:16.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:16.688Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:16.688",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:16.688Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:16.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:16.683Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:13.904",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:13.903Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:10.899",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:10.899Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:10.683",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:10.682Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:10.678",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:10.678Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.895",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.895Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.677",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.677Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.675",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.675Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b2a04ab33581879e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.674Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"629ae079-797a-4b68-ae42-658eafbdec66\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "dce5f29cf918a9ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.674",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.674Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9, timestamp=2025-02-02T18:15:17.629756Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.629756Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "2efc4f494bf8484f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.671",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.671Z",
            "@version": "1",
            "message": "Portfolio link: e0806fb4-5c0d-4997-b4a1-f63777729e62 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "dce5f29cf918a9ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.669Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5497c814-b4ba-4b38-b8b5-fdd657ae0087_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=dbc6dae3-b379-4f09-a1ae-7159b58c6e36, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.203364Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=629ae079-797a-4b68-ae42-658eafbdec66), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "dce5f29cf918a9ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.668",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.668Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"626098d1-ab7f-42da-b0f7-2fd285b1fa5b\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "be30fe90a2a918d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.668",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.668Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5497c814-b4ba-4b38-b8b5-fdd657ae0087, timestamp=2025-02-02T18:12:03.203364Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=dbc6dae3-b379-4f09-a1ae-7159b58c6e36, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.203364Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.203364Z, failureReason=, associateAccountUpdate=Account(accountId=629ae079-797a-4b68-ae42-658eafbdec66), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "9097829063845318",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.665",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.665Z",
            "@version": "1",
            "message": "Portfolio link: 43719c32-218a-4faf-9343-6d5ad294196b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "be30fe90a2a918d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.661",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.661Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6d461672-8a6c-4e1d-b8fd-fa08d4c7fae0_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d56a4f77-d3c1-47d6-86f3-6013de860f6f, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.861518Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=626098d1-ab7f-42da-b0f7-2fd285b1fa5b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "be30fe90a2a918d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.659",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.659Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6d461672-8a6c-4e1d-b8fd-fa08d4c7fae0, timestamp=2025-02-02T18:18:35.861518Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d56a4f77-d3c1-47d6-86f3-6013de860f6f, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.861518Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.861518Z, failureReason=, associateAccountUpdate=Account(accountId=626098d1-ab7f-42da-b0f7-2fd285b1fa5b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "fec16090618c6c2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.658",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.658Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-7@42616",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.657",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.657Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d6ec010b-6ede-47c3-a56b-5ca2677cff99' and payload='{\"event_id\":\"2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2\",\"timestamp\":\"2025-02-02T18:18:32.417678Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 7:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:07.657",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:07.657Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42616",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:04.891",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:04.891Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:06:01.887",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:06:01.887Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:58.883",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:58.883Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:55.879",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:55.878Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:52.874",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:52.874Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:49.870",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:49.87Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:46.866",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:46.866Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:43.862",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:43.862Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:40.858",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:40.858Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:37.854",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:37.853Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:34.850",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:34.849Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:31.845",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:31.845Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:28.841",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:28.841Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:25.837",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:25.837Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:22.833",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:22.833Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:19.829",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:19.829Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:16.825",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:16.825Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:13.821",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:13.82Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:10.817",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:10.816Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:07.812",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:07.812Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:07.656",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:07.656Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:07.656",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:07.656Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:07.651",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:07.651Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:04.808",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:04.808Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:01.804",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:01.804Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:01.651",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:01.651Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:05:01.646",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:05:01.646Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.800",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.8Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.645",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.645Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.643",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.643Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb_2, timestamp=2025-02-02T18:18:32.417678Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417678Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "627bf7d1a60bfbfb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.641",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.641Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"5e7d9b64-724e-483a-ae7a-2f361b352afc\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "bf1aa57e201124b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.641",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.641Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f8ff7fc-3f3b-416e-a066-f3a722a5abbb, timestamp=2025-02-02T18:18:32.277746Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d6ec010b-6ede-47c3-a56b-5ca2677cff99, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.277746Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.277746Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1ba1c2e3-6981-aa5b-a7b3-7dd6228227b8), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "ee3ac8773ae860e5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.638Z",
            "@version": "1",
            "message": "Portfolio link: 038dcdc9-070c-451b-a1c7-0ed5784aa4c8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "bf1aa57e201124b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.635Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"cc96472f-92e9-4e4f-8945-7ef0cc3558e3\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f4d611cb333ddde8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.635Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6b5b99e3-7143-4e68-ae90-2c82a1d67f9a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=767f8c3c-2cad-4a3f-bc54-6fc658084c48, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.351735Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=5e7d9b64-724e-483a-ae7a-2f361b352afc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "bf1aa57e201124b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.632",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.632Z",
            "@version": "1",
            "message": "Portfolio link: 0a68f670-9851-4844-bab9-a57f10abc65d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "f4d611cb333ddde8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.629",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.628Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"3f97c1ca-bd5a-4a4d-8c17-a16d5711379b\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "b7361597aac2ee76",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.629",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.629Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9439ff35-9133-48cc-af6a-fe43d19d450e_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e93d0211-5c5d-4f61-89f8-f7dc88928c7a, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.330879Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=cc96472f-92e9-4e4f-8945-7ef0cc3558e3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "f4d611cb333ddde8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.625",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.625Z",
            "@version": "1",
            "message": "Portfolio link: b714ade9-d1f1-4457-81a2-423a171d3e9f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b7361597aac2ee76",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.622",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.621Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8fcdba86-4cae-4e9e-9dfb-902ff5c5f1fa_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=4a024cfd-73d6-431c-96d6-5695f7a71d72, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.334539Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=3f97c1ca-bd5a-4a4d-8c17-a16d5711379b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "b7361597aac2ee76",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.620",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.62Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8fcdba86-4cae-4e9e-9dfb-902ff5c5f1fa, timestamp=2025-02-02T18:15:21.334539Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=4a024cfd-73d6-431c-96d6-5695f7a71d72, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.334539Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.334539Z, failureReason=, associateAccountUpdate=Account(accountId=3f97c1ca-bd5a-4a4d-8c17-a16d5711379b), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "09405485857aec83",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.619",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.619Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6b5b99e3-7143-4e68-ae90-2c82a1d67f9a, timestamp=2025-02-02T18:15:21.351735Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=767f8c3c-2cad-4a3f-bc54-6fc658084c48, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.351735Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.351735Z, failureReason=, associateAccountUpdate=Account(accountId=5e7d9b64-724e-483a-ae7a-2f361b352afc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "65036e0068bd16b8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.617",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.617Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9439ff35-9133-48cc-af6a-fe43d19d450e, timestamp=2025-02-02T18:15:21.330879Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e93d0211-5c5d-4f61-89f8-f7dc88928c7a, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.330879Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.330879Z, failureReason=, associateAccountUpdate=Account(accountId=cc96472f-92e9-4e4f-8945-7ef0cc3558e3), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "28351dc1538f81c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.615Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='68e23076-aaf4-4ccf-98eb-4ef3461a2894' and payload='{\"event_id\":\"e1b9785b-87f8-4a1b-b2c2-2022c975723c_2\",\"timestamp\":\"2025-02-02T18:15:17.883862Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 7:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.616Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:58.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:58.616Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-7@42608",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-7@42608\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:55.796",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:55.796Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:52.792",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:52.791Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:49.788",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:49.787Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:46.783",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:46.783Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:43.779",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:43.779Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:40.775",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:40.775Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:37.771",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:37.771Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.706",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.706Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.706",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.706Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.699Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.7Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Lost previously assigned partitions vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.7Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions lost: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.7Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions revoked: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.700",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.7Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.699",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.699Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"d1297a12-3da8-4373-9579-8f4b8fe16864\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "59bb878c37d83589",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.699",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.699Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Failing OffsetCommit request since the consumer is not part of an active group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.699",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.699Z",
            "@version": "1",
            "message": "Error occurred while not processing records",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)\n\tat brave.kafka.clients.TracingConsumer.commitSync(TracingConsumer.java:189)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3064)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3059)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3045)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2837)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1331)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.698",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.698Z",
            "@version": "1",
            "message": "Portfolio link: 54cc8449-1230-4d55-8c9f-5654ea0645f6 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "59bb878c37d83589",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.695",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.695Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0f82be80-d38e-40c9-b4d7-e55f5dcb95bb_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=815a84bc-b7e0-41cc-8268-0811a41ad267, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.907672Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=d1297a12-3da8-4373-9579-8f4b8fe16864), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "59bb878c37d83589",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.693",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.693Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0f82be80-d38e-40c9-b4d7-e55f5dcb95bb, timestamp=2025-02-02T18:18:35.907672Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=815a84bc-b7e0-41cc-8268-0811a41ad267, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.907672Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.907672Z, failureReason=, associateAccountUpdate=Account(accountId=d1297a12-3da8-4373-9579-8f4b8fe16864), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "4bec0ca7b5241fc4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.690",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.69Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38598d65-7b1d-406c-9244-cea98b8da8eb_2, timestamp=2025-02-02T18:18:33.718459Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8c5d4e47-2d73-4878-a679-4aa05c03cc84, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.446239Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.718459Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "035e34fca3888ac3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.686Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.687",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.687Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38598d65-7b1d-406c-9244-cea98b8da8eb, timestamp=2025-02-02T18:18:33.446239Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8c5d4e47-2d73-4878-a679-4aa05c03cc84, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.446239Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.446239Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "0aa67439c5f9a014",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.686",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.686Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='2349a394-ce38-41af-8248-8803d766e3ad' and payload='{\"event_id\":\"a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2\",\"timestamp\":\"2025-02-02T18:18:33.026227Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:34.686",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:34.686Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:29.889",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:29.888Z",
            "@version": "1",
            "message": "[Producer clientId=producer-2] Disconnecting from node 5 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:04:29.889",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:04:29.889Z",
            "@version": "1",
            "message": "[Producer clientId=producer-2] Cancelled in-flight METADATA request with correlation id 22004 due to node 5 being disconnected (elapsed time since creation: 30028ms, elapsed time since send: 30028ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:58.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:58.614Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:58.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:58.614Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:58.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:58.609Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:52.609",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:52.609Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:52.603",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:52.603Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.603",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.602Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.599",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.599Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c_2, timestamp=2025-02-02T18:15:17.883862Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883862Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "34fe1732e5e5bfc8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.596",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.596Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e1b9785b-87f8-4a1b-b2c2-2022c975723c, timestamp=2025-02-02T18:15:17.609848Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=68e23076-aaf4-4ccf-98eb-4ef3461a2894, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.609848Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.609848Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=49b5e264-0ee4-6dd4-0fb8-fd6f3d10f240), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fddb5975567a7e8b10b08f5b78e97",
            "spanId": "2dfc1b68e8d238c3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=153}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42968, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=154}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 3 rack: apse1-az1)], epoch=152}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.58Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.58Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.58Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=150}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.58Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.58Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.579",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.579Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.573",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.572Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7468, memberId='consumer-deposit_portfolio_service_prod-1-86116b9d-1c59-4169-aab1-9233fb687e66', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.573",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.573Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.573",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.573Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.565",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.564Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7468: {consumer-deposit_portfolio_service_prod-1-86116b9d-1c59-4169-aab1-9233fb687e66=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.564Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7468, memberId='consumer-deposit_portfolio_service_prod-1-86116b9d-1c59-4169-aab1-9233fb687e66', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.558",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.558Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.558",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.558Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Member consumer-deposit_portfolio_service_prod-1-e35c3f3c-d9b9-40e1-afea-100abfaee0f6 sending LeaveGroup request to coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) due to consumer poll timeout has expired.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.558",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.558Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Resetting generation due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:49.558",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:49.558Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: consumer pro-actively leaving the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:46.955",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:46.955Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:43.952",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:43.952Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:40.948",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:40.948Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:37.945",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:37.945Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:34.942",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:34.942Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:34.685",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:34.685Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:34.685",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:34.685Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:34.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:34.68Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:31.938",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:31.938Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:28.935",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:28.934Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:28.680",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:28.68Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:28.675",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:28.675Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:25.931",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:25.931Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:25.675",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:25.675Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:25.671",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:25.67Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43498",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:25.671",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:25.67Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a386de6de97c3d48",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:25.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:25.669Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7b50b27c-32dd-460a-862e-692858e38ac6' and payload='{\"event_id\":\"11f0b2f0-4e04-498e-b6b7-726dc05b6450_2\",\"timestamp\":\"2025-02-02T18:18:32.941730Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:25.669",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:25.669Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:22.928",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:22.927Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:19.924",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:19.924Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:16.921",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:16.921Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:13.918",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:13.917Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:10.914",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:10.914Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:07.911",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:07.911Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:04.908",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:04.907Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:03:01.904",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:03:01.904Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:58.900",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:58.899Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:55.896",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:55.896Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:52.893",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:52.893Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:49.890",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:49.89Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:46.886",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:46.886Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:43.883",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:43.883Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:40.880",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:40.88Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: group is already rebalancing",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "kafka-coordinator-heartbeat-thread | deposit_portfolio_service_prod",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:38.723",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:38.723Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:38.723",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:38.723Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:37.744",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:37.744Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:37.743",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:37.743Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Discovered group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null)",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:37.595",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:37.593Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight JOIN_GROUP request with correlation id 242 due to node 2147483646 being disconnected (elapsed time since creation: 307272ms, elapsed time since send: 307272ms, request timeout: 305000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:37.595",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:37.593Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:37.593",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:37.593Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 2147483646 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:25.668",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:25.667Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:25.668",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:25.668Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:25.663",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:25.663Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:19.662",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:19.662Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:19.658",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:19.658Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:16.657",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:16.657Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:16.653",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:16.653Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "8dd17f38ff2bd797",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:16.652",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:16.652Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef' and payload='{\"event_id\":\"24e37ff4-d62f-4342-88a9-3ad378b58154_2\",\"timestamp\":\"2025-02-02T18:18:32.502774Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:16.652",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:16.652Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:02:16.652",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:02:16.652Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43497",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:16.651",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:16.651Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:16.651",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:16.651Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:16.646",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:16.646Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:10.646",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:10.646Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:10.641",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:10.641Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.641",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.641Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.638",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.638Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "a66ab17bbc962c81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.635Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969, timestamp=2025-02-02T18:18:32.270360Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270360Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "9c9c0f668f322c0b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.633",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.633Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450, timestamp=2025-02-02T18:18:32.255540Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.255540Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "f5c7e6d7453bb2da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.631",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.631Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"b4ef4e64-d69e-4409-ab83-338be2467388\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c1a39f9e906bef05",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.631",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.631Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154, timestamp=2025-02-02T18:18:32.228598Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.228598Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "f89fc27870202a41",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.630",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.63Z",
            "@version": "1",
            "message": "Portfolio link: f8ee0aea-c920-4a1c-9d33-add0ee2f9a94 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "c1a39f9e906bef05",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.627",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.627Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"cceaa826-e5f4-481e-9590-bba5821db2d9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0d3dacaca9d10d8b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.627",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.627Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3bbb5cf3-b25c-4459-8b95-463d7a098dec_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=bcd4904d-df8f-4a78-b880-6a55f2d194a3, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.330362Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=b4ef4e64-d69e-4409-ab83-338be2467388), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "c1a39f9e906bef05",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.626Z",
            "@version": "1",
            "message": "Portfolio link: 9d92f26e-8ac2-4b56-9e6b-ddde972ad0de set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "0d3dacaca9d10d8b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.623",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.623Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6f5a4361-5410-467d-a08d-efd981005ffc\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c35d23766b72cee0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.623",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.623Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ed0c46cf-d6f9-4478-b47f-afc8f5390995_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0039ffd2-ac99-47b3-9a68-dd2d7dae0550, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.345190Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=cceaa826-e5f4-481e-9590-bba5821db2d9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "0d3dacaca9d10d8b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.622",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.622Z",
            "@version": "1",
            "message": "Portfolio link: a5779740-4e89-4b88-a39e-b36e2daee94c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "c35d23766b72cee0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.618",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.618Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=545d58e3-8a5d-478b-bddf-0b2d9b0705d9_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0e27362e-8b0e-4e81-84a1-cac2d40027bf, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336628Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6f5a4361-5410-467d-a08d-efd981005ffc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "c35d23766b72cee0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.616",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.616Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ed0c46cf-d6f9-4478-b47f-afc8f5390995, timestamp=2025-02-02T18:15:21.345190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0039ffd2-ac99-47b3-9a68-dd2d7dae0550, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.345190Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.345190Z, failureReason=, associateAccountUpdate=Account(accountId=cceaa826-e5f4-481e-9590-bba5821db2d9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "9222fbd2b7b81a90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.614Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3bbb5cf3-b25c-4459-8b95-463d7a098dec, timestamp=2025-02-02T18:15:21.330362Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=bcd4904d-df8f-4a78-b880-6a55f2d194a3, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.330362Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.330362Z, failureReason=, associateAccountUpdate=Account(accountId=b4ef4e64-d69e-4409-ab83-338be2467388), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "0c02f9776a48785a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.609Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b6a444bf-c3b3-482c-a72f-5f429889cb04' and payload='{\"event_id\":\"2f3a644b-f371-4473-9876-44c8670ec1d5_2\",\"timestamp\":\"2025-02-02T18:15:17.928662Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.61Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.61Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43487",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:01:07.610",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:01:07.61Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=545d58e3-8a5d-478b-bddf-0b2d9b0705d9, timestamp=2025-02-02T18:15:21.336628Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0e27362e-8b0e-4e81-84a1-cac2d40027bf, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336628Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336628Z, failureReason=, associateAccountUpdate=Account(accountId=6f5a4361-5410-467d-a08d-efd981005ffc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "508d6f309c2ef89e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:00:07.609",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:00:07.608Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:00:07.608",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:00:07.608Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:00:07.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:00:07.604Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:00:01.603",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:00:01.603Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:00:01.599",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:00:01.599Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:59:58.598",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:59:58.598Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:59:58.594",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:59:58.593Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43486",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:59:58.594",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:59:58.594Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "49b0a94b8541b978",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:59:58.593",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:59:58.593Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='a9437d08-d10f-422b-8de1-3196e564d72d' and payload='{\"event_id\":\"0afded4b-b775-4e49-813c-f9deb13795e2_2\",\"timestamp\":\"2025-02-02T18:15:17.883170Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:59:58.593",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:59:58.593Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:58.592",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:58.592Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:58.592",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:58.592Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:58.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:58.587Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:52.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:52.586Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:52.582",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:52.582Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.582",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.582Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.579",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.579Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "67a20b723573e4b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.577Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2, timestamp=2025-02-02T18:15:17.601860Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601860Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "5e4ff246827bcc7a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.575Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"1d60989c-7f0e-4d9d-96f6-ef0415e93616\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "3b2f92a42bf6eddd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.575Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5, timestamp=2025-02-02T18:15:17.657282Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.657282Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "e52b230ea29bab3a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.574",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.574Z",
            "@version": "1",
            "message": "Portfolio link: 5728fe2e-95b2-4833-be9f-6541f355d1e3 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "3b2f92a42bf6eddd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.572Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"5f9c8f0f-369b-43f7-a738-c07a8a652ea7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "db0d1f3916d4c8c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.572",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.572Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "3b2f92a42bf6eddd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.571",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.571Z",
            "@version": "1",
            "message": "Portfolio link: 1ca8affe-59f5-49ae-ae28-0ee32f13198f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "db0d1f3916d4c8c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.568Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"824e1725-77fc-4930-abce-4e8868d460e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "3833308dd2ee6387",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.568Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "db0d1f3916d4c8c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.567",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.567Z",
            "@version": "1",
            "message": "Portfolio link: 8c32dde8-bb51-422e-bfe6-6152660e31ee set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "3833308dd2ee6387",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.564Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"e5d317f6-f145-4a21-80f4-a891b09c0e56\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "bb1f139e9571bc73",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.564Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "3833308dd2ee6387",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.563",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.563Z",
            "@version": "1",
            "message": "Portfolio link: d70537b0-7064-4d2d-b57f-444e61d78ac1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "bb1f139e9571bc73",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.56Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"b0fbe6ac-0e51-4150-bb96-adf8c4751d6e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "4b56f3cf264ec4c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.56Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "bb1f139e9571bc73",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.559",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.559Z",
            "@version": "1",
            "message": "Portfolio link: 4472bf40-b488-4b48-93cb-9f64b8c13ab4 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "4b56f3cf264ec4c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.556",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.556Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d_2, timestamp=2025-02-02T18:12:03.309330Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.309330Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "4b56f3cf264ec4c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.554Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34, timestamp=2025-02-02T18:12:03.193924Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.193924Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "abcd6e42552186bf",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.552",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.552Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801, timestamp=2025-02-02T18:12:03.138203Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.138203Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "243b10215258cc66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.550",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.55Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b, timestamp=2025-02-02T18:12:03.131381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.131381Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "17b5cff199e3953d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.548",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.548Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918, timestamp=2025-02-02T18:12:03.146816Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.146816Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "9a8b177a321f8a4e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.544",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.544Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d, timestamp=2025-02-02T18:12:03.117591Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.117591Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdc8925bc7bb5a4ef37909c794dff",
            "spanId": "117f45acd9f52853",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-8 to the committed offset FetchPosition{offset=42958, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-7 to the committed offset FetchPosition{offset=42607, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-6 to the committed offset FetchPosition{offset=42881, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=153}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-5 to the committed offset FetchPosition{offset=42968, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 1 rack: apse1-az2)], epoch=154}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-4 to the committed offset FetchPosition{offset=43474, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-3.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 3 rack: apse1-az1)], epoch=152}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-3 to the committed offset FetchPosition{offset=43023, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-2 to the committed offset FetchPosition{offset=43032, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-6.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 6 rack: apse1-az2)], epoch=157}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-1 to the committed offset FetchPosition{offset=42545, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-5.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 5 rack: apse1-az1)], epoch=155}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-0 to the committed offset FetchPosition{offset=43373, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-2.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2 rack: apse1-az3)], epoch=150}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Setting offset for partition vault.core_api.v1.plans.plan_update.events-9 to the committed offset FetchPosition{offset=43488, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[b-4.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 4 rack: apse1-az3)], epoch=156}}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.531Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions assigned: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.523",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.523Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully synced group in generation Generation{generationId=7467, memberId='consumer-deposit_portfolio_service_prod-1-e35c3f3c-d9b9-40e1-afea-100abfaee0f6', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.523",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.523Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Notifying assignor about the new Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.523",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.523Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Adding newly assigned partitions: vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.513",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.513Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Successfully joined group with generation Generation{generationId=7467, memberId='consumer-deposit_portfolio_service_prod-1-e35c3f3c-d9b9-40e1-afea-100abfaee0f6', protocol='range'}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:49.513",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:49.513Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Finished assignment for group at generation 7467: {consumer-deposit_portfolio_service_prod-1-e35c3f3c-d9b9-40e1-afea-100abfaee0f6=Assignment(partitions=[vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-9])}",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:46.510",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:46.509Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:46.509",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:46.509Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Request joining group due to: need to re-join with the given member-id",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:45.550",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:45.55Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:45.549",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:45.549Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Discovered group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null)",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:45.400",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:45.399Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight JOIN_GROUP request with correlation id 477 due to node 2147483646 being disconnected (elapsed time since creation: 307295ms, elapsed time since send: 307295ms, request timeout: 305000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:45.400",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:45.399Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Group coordinator b-1.tm-kafka-cluster.6lr247.c3.kafka.ap-southeast-1.amazonaws.com:9098 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:45.399",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:45.399Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 2147483646 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:00.346",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:00.346Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 2 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:58:00.346",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:58:00.346Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight METADATA request with correlation id 241 due to node 2 being disconnected (elapsed time since creation: 30026ms, elapsed time since send: 30026ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:39.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:39.329Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 1 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:36.328",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:36.328Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 6 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:33.325",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:33.324Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 4 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.322",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.322Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 5 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "Error occurred while not processing records",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)\n\tat brave.kafka.clients.TracingConsumer.commitSync(TracingConsumer.java:189)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3064)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3059)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3045)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2837)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1331)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Lost previously assigned partitions vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions lost: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions revoked: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.321Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.320",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.32Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Failing OffsetCommit request since the consumer is not part of an active group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.319",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.319Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"2f35d889-8cb6-4452-a469-f0ee1607ffee\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "54c81386de31d9fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.316",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.316Z",
            "@version": "1",
            "message": "Portfolio link: 817e1978-c113-4b38-afa8-ce5ad168f9ad set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "54c81386de31d9fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.313",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.313Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"d63f8443-039e-4eb0-af9d-c1031bcdc52c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a1391b5a82ed4ec2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.313",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.313Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=830c1e59-4833-49b2-be09-d75312045b9d_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a388b1d6-8397-45df-8080-cbdc6e89369e, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.883539Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=2f35d889-8cb6-4452-a469-f0ee1607ffee), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "54c81386de31d9fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.310",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.309Z",
            "@version": "1",
            "message": "Portfolio link: 6d5ce2ee-872a-48c1-b336-739a2a4cc1c5 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a1391b5a82ed4ec2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.306Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4f401652-943b-438f-a775-699d2e11dd08_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c7608eb8-9b05-49d5-ae25-a385b219b249, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.845415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=d63f8443-039e-4eb0-af9d-c1031bcdc52c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a1391b5a82ed4ec2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.305Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=830c1e59-4833-49b2-be09-d75312045b9d, timestamp=2025-02-02T18:18:35.883539Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a388b1d6-8397-45df-8080-cbdc6e89369e, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.883539Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.883539Z, failureReason=, associateAccountUpdate=Account(accountId=2f35d889-8cb6-4452-a469-f0ee1607ffee), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "de614adb82fdf41e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.302",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.302Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4f401652-943b-438f-a775-699d2e11dd08, timestamp=2025-02-02T18:18:35.845415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c7608eb8-9b05-49d5-ae25-a385b219b249, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.845415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.845415Z, failureReason=, associateAccountUpdate=Account(accountId=d63f8443-039e-4eb0-af9d-c1031bcdc52c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "c37e5f3e54127c95",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.301",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.3Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43503",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.301",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.301Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43503",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43503\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43503\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:30.300",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:30.3Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='f3434157-4fd8-4432-8c8a-62a48e7f4cc5' and payload='{\"event_id\":\"9d33b08a-aaee-4920-a4d8-9932a997afa8_2\",\"timestamp\":\"2025-02-02T18:18:32.587536Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:57:15.239",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:57:15.239Z",
            "@version": "1",
            "message": "[Producer clientId=producer-1] Node 4 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "kafka-producer-network-thread | producer-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:30.299",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:30.299Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:30.299",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:30.299Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:30.294",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:30.294Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:24.294",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:24.293Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:24.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:24.289Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.288Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.286",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.286Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "880fb4585103263a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.284",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.284Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6a9b25ca-a4e9-49e3-8360-1809a942c7e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "fedc9bdaa3f68c34",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.284",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.284Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8, timestamp=2025-02-02T18:18:32.237102Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.237102Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "fbeba267fded13c9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.281",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.281Z",
            "@version": "1",
            "message": "Portfolio link: cb3d47e2-cf41-4d7e-8dbd-00a70ff7ad9d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "fedc9bdaa3f68c34",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.277Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "fedc9bdaa3f68c34",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.275",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.275Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.275",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.275Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c, timestamp=2025-02-02T18:15:21.336Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "f4fe1a6076386f90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.274",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.274Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b191e42c-ee17-495d-b334-483d511a1fe4' and payload='{\"event_id\":\"f70889b8-a50c-48f6-a53e-e1e1d4729657_2\",\"timestamp\":\"2025-02-02T18:15:17.927629Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:56:21.274",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:56:21.274Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:21.274",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:21.274Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:21.274",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:21.274Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:21.269",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:21.269Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:15.268",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:15.268Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:15.263",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:15.263Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.263",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.262Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.259",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.259Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "afd22f30f6c93590",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.258",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.258Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657, timestamp=2025-02-02T18:15:17.602876Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.602876Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a363ea1a73b01fea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.256",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.256Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f_2, timestamp=2025-02-02T18:12:01.317155Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:01.317155Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8c4d83ffbdee0b13",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.254",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.254Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f, timestamp=2025-02-02T18:12:00.880962Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.880962Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "babb6b35c5407b2d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.253",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.252Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cec1527d-c63d-4dec-9848-789f29b87d85' and payload='{\"event_id\":\"3da00001-379f-4e93-9e01-d1b7fd676102_2\",\"timestamp\":\"2025-02-02T18:12:00.307645Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.253",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.253Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:55:12.253",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:55:12.253Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:12.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:12.251Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:12.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:12.251Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:12.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:12.246Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:08.132",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:08.131Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Cancelled in-flight METADATA request with correlation id 476 due to node 4 being disconnected (elapsed time since creation: 30028ms, elapsed time since send: 30028ms, request timeout: 30000ms)",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:08.131",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:08.131Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Disconnecting from node 4 due to request timeout.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:06.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:06.245Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:06.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:06.241Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:03.240",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:03.24Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:03.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:03.235Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "eb9cb8fa937f61f1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:03.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:03.234Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='8b248740-9b17-4c13-9109-228b737b9c4e' and payload='{\"event_id\":\"302da870-018a-41d5-9a75-43192cb155a3_2\",\"timestamp\":\"2025-02-02T18:12:00.183405Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:03.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:03.234Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:54:03.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:54:03.234Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:47.115",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:47.115Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 3 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:44.111",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:44.111Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 1 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:41.108",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:41.108Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 5 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.105",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.105Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 6 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Node 2 disconnected.",
            "logger_name": "org.apache.kafka.clients.NetworkClient",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "Error occurred while not processing records",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.clients.consumer.CommitFailedException: Offset commit cannot be completed since the consumer is not part of an active group for auto partition assignment; it is likely that the consumer was kicked out of the group.\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.sendOffsetCommitRequest(ConsumerCoordinator.java:1180)\n\tat org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsSync(ConsumerCoordinator.java:1045)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.commitSync(KafkaConsumer.java:1492)\n\tat brave.kafka.clients.TracingConsumer.commitSync(TracingConsumer.java:189)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doCommitSync(KafkaMessageListenerContainer.java:3064)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitSync(KafkaMessageListenerContainer.java:3059)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.commitIfNecessary(KafkaMessageListenerContainer.java:3045)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.processCommits(KafkaMessageListenerContainer.java:2837)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1331)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Lost previously assigned partitions vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions lost: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "deposit_portfolio_service_prod: partitions revoked: [vault.core_api.v1.plans.plan_update.events-8, vault.core_api.v1.plans.plan_update.events-7, vault.core_api.v1.plans.plan_update.events-6, vault.core_api.v1.plans.plan_update.events-5, vault.core_api.v1.plans.plan_update.events-4, vault.core_api.v1.plans.plan_update.events-3, vault.core_api.v1.plans.plan_update.events-2, vault.core_api.v1.plans.plan_update.events-1, vault.core_api.v1.plans.plan_update.events-0, vault.core_api.v1.plans.plan_update.events-9]",
            "logger_name": "org.springframework.kafka.listener.KafkaMessageListenerContainer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.104Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] (Re-)joining group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.103",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.103Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"2f35d889-8cb6-4452-a469-f0ee1607ffee\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "4699d799cb16dc73",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.103",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.103Z",
            "@version": "1",
            "message": "[Consumer clientId=consumer-deposit_portfolio_service_prod-1, groupId=deposit_portfolio_service_prod] Failing OffsetCommit request since the consumer is not part of an active group",
            "logger_name": "org.apache.kafka.clients.consumer.internals.ConsumerCoordinator",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.102",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.102Z",
            "@version": "1",
            "message": "Portfolio link: 817e1978-c113-4b38-afa8-ce5ad168f9ad set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "4699d799cb16dc73",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.099",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.099Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"d63f8443-039e-4eb0-af9d-c1031bcdc52c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d46e49f0a7652ec6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.099",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.099Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=830c1e59-4833-49b2-be09-d75312045b9d_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a388b1d6-8397-45df-8080-cbdc6e89369e, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.883539Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=2f35d889-8cb6-4452-a469-f0ee1607ffee), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "4699d799cb16dc73",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.098",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.098Z",
            "@version": "1",
            "message": "Portfolio link: 6d5ce2ee-872a-48c1-b336-739a2a4cc1c5 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d46e49f0a7652ec6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.095",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.095Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4f401652-943b-438f-a775-699d2e11dd08_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c7608eb8-9b05-49d5-ae25-a385b219b249, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.845415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=d63f8443-039e-4eb0-af9d-c1031bcdc52c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d46e49f0a7652ec6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.093",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.093Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=830c1e59-4833-49b2-be09-d75312045b9d, timestamp=2025-02-02T18:18:35.883539Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a388b1d6-8397-45df-8080-cbdc6e89369e, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.883539Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.883539Z, failureReason=, associateAccountUpdate=Account(accountId=2f35d889-8cb6-4452-a469-f0ee1607ffee), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "48c5a27796b3fda9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.089",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.088Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43503",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43503\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43503\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.089",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.089Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4f401652-943b-438f-a775-699d2e11dd08, timestamp=2025-02-02T18:18:35.845415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c7608eb8-9b05-49d5-ae25-a385b219b249, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.845415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.845415Z, failureReason=, associateAccountUpdate=Account(accountId=d63f8443-039e-4eb0-af9d-c1031bcdc52c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "45e6e513eb973745",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.088",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.087Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='f3434157-4fd8-4432-8c8a-62a48e7f4cc5' and payload='{\"event_id\":\"9d33b08a-aaee-4920-a4d8-9932a997afa8_2\",\"timestamp\":\"2025-02-02T18:18:32.587536Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:38.088",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:38.088Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43503",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:03.233",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:03.232Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:03.233",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:03.232Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:53:03.228",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:53:03.228Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:57.227",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:57.227Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:57.223",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:57.222Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:54.222",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:54.222Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:54.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:54.217Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8cf99eb691567af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:54.216",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:54.215Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='ed3d439c-c03e-41bd-9f80-3f465806665e' and payload='{\"event_id\":\"0e1bf68f-2a84-4542-9845-3980e502d305_2\",\"timestamp\":\"2025-02-02T18:11:59.886359Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:54.216",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:54.216Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:54.216",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:54.216Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:38.087",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:38.087Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:38.087",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:38.087Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:38.083",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:38.082Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:32.082",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:32.082Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:32.078",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:32.077Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.077",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.077Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.074Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8_2, timestamp=2025-02-02T18:18:32.587536Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.587536Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9ab8dbabaff6dc12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.072",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.072Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6a9b25ca-a4e9-49e3-8360-1809a942c7e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f10dff5f57f4316d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.072",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.072Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9d33b08a-aaee-4920-a4d8-9932a997afa8, timestamp=2025-02-02T18:18:32.237102Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f3434157-4fd8-4432-8c8a-62a48e7f4cc5, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.237102Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.237102Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a3187982-d293-1659-9590-4babf9c3f53b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "2a6f9554427882c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.071",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.07Z",
            "@version": "1",
            "message": "Portfolio link: cb3d47e2-cf41-4d7e-8dbd-00a70ff7ad9d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "f10dff5f57f4316d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.067Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "f10dff5f57f4316d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.063",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.062Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.063",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.063Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.063",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.063Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e2bed454-71c0-4120-a323-69d571e49d1c, timestamp=2025-02-02T18:15:21.336Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f4705c1a-fe72-40af-ad41-5e82aa34f171, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336Z, failureReason=, associateAccountUpdate=Account(accountId=6a9b25ca-a4e9-49e3-8360-1809a942c7e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "8e7f1ec229cc3426",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:52:29.062",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:52:29.062Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b191e42c-ee17-495d-b334-483d511a1fe4' and payload='{\"event_id\":\"f70889b8-a50c-48f6-a53e-e1e1d4729657_2\",\"timestamp\":\"2025-02-02T18:15:17.927629Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:54.215",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:54.215Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:54.215",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:54.215Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:54.210",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:54.21Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:48.209",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:48.209Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:48.204",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:48.204Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:45.203",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:45.203Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:45.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:45.197Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:45.198",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:45.198Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2f2c6a1710402beb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:45.197",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:45.197Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='5bf64cfa-773b-44c5-bd61-b4b0baf5efd8' and payload='{\"event_id\":\"ef19f9fa-112d-42b8-971c-05413cb098fe_2\",\"timestamp\":\"2025-02-02T18:11:59.881603Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:45.197",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:45.197Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:29.062",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:29.062Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:29.062",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:29.062Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:29.057",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:29.057Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:23.057",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:23.057Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:23.052",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:23.052Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.052",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.051Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.049",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.048Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657_2, timestamp=2025-02-02T18:15:17.927629Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.927629Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9844e678bd4ace26",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.046",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.046Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f70889b8-a50c-48f6-a53e-e1e1d4729657, timestamp=2025-02-02T18:15:17.602876Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b191e42c-ee17-495d-b334-483d511a1fe4, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.602876Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.602876Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ab3e5f55-1184-ff6c-f6ff-333857d589f7), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "dc3e9df7f6e84ded",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.044",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.044Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f_2, timestamp=2025-02-02T18:12:01.317155Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:01.317155Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "44ee66e2d0fab968",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.041",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.041Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=889f0f60-d910-4e92-9221-a1d6c880885f, timestamp=2025-02-02T18:12:00.880962Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=6fc8622c-0522-4dc3-b0fd-c7faca26a8f3, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:00.880962Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.880962Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "f028af18f3b51a96",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.040",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.039Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='cec1527d-c63d-4dec-9848-789f29b87d85' and payload='{\"event_id\":\"3da00001-379f-4e93-9e01-d1b7fd676102_2\",\"timestamp\":\"2025-02-02T18:12:00.307645Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.040",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.04Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:51:20.040",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:51:20.04Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43495",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43495\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:45.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:45.196Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=33d8db92-d83c-4dc2-bd11-ae051c36181f)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:45.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:45.196Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=33d8db92-d83c-4dc2-bd11-ae051c36181f)\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:45.191",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:45.191Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:39.190",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:39.19Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9cf358f2-a8a8-4a1d-a3fa-fe32f39f27d7)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:39.185",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:39.185Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.184",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.184Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=ec8d2f1c-9ff2-4b90-b2d5-d71d948dd80d)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.181",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.181Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a3f0bd0b35541803",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.180",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.18Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102, timestamp=2025-02-02T18:11:59.701332Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.701332Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "9179dd2493074f14",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.178",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.178Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe, timestamp=2025-02-02T18:11:59.668207Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.668207Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "53fc120f7f1f1f05",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.177",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.177Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3, timestamp=2025-02-02T18:11:59.689817Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.689817Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "0a3460b51a8f40eb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.175Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305, timestamp=2025-02-02T18:11:59.650040Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.650040Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "fe1c81c3198c6226",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.174",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.174Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"70559344-7c19-4286-a211-d8cae654a656\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "a551f7151f3d3be9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.171",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.171Z",
            "@version": "1",
            "message": "Portfolio link: 01270845-0a75-44fe-95ef-f73387579e82 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a551f7151f3d3be9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.167",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.167Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a551f7151f3d3be9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.165",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.165Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5, timestamp=2025-02-02T18:18:35.872620Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872620Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "fd9f323c3d77d801",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.156Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.157Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:36.151",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:36.151Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:30.151",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:30.15Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:30.146",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:30.145Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:27.145",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:27.145Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:27.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:27.141Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "82cbe738161351d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:27.134",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:27.134Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:27.134",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:27.134Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:27.129",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:27.129Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:21.128",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:21.128Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:21.123",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:21.123Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:20.039",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:20.039Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:20.039",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:20.039Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:20.035",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:20.034Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.122",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.122Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.120",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.12Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "30dd171527f6e841",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.118Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f, timestamp=2025-02-02T18:18:32.270727Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270727Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "c0468aa9081a13a1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.117",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.117Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d, timestamp=2025-02-02T18:18:32.276619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.276619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "3c7e6bbd7a244c05",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.116",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.116Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"ed277ca9-d065-45b7-830b-60074891b8a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "5deaa0914760f524",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.113",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.113Z",
            "@version": "1",
            "message": "Portfolio link: 010a602e-be78-4289-a896-658fae32d5af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "5deaa0914760f524",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.111",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.111Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "5deaa0914760f524",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.110",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.11Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"977948eb-2a17-4a9b-add0-2051070eecd4\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c280820e2b95c9a5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.107",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.107Z",
            "@version": "1",
            "message": "Portfolio link: 8a8bf865-b994-4326-bf09-62f6bedc92f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "c280820e2b95c9a5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.105",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.105Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "c280820e2b95c9a5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.103",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.103Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131, timestamp=2025-02-02T18:15:21.313774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313774Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "34aa8c409fca8261",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.101",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.101Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a, timestamp=2025-02-02T18:15:21.335038Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.335038Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "36a094b7c0422932",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.094",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.094Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.094",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.094Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:18.089",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:18.089Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:14.034",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:14.034Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:14.029",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:14.029Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:12.088",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:12.088Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:12.084",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:12.083Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:11.029",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:11.029Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:11.024",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:11.023Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:11.024",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:11.024Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "9fc1e10758ad7ccd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:11.023",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:11.023Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='8b248740-9b17-4c13-9109-228b737b9c4e' and payload='{\"event_id\":\"302da870-018a-41d5-9a75-43192cb155a3_2\",\"timestamp\":\"2025-02-02T18:12:00.183405Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:11.023",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:11.023Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:09.083",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:09.083Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:09.080",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:09.08Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "6de7e2e53ccc466e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:09.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:09.074Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:09.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:09.074Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:09.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:09.069Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:03.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:03.068Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:03.063",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:03.063Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:00.063",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:00.062Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:50:00.053",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:50:00.052Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7c67f904547f5c6b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:59.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:59.005Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:59.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:59.005Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:59.000",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:59Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:52.999",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:52.999Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:52.994",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:52.994Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.993",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.993Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.990",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.99Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7a51eb5074bee974",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.989",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.988Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746, timestamp=2025-02-02T18:15:17.666778Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.666778Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a78b8854ef942d15",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.987",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.987Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c, timestamp=2025-02-02T18:15:17.645211Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.645211Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a2ce8ac294f15b6d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.985",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.985Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"5204f800-b9b9-4d39-9090-612432f352cb\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "3719b69004bf7e98",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.985",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.985Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7, timestamp=2025-02-02T18:15:17.626378Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.626378Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "253183e39f19f6de",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.982",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.982Z",
            "@version": "1",
            "message": "Portfolio link: e06b17b7-b739-0167-ee56-496786a1515d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "3719b69004bf7e98",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.979",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.979Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "3719b69004bf7e98",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.978",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.977Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c, timestamp=2025-02-02T18:12:03.180258Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.180258Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "2703ab2faefda349",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.977",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.977Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "60930860d09260f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.974",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.974Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "60930860d09260f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.971",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.971Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "60930860d09260f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.970",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.97Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "19fff43f945d1389",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.967",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.967Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "19fff43f945d1389",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.965",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.965Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "19fff43f945d1389",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.964",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.964Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c8267e736bf790a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.961",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.961Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "c8267e736bf790a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.958",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.958Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "c8267e736bf790a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.956",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.956Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "8727cfd016026a90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.955",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.955Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "a0758d429bcbf072",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.954",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.954Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "659f3292f9e0c221",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.952",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.952Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "159db8e8ed12e0b3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.950",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.949Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "7870ea9e891d4ef5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.949",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.948Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "4b6403dcdc038362",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.949",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.949Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd36b95cf7f2a1a8d4ff71661d3be",
            "spanId": "4b6403dcdc038362",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:49.949",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:49.949Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:28.487",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:28.486Z",
            "@version": "1",
            "message": "Portfolio link: 0476eca2-34c1-4945-93e3-33dbb8b35db8 set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fda583fe617442eab418e8b0b98be",
            "spanId": "ef7cdc01b06b38c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:28.331",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:28.331Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=e8997912-4343-4217-a30f-267737c20f84, customerId=1704890040478171)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-7",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fda583fe617442eab418e8b0b98be",
            "spanId": "ef7cdc01b06b38c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:28.324",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:28.323Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: e8997912-4343-4217-a30f-267737c20f84, errorId=7b524648-568b-4b38-993c-a2c4dae2b6f3)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-6",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fda583fe617442eab418e8b0b98be",
            "spanId": "2c5585b62ce83d9d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:21.384",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:21.384Z",
            "@version": "1",
            "message": "Portfolio link: b2111ed1-8c3a-4c3b-bc43-e996d71543f1 set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fda5047b992f5b4d1f4404e465154",
            "spanId": "488f6711421b5aa9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:20.938",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:20.937Z",
            "@version": "1",
            "message": "[Producer clientId=producer-1] Resetting the last seen epoch of partition deposit-portfolio-service.portfolio-link.snapshot.v2-0 to 112 since the associated topicId changed from null to h2CV0iFTQAif70jMHd0YAw",
            "logger_name": "org.apache.kafka.clients.Metadata",
            "thread_name": "kafka-producer-network-thread | producer-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:20.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:20.353Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=add20b62-73b3-4842-b740-951d9ec6078c, customerId=1707795396595165)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fda5047b992f5b4d1f4404e465154",
            "spanId": "488f6711421b5aa9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:20.324",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:20.323Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: add20b62-73b3-4842-b740-951d9ec6078c, errorId=69e0b57a-6429-4367-b573-a034acf441d0)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-4",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fda5047b992f5b4d1f4404e465154",
            "spanId": "380d6b1deb289811",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:11.022",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:11.021Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:11.021",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:11.021Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:11.017",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:11.017Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:05.016",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:05.016Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:05.012",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:05.012Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:02.011",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:02.011Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:02.006",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:02.005Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "c6e8104256435cab",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:02.006",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:02.006Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:02.006",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:02.006Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "d8719b6ae6de9366",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 20:49:02.005",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T20:49:02.005Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='ed3d439c-c03e-41bd-9f80-3f465806665e' and payload='{\"event_id\":\"0e1bf68f-2a84-4542-9845-3980e502d305_2\",\"timestamp\":\"2025-02-02T18:11:59.886359Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fd23fdcc98bc139be79abe7de2b44",
            "spanId": "c6e8104256435cab",
            "bc": "deposits"
        }
    }
]