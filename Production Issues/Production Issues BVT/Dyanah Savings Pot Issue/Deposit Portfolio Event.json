[
    {
        "@timestamp": "2025-02-02 21:44:38.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:38.59Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9eb35a6a-5e3b-4ef2-bfe5-db44d916aac2)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:38.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:38.59Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=9eb35a6a-5e3b-4ef2-bfe5-db44d916aac2)\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:38.586",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:38.585Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:32.585",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:32.585Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=0a1eb259-693c-4e77-a8dc-685be53ca804)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:32.581",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:32.581Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.577Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102, timestamp=2025-02-02T18:11:59.701332Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.701332Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2efa6d5c32b00539",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.578Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.580",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.58Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=70438a03-8081-4faf-a055-279881948799)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "229487359d4e8781",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.576Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe, timestamp=2025-02-02T18:11:59.668207Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.668207Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7208c8909b801c2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.575Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3, timestamp=2025-02-02T18:11:59.689817Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.689817Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7f095b39cae345f7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.574",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.574Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"70559344-7c19-4286-a211-d8cae654a656\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "6958f8a905eaa328",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.574",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.574Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305, timestamp=2025-02-02T18:11:59.650040Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.650040Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "45d70469e3f751c6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.571",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.571Z",
            "@version": "1",
            "message": "Portfolio link: 01270845-0a75-44fe-95ef-f73387579e82 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6958f8a905eaa328",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.568Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6958f8a905eaa328",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.567",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.567Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5, timestamp=2025-02-02T18:18:35.872620Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872620Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "96bf780259f23e66",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.56Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.560",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.56Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:29.555",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:29.555Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:23.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:23.554Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:23.551",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:23.55Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.550",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.55Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.547",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.547Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d71f6c69452643c8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.54Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.540",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.54Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:20.536",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:20.536Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.646",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.645Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.645",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.645Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.641",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.64Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.535",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.535Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:14.531",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:14.531Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.527Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f, timestamp=2025-02-02T18:18:32.270727Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270727Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "99e64561c2d418ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.528Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.554",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.53Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8b9790f481c02ad5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.515Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131, timestamp=2025-02-02T18:15:21.313774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313774Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "256a8c53346037ab",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.516Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9c0b54b5b3ad292",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.518Z",
            "@version": "1",
            "message": "Portfolio link: 8a8bf865-b994-4326-bf09-62f6bedc92f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9c0b54b5b3ad292",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.521Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"977948eb-2a17-4a9b-add0-2051070eecd4\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f9c0b54b5b3ad292",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.521Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "453a4b93ded3a26c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.524Z",
            "@version": "1",
            "message": "Portfolio link: 010a602e-be78-4289-a896-658fae32d5af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "453a4b93ded3a26c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.526Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"ed277ca9-d065-45b7-830b-60074891b8a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "453a4b93ded3a26c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.527",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.526Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d, timestamp=2025-02-02T18:18:32.276619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.276619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "96cbc4ea64602c67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.515",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.513Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a, timestamp=2025-02-02T18:15:21.335038Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.335038Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "db156e9bb0440f78",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.507",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.506Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.507",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.507Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:11.502",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:11.502Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:08.640",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:08.64Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:08.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:08.635Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.635",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.635Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.627Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='8b248740-9b17-4c13-9109-228b737b9c4e' and payload='{\"event_id\":\"302da870-018a-41d5-9a75-43192cb155a3_2\",\"timestamp\":\"2025-02-02T18:12:00.183405Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.628Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.628Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43494",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43494\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.628",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.628Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102_2, timestamp=2025-02-02T18:12:00.307645Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.307645Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0818b13a9aaeca2f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.501",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.501Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:05.497",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:05.497Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.497",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.496Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.494",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.494Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d2741d4fdd0706a8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.485",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.484Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.485",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.484Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:44:02.481",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:44:02.48Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:56.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:56.479Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:56.476",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:56.475Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.475",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.475Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.472",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.472Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d15fa09d054ce03b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.454Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.454",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.454Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:53.450",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:53.45Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:47.449",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:47.449Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:47.445",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:47.445Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.444",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.444Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.442",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.442Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "822b6f8873b1181e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.441",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.441Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c, timestamp=2025-02-02T18:15:17.645211Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.645211Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "3ef25ec49a316086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.441",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.441Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746, timestamp=2025-02-02T18:15:17.666778Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.666778Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "96d5e8c21474fd17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.440",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.439Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7, timestamp=2025-02-02T18:15:17.626378Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.626378Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4b57993c82fccaf7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.439Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"5204f800-b9b9-4d39-9090-612432f352cb\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2fbb7e9c85f62521",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.436",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.436Z",
            "@version": "1",
            "message": "Portfolio link: e06b17b7-b739-0167-ee56-496786a1515d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2fbb7e9c85f62521",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.434Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2fbb7e9c85f62521",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.433",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.433Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c, timestamp=2025-02-02T18:12:03.180258Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.180258Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4fd44a90bc9d130b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.432",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.432Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ec9a8782c4f87de0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.429Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9a8782c4f87de0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.427",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.426Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d4d8a894f16244fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.427",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.427Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9a8782c4f87de0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.424",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.423Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d4d8a894f16244fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.421",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.421Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d4d8a894f16244fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.420",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.42Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8d93335318261865",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.417Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8d93335318261865",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.413",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.413Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8d93335318261865",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.412",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.411Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71777f310104f242",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.411",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.41Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "908aac51b0a8287f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.410",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.41Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0d75555e748d1316",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.408",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.408Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf413324941b8d43",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.406",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.406Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.406",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.406Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c176777887d4f143",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.405",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.405Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:44.405",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:44.405Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:05.627",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:05.626Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:05.626",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:05.626Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:43:05.619",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:43:05.619Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:59.618",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:59.618Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:59.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:59.614Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.613",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.613Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.606",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.605Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3_2, timestamp=2025-02-02T18:12:00.183405Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:12:00.183405Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b570b6d4c1587d3b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.605",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.604Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.605",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.605Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43493",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43493\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:56.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:56.604Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='ed3d439c-c03e-41bd-9f80-3f465806665e' and payload='{\"event_id\":\"0e1bf68f-2a84-4542-9845-3980e502d305_2\",\"timestamp\":\"2025-02-02T18:11:59.886359Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:44.404",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:44.404Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:44.404",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:44.404Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:44.400",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:44.4Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:38.399",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:38.399Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:38.395",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:38.394Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.394",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.394Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.389",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.388Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.389",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.389Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4d0b98940a6ece44",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.388",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.388Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70e9cad0-6b40-4d02-9e76-af99e07a2e93' and payload='{\"event_id\":\"7f00e547-7515-463e-9513-a8e5c260fd3d_2\",\"timestamp\":\"2025-02-02T18:18:32.379670Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:42:35.388",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:42:35.388Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:56.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:56.603Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:56.604",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:56.604Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:56.599",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:56.599Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:50.599",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:50.598Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:50.594",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:50.594Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.594",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.594Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.590",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305_2, timestamp=2025-02-02T18:11:59.886359Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.886359Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e44008df73606b8f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='5bf64cfa-773b-44c5-bd61-b4b0baf5efd8' and payload='{\"event_id\":\"ef19f9fa-112d-42b8-971c-05413cb098fe_2\",\"timestamp\":\"2025-02-02T18:11:59.881603Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 9:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:47.589",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:47.589Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-9@43492",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-9@43492\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:35.386",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:35.386Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:35.386",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:35.386Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:35.381",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:35.381Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:29.381",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:29.38Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:29.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:29.376Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.376Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.374Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4ac18977501962e2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.373",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.373Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401, timestamp=2025-02-02T18:18:32.217467Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217467Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c7c3c1566d8f9f06",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.372",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.372Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d, timestamp=2025-02-02T18:18:32.217415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217415Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9d0eb2ecc2d035dc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.371",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.371Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8f6b552e7016114a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.368",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.368Z",
            "@version": "1",
            "message": "Portfolio link: d6fd8cd7-c240-4c9a-89d6-5cbe5272e654 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8f6b552e7016114a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.366",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.366Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"6d855749-902b-4731-ac3b-5d16c8496476\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "5ca1d2ca16bb061a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.366",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.366Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8f6b552e7016114a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.363",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.363Z",
            "@version": "1",
            "message": "Portfolio link: b40da19d-1a3b-4d77-8540-9bf1e923fa5f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5ca1d2ca16bb061a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.359",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.359Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125_2, timestamp=2025-02-02T18:15:21.564236Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.564236Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5ca1d2ca16bb061a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.358",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.358Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19, timestamp=2025-02-02T18:15:21.355537Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.355537Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "840fbdeb29d67183",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.357",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.357Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125, timestamp=2025-02-02T18:15:21.329310Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329310Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6f07c7f2d1f8d3b5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.356",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.356Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36_2, timestamp=2025-02-02T18:15:19.336071Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.336071Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c32638394cd9f545",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.354",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.353Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36, timestamp=2025-02-02T18:15:18.859365Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.859365Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0581cafe4332d560",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.352Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='426606eb-8509-4077-8372-7c0a8a3956b5' and payload='{\"event_id\":\"730b71fb-e333-4a1b-b909-fa384032c0c9_2\",\"timestamp\":\"2025-02-02T18:15:18.430034Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.353Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:41:26.353",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:41:26.353Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:47.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:47.587Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=a1efa90e-56f3-4a19-a97e-5df0941476d5)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:47.587",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:47.587Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=a1efa90e-56f3-4a19-a97e-5df0941476d5)\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:47.583",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:47.583Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:41.582",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:41.582Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=52cd4d4e-21c8-4ec2-bfc1-fbf9d5b27e17)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:41.578",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:41.578Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.577",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.577Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: NotFoundException(name=No portfolio link in database, message=No portfolio link with cbsPortfolioLinkId: 094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c, errorId=7712070d-4805-4bf4-a3f7-083fbf1eb21c)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.575",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.575Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe_2, timestamp=2025-02-02T18:11:59.881603Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.881603Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bb0f12a9ac91fa30",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.573",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.572Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3da00001-379f-4e93-9e01-d1b7fd676102, timestamp=2025-02-02T18:11:59.701332Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cec1527d-c63d-4dec-9848-789f29b87d85, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.701332Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.701332Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=04843943-53c6-212b-5159-6fbbef9428d6), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "e25f470326d1b9ea",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.570",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.57Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ef19f9fa-112d-42b8-971c-05413cb098fe, timestamp=2025-02-02T18:11:59.668207Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bf64cfa-773b-44c5-bd61-b4b0baf5efd8, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.668207Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.668207Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=094be4b2-7c2f-3de4-a7ba-ff1738f4aa2c), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "cd2c179e406326ad",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.568",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.568Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=302da870-018a-41d5-9a75-43192cb155a3, timestamp=2025-02-02T18:11:59.689817Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8b248740-9b17-4c13-9109-228b737b9c4e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.689817Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.689817Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=ddbb5c87-6d26-654c-77b4-5157a1e9ffa1), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f772755f88c2e91",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.566",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.566Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"70559344-7c19-4286-a211-d8cae654a656\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ea0d81bac08473f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.566",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.566Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0e1bf68f-2a84-4542-9845-3980e502d305, timestamp=2025-02-02T18:11:59.650040Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed3d439c-c03e-41bd-9f80-3f465806665e, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:11:59.650040Z, lastStatusUpdateTimestamp=2025-02-02T18:11:59.650040Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8edb35c9-fe7f-1d6d-d9f0-70809003318b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "029fec498d259220",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.565",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.565Z",
            "@version": "1",
            "message": "Portfolio link: 01270845-0a75-44fe-95ef-f73387579e82 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ea0d81bac08473f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.549Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.553Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.553Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.56Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5, timestamp=2025-02-02T18:18:35.872620Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.872620Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "493a5a62ffe57f1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:38.564",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:38.562Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3b751e70-afde-4fe1-b9ef-3faa3322f5e5_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=90f35ce7-7e13-4b6f-8b82-2c0ae3347b36, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.872620Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=70559344-7c19-4286-a211-d8cae654a656), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ea0d81bac08473f9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:32.548",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:32.548Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:32.544",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:32.544Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.544",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.543Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.541",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.541Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d_2, timestamp=2025-02-02T18:18:33.064367Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.064367Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b2679090793e3718",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.533",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.533Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.533",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.533Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:29.529",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:29.529Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:26.352",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:26.351Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:26.352",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:26.351Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:26.347",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:26.347Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:23.528",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:23.528Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:23.524",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:23.524Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.524",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.524Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.521",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.521Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f_2, timestamp=2025-02-02T18:18:32.809729Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.809729Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "670d7127ce5c603b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.519",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.519Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b9f1d57b-b446-4430-9236-dc766d294f8f, timestamp=2025-02-02T18:18:32.270727Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=07828670-9f6c-4e20-94b1-bc09b3db5b3a, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270727Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270727Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=0297d5a3-5cf3-b62c-ac93-9d0ece9ce63f), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4a3be3bc3920353b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.517Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"ed277ca9-d065-45b7-830b-60074891b8a1\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c0e3a361900de837",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.517",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.517Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=6172c3a3-7fdc-42a9-b421-aedf61d4528d, timestamp=2025-02-02T18:18:32.276619Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a3dc7cb4-e85a-4012-a925-2ae46889d6f2, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.276619Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.276619Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=da9a8e67-be20-2058-8747-77e6ad117b5e), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b69c28df65fc632f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.516",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.516Z",
            "@version": "1",
            "message": "Portfolio link: 010a602e-be78-4289-a896-658fae32d5af set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c0e3a361900de837",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.514",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.513Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"977948eb-2a17-4a9b-add0-2051070eecd4\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c16420fb9697a09d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.514",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.514Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c0e3a361900de837",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.512",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.512Z",
            "@version": "1",
            "message": "Portfolio link: 8a8bf865-b994-4326-bf09-62f6bedc92f0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c16420fb9697a09d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.510",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.51Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c16420fb9697a09d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.508",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.508Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=80f9bfda-a04e-4408-b31b-2c054aa5e131, timestamp=2025-02-02T18:15:21.313774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=3e760cbf-4e15-4c78-88a5-10342625bea7, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.313774Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.313774Z, failureReason=, associateAccountUpdate=Account(accountId=977948eb-2a17-4a9b-add0-2051070eecd4), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "37ccbb134b656c4d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.506",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.506Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=74c858a5-cb89-4a29-a3fa-c3706a38063a, timestamp=2025-02-02T18:15:21.335038Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0064e0b3-10b8-4a0c-9751-02115a36a8fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.335038Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.335038Z, failureReason=, associateAccountUpdate=Account(accountId=ed277ca9-d065-45b7-830b-60074891b8a1), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "aeb778343ef37e81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.499Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.499",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.499Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.495",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.494Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.346",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.346Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:20.342",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:20.341Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.341",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.341Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.336",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.335Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.336",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.336Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec5e37cbdb06fe42",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.335",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.335Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='db56dc6b-5dbb-4e40-abd0-9dced38150fd' and payload='{\"event_id\":\"e04cfe2a-743c-4828-9070-1db0a12573cd_2\",\"timestamp\":\"2025-02-02T18:15:18.083039Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:17.335",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:17.335Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:14.494",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:14.494Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:14.490",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:14.49Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.489",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.489Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.487",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.487Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746_2, timestamp=2025-02-02T18:15:18.470097Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.470097Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "941895618c5c17b4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.48Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.480",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.48Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:11.476",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:11.476Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:05.475",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:05.475Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:05.471",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:05.471Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.471",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.471Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.468",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.468Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7_2, timestamp=2025-02-02T18:15:18.042708Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.042708Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "a69c13111e4491d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.453",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.453Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.453",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.453Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:40:02.449",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:40:02.448Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:56.448",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:56.448Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:56.444",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:56.444Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.443",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.443Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.441",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.441Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c_2, timestamp=2025-02-02T18:15:17.922064Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.922064Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "8286b089ce400c17",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.439",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.439Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fe94d0f5-506c-4867-9ce8-b8ec33393746, timestamp=2025-02-02T18:15:17.666778Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a27cfa9a-2049-4cd6-b720-ad664db45eba, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.666778Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.666778Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1c3cb262-08ab-020b-7e5e-5d377b027f6d), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "77869f772c037ceb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.437",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.437Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=fdde98d1-41c8-4507-9ec1-51154d6bef1c, timestamp=2025-02-02T18:15:17.645211Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=111294da-644f-4cd0-89b2-7fd8417b1b79, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.645211Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.645211Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=d43d3407-cd35-3456-b961-83ead055b365), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7031d116fff19f4e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.435",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.435Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"5204f800-b9b9-4d39-9090-612432f352cb\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "00d37576a3c57086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.435",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.435Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11e5fa3a-9cd0-420a-86fc-3e06f88270a7, timestamp=2025-02-02T18:15:17.626378Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ed74435e-9e57-4d54-a093-74eafd6d5ec0, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.626378Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.626378Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=1fe484be-52e2-59da-5f91-1d024cbdbb0b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed08ca64abb35fae",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.434",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.433Z",
            "@version": "1",
            "message": "Portfolio link: e06b17b7-b739-0167-ee56-496786a1515d set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "00d37576a3c57086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.431",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.431Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "00d37576a3c57086",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.429",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.429Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3f058938-768f-4e76-8a4d-fe21e1cfe89c, timestamp=2025-02-02T18:12:03.180258Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5bd3ac5f-14ff-4e88-a944-dec1a7c9c9e2, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.180258Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.180258Z, failureReason=, associateAccountUpdate=Account(accountId=5204f800-b9b9-4d39-9090-612432f352cb), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "f8500dc63115ea16",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.426",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.426Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=88ffceda-b315-4041-8ae9-6c93ba4b072d_2, timestamp=2025-02-02T18:18:33.857002Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=337c658d-102e-4583-9114-bb4e9f86f1e6, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.457015Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.857002Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "949a7f1d97e7c767",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.423",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.423Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42562",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.423",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.423Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=88ffceda-b315-4041-8ae9-6c93ba4b072d, timestamp=2025-02-02T18:18:33.457015Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=337c658d-102e-4583-9114-bb4e9f86f1e6, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.457015Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.457015Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "d53f4c3f4693039e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.422Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='86a85338-cf5d-46f8-89cf-757e65b8935d' and payload='{\"event_id\":\"22b15dce-fb0b-40eb-bd6c-bef64648f90f_2\",\"timestamp\":\"2025-02-02T18:18:32.726303Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Partition 1 of topic vault.core_api.v1.plans.plan_update.events.DLT with partition count 1 is not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:53.422Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42562",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Partition 1 of topic vault.core_api.v1.plans.plan_update.events.DLT with partition count 1 is not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Partition 1 of topic vault.core_api.v1.plans.plan_update.events.DLT with partition count 1 is not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:17.333",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:17.333Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:17.333",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:17.333Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:17.328Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:11.328",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:11.328Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:11.323",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:11.323Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.323",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.322Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.313",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.313Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "524838c5898d22ce",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.312",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.311Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.312",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.312Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:39:08.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:39:08.311Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf' and payload='{\"event_id\":\"cf95cbd9-3d29-4bd7-94a6-06f003261996_2\",\"timestamp\":\"2025-02-02T18:15:17.816588Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:53.422Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:53.422",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:53.422Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:53.418",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:53.418Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:47.417",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:47.417Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:47.413",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:47.413Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.413",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.412Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.408",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.407Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42561",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.408",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.408Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f_2, timestamp=2025-02-02T18:18:32.726303Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.726303Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "466110f4bc0e0b63",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.407Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='541e94a7-7641-4be4-89ce-778b4d17c6f1' and payload='{\"event_id\":\"9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2\",\"timestamp\":\"2025-02-02T18:18:32.684563Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:44.407Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42561",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:08.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:08.311Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:08.311",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:08.311Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:08.307",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:08.306Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:02.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:02.306Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:38:02.302",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:38:02.301Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.301",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.301Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.298Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996_2, timestamp=2025-02-02T18:15:17.816588Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.816588Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a5e0ba84dc8d99fc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.297",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.297Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9, timestamp=2025-02-02T18:15:17.663083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.663083Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "9c7c95e78bf08794",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.296",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.296Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd, timestamp=2025-02-02T18:15:17.632413Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.632413Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "12dda0bb44acfd12",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.295",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.295Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=cf95cbd9-3d29-4bd7-94a6-06f003261996, timestamp=2025-02-02T18:15:17.653597Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.653597Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.653597Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=8595e12f-0569-f33d-7cc3-4c6a738b5c6b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "09bad4294860dbac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.294",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.294Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"6a543854-abc3-4604-a4a6-3ce3ed17e540\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "1212d2753fd503d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.292",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.291Z",
            "@version": "1",
            "message": "Portfolio link: df5f254f-4e48-44a4-988d-d3404218ac58 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "1212d2753fd503d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.289Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "1212d2753fd503d1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.288Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"e8997912-4343-4217-a30f-267737c20f84\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "e652db0af1a61af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.288Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7d8e36be-ed04-4277-83d4-9a76285db7e5, timestamp=2025-02-02T18:12:03.175090Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2c727cb2-60b8-4ccc-9e15-7bb5bd6c86f3, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.175090Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.175090Z, failureReason=, associateAccountUpdate=Account(accountId=6a543854-abc3-4604-a4a6-3ce3ed17e540), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "493251c88e049333",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.285",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.285Z",
            "@version": "1",
            "message": "Portfolio link: 0476eca2-34c1-4945-93e3-33dbb8b35db8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e652db0af1a61af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.283",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.283Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1_2, timestamp=2025-02-02T20:49:28.710444Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.710444Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e652db0af1a61af2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.282",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.282Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"272f2b99-38d9-45be-ba67-d5fb9d9f88c0\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "2cd764e0ea1c7634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.282",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.282Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9291d99a-b4fc-423c-a070-4a2454e406a1, timestamp=2025-02-02T20:49:28.467773Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=822c5be8-a4cb-2234-c933-60f3b5ad6fb5, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T20:49:28.467773Z, lastStatusUpdateTimestamp=2025-02-02T20:49:28.467773Z, failureReason=, associateAccountUpdate=Account(accountId=e8997912-4343-4217-a30f-267737c20f84), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "3bf589c1581f1c61",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.279",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.279Z",
            "@version": "1",
            "message": "Portfolio link: 5fc8d7a4-f280-4f8f-a63a-85f60a1add38 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2cd764e0ea1c7634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.277Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"9790d47d-51cc-46ba-9966-9bef635f9bb9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "f9d844f6806ac412",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.277Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2cd764e0ea1c7634",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.274",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.274Z",
            "@version": "1",
            "message": "Portfolio link: 3fc46cbb-75b9-42a1-9852-3e05ff6531c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9d844f6806ac412",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.272",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.272Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"55af6aea-2424-4cb6-a7e0-dc8ebdceff23\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "97fe96ef916e64da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.272",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.272Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f9d844f6806ac412",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.269",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.269Z",
            "@version": "1",
            "message": "Portfolio link: 9ff492fc-605b-4132-b5a2-7ecc1c685b27 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "97fe96ef916e64da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.266",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.266Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "97fe96ef916e64da",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.265",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.265Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4d1cbd0e-1849-41a7-a50d-4202a8de05c0, timestamp=2025-02-02T18:18:35.903081Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=f1406179-bc8a-440e-ac2c-4d7df140f956, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.903081Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.903081Z, failureReason=, associateAccountUpdate=Account(accountId=272f2b99-38d9-45be-ba67-d5fb9d9f88c0), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "2c5091987f3a5022",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.264",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.263Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bfd9fc08-97df-4831-8fed-7d525abe009e, timestamp=2025-02-02T18:18:35.856574Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2a7e7c5d-9590-44e3-acf8-c077f6e20962, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.856574Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.856574Z, failureReason=, associateAccountUpdate=Account(accountId=9790d47d-51cc-46ba-9966-9bef635f9bb9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "54bda1d1ddf10f65",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.26Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d7400648-0588-46be-ae7f-91e0385a8291' and payload='{\"event_id\":\"58a87771-a9fb-462f-b149-600751268491_2\",\"timestamp\":\"2025-02-02T18:18:32.462144Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 3:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.261Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.261Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-3@43024",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-3@43024\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:59.261",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:59.261Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=02322092-a60d-4331-b8c9-de20c4959454, timestamp=2025-02-02T18:18:35.859684Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=43c0b025-b5b5-4c33-9f28-0a1b67b76847, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.859684Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.859684Z, failureReason=, associateAccountUpdate=Account(accountId=55af6aea-2424-4cb6-a7e0-dc8ebdceff23), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "48b06455fc1ad452",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:44.407Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:44.407",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:44.407Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:44.403",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:44.402Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:38.402",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:38.402Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:38.398",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:38.398Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.397",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.397Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.393",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.392Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42560",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.393",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.393Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca_2, timestamp=2025-02-02T18:18:32.684563Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.684563Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7fca6cd910d822ac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.392Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70c7edfd-90d3-4b19-bb4f-0cae17925aaa' and payload='{\"event_id\":\"7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2\",\"timestamp\":\"2025-02-02T18:18:32.541566Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:35.392Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42560",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:02.833",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:02.833Z",
            "@version": "1",
            "message": "Portfolio link: fddd007e-9591-489c-aaa6-d2c0105b01de set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe57e09b98606db2bba61fd93bf04",
            "spanId": "9c6fe7446c29ebc7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:02.639",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:02.638Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=2234d244-93c3-48c6-a847-50bf7f225502, customerId=1707355016613363)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-5",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe57e09b98606db2bba61fd93bf04",
            "spanId": "9c6fe7446c29ebc7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:37:02.633",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:37:02.632Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: 2234d244-93c3-48c6-a847-50bf7f225502, errorId=e1e6cfdd-1f8a-4115-8f44-1fd9aa83e17f)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-4",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe57e09b98606db2bba61fd93bf04",
            "spanId": "15cfe5dda8b4c9c2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:59.259",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:59.259Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:59.259",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:59.259Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:59.255",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:59.254Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:53.254",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:53.254Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:53.250",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:53.249Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.249",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.249Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.247",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.247Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491_2, timestamp=2025-02-02T18:18:32.462144Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.462144Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "405dbea285bce4ff",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.246Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"d1297a12-3da8-4373-9579-8f4b8fe16864\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "06bd5848ace1b12f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.246Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=58a87771-a9fb-462f-b149-600751268491, timestamp=2025-02-02T18:18:32.218115Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7400648-0588-46be-ae7f-91e0385a8291, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.218115Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.218115Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b13427e1-ca35-0b31-b808-765c21d645dd), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9ed9d11bb360e1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.243",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.243Z",
            "@version": "1",
            "message": "Portfolio link: 54cc8449-1230-4d55-8c9f-5654ea0645f6 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "06bd5848ace1b12f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.240",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.24Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0f82be80-d38e-40c9-b4d7-e55f5dcb95bb_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=815a84bc-b7e0-41cc-8268-0811a41ad267, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.907672Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=d1297a12-3da8-4373-9579-8f4b8fe16864), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "06bd5848ace1b12f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.239",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.239Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0f82be80-d38e-40c9-b4d7-e55f5dcb95bb, timestamp=2025-02-02T18:18:35.907672Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=815a84bc-b7e0-41cc-8268-0811a41ad267, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.907672Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.907672Z, failureReason=, associateAccountUpdate=Account(accountId=d1297a12-3da8-4373-9579-8f4b8fe16864), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8d27af6c06c6bf90",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.238",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.238Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38598d65-7b1d-406c-9244-cea98b8da8eb_2, timestamp=2025-02-02T18:18:33.718459Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8c5d4e47-2d73-4878-a679-4aa05c03cc84, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.446239Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.718459Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "cc49e9251f85f745",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.236Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=38598d65-7b1d-406c-9244-cea98b8da8eb, timestamp=2025-02-02T18:18:33.446239Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8c5d4e47-2d73-4878-a679-4aa05c03cc84, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.446239Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.446239Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "21a16bf8b710af82",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.235Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='2349a394-ce38-41af-8248-8803d766e3ad' and payload='{\"event_id\":\"a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2\",\"timestamp\":\"2025-02-02T18:18:33.026227Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.235Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:50.235",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:50.235Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43499",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43499\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:35.392Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:35.392",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:35.392Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:35.388",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:35.387Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:29.387",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:29.387Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:29.383",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:29.383Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.382",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.382Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.380",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.38Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd_2, timestamp=2025-02-02T18:18:32.541566Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.541566Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3f639b1cbf8e2b6e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.378",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.378Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=22b15dce-fb0b-40eb-bd6c-bef64648f90f, timestamp=2025-02-02T18:18:32.257670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=86a85338-cf5d-46f8-89cf-757e65b8935d, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.257670Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.257670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=08502131-0ce2-5417-f2b8-5f9c57da881b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b88754d4a761f6a3",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.376",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.376Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=9969f84b-0b88-4f20-8384-ef8f2bfe8fca, timestamp=2025-02-02T18:18:32.256509Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=541e94a7-7641-4be4-89ce-778b4d17c6f1, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.256509Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.256509Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=74914a5b-eee3-c3aa-ec5c-21bc3cffae4b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "38028d00f9981bfc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.373Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"90e97238-bdd9-4ec0-90ae-5f447a41dc03\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "d35b2ea6ffab02b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.374",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.374Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7cd63c82-6e09-47e8-8b88-f80942aa3fdd, timestamp=2025-02-02T18:18:32.235636Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70c7edfd-90d3-4b19-bb4f-0cae17925aaa, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.235636Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.235636Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=f072ed99-d8a4-47d0-12b7-11165d9691aa), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "86f7ff833e109fdc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.373",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.373Z",
            "@version": "1",
            "message": "Portfolio link: f5fe584b-a89c-4341-b9a5-301a0639a495 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "d35b2ea6ffab02b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.370",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.37Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"79d77109-a518-41e1-8463-aa9460e12a86\", \"accountId\": \"6a1c1cc2-1dca-4969-b38a-a33258686d9c\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "adfc37a80eaf26c7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.370",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.37Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2156f8a8-35fb-4eb8-93cf-68b9a2752b91_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5b340218-b738-416f-b23d-7882012e09f9, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.327863Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=90e97238-bdd9-4ec0-90ae-5f447a41dc03), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "d35b2ea6ffab02b9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.369",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.369Z",
            "@version": "1",
            "message": "Portfolio link: da7379e5-bcfd-4ab0-984c-ee16303d519b set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "adfc37a80eaf26c7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.367",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.367Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2d185a4b-997c-45bc-a4fe-901c08b79616_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=175814f0-af7a-40f4-a3f0-56518bea217f, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.357805Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6a1c1cc2-1dca-4969-b38a-a33258686d9c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "adfc37a80eaf26c7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.366",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.366Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"46edb274-c9f3-402c-a17d-d88855b8cb49\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "7702129621a9a85d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.365",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.365Z",
            "@version": "1",
            "message": "Portfolio link: 249025a3-088b-457c-bcb8-101b20ddc6b8 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7702129621a9a85d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.363",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.362Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=123e8ee2-ec7e-4f47-a35f-5bab3e8bbab5_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=acd5ed35-b25f-4568-ac18-e951d0c4bd97, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.338350Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=46edb274-c9f3-402c-a17d-d88855b8cb49), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7702129621a9a85d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.360",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.36Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=123e8ee2-ec7e-4f47-a35f-5bab3e8bbab5, timestamp=2025-02-02T18:15:21.338350Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=acd5ed35-b25f-4568-ac18-e951d0c4bd97, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.338350Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.338350Z, failureReason=, associateAccountUpdate=Account(accountId=46edb274-c9f3-402c-a17d-d88855b8cb49), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "6453bbb8a7d3beac",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.358",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.358Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2156f8a8-35fb-4eb8-93cf-68b9a2752b91, timestamp=2025-02-02T18:15:21.327863Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5b340218-b738-416f-b23d-7882012e09f9, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.327863Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.327863Z, failureReason=, associateAccountUpdate=Account(accountId=90e97238-bdd9-4ec0-90ae-5f447a41dc03), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "830bdd8524c512c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.356",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.356Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2d185a4b-997c-45bc-a4fe-901c08b79616, timestamp=2025-02-02T18:15:21.357805Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=175814f0-af7a-40f4-a3f0-56518bea217f, planId=79d77109-a518-41e1-8463-aa9460e12a86, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.357805Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.357805Z, failureReason=, associateAccountUpdate=Account(accountId=6a1c1cc2-1dca-4969-b38a-a33258686d9c), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "efa61f5b0ba1db3f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.354",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.354Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4da7b786-67b2-4c29-b81d-b2f12d97d2f7_2, timestamp=2025-02-02T18:15:19.151091Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=ca3ce62f-da0c-4169-aca4-5417ed8e1b53, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.861548Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.151091Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bf03d62a1e97639e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.351",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.351Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4da7b786-67b2-4c29-b81d-b2f12d97d2f7, timestamp=2025-02-02T18:15:18.861548Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=ca3ce62f-da0c-4169-aca4-5417ed8e1b53, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.861548Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.861548Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "4d9994ef5fdff7b1",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.350",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.35Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='e654e2b6-4bd4-463d-acdd-ae00ff189961' and payload='{\"event_id\":\"366fe816-e754-4073-8f06-15b5b39bfaf9_2\",\"timestamp\":\"2025-02-02T18:15:17.775418Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 1:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.350",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.35Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:36:26.350",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:36:26.35Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-1@42548",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-1@42548\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:50.234Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:50.234Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:50.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:50.23Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:44.229",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:44.229Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:44.225",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:44.225Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.224",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.224Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.220",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.219Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43498",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.220",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.22Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969_2, timestamp=2025-02-02T18:18:33.026227Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.026227Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a4d6edba47c1b44f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.219Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='7b50b27c-32dd-460a-862e-692858e38ac6' and payload='{\"event_id\":\"11f0b2f0-4e04-498e-b6b7-726dc05b6450_2\",\"timestamp\":\"2025-02-02T18:18:32.941730Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:41.219Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43498",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:26.349",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:26.349Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:26.349",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:26.349Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:26.344",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:26.344Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:20.344",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:20.344Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:20.340",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:20.339Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.339",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.339Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.337",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.336Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9_2, timestamp=2025-02-02T18:15:17.775418Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.775418Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "036234ac5c13f642",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.335",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.334Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=366fe816-e754-4073-8f06-15b5b39bfaf9, timestamp=2025-02-02T18:15:17.629756Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e654e2b6-4bd4-463d-acdd-ae00ff189961, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.629756Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.629756Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=abf06fcd-1db3-9b5d-eccf-8443cc458713), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b4675f79f0c8ecbd",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.334",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.333Z",
            "@version": "1",
            "message": "Portfolio link: e0806fb4-5c0d-4997-b4a1-f63777729e62 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "44a663662934736e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.334",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.334Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"629ae079-797a-4b68-ae42-658eafbdec66\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "44a663662934736e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.331",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.331Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5497c814-b4ba-4b38-b8b5-fdd657ae0087_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=dbc6dae3-b379-4f09-a1ae-7159b58c6e36, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.203364Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=629ae079-797a-4b68-ae42-658eafbdec66), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "44a663662934736e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.329Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"f72d73a7-3ca6-4b5a-a13b-44700349aec9\", \"accountId\": \"18a024f6-cc28-4d83-9b95-75b0ae654425\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c7a181a7a866c17d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.329",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.329Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=5497c814-b4ba-4b38-b8b5-fdd657ae0087, timestamp=2025-02-02T18:12:03.203364Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=dbc6dae3-b379-4f09-a1ae-7159b58c6e36, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.203364Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.203364Z, failureReason=, associateAccountUpdate=Account(accountId=629ae079-797a-4b68-ae42-658eafbdec66), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "35bacb94592dc35d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.328",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.328Z",
            "@version": "1",
            "message": "Portfolio link: ee9f56e8-f805-4141-a94e-59001c49f6c0 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c7a181a7a866c17d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.326",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.326Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba_2, timestamp=2025-02-02T18:18:36.166465Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.166465Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c7a181a7a866c17d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.325",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.325Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"ba302842-2ea0-434b-ada2-9ff1b95a8dcf\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "c727bc77bfaaae18",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.324",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.324Z",
            "@version": "1",
            "message": "Portfolio link: e2f77d9f-41f6-46ed-bda4-8f9ef123068c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c727bc77bfaaae18",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.322",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.322Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"01e5e504-bac2-4148-af83-7cf1a6daff0e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "bc9193665eace996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.322",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.322Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c727bc77bfaaae18",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.321",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.32Z",
            "@version": "1",
            "message": "Portfolio link: 807bdcda-7cf5-4f63-af21-f56da3f3f525 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bc9193665eace996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.318",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.318Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a_2, timestamp=2025-02-02T18:18:36.063206Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.063206Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "bc9193665eace996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.316",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.316Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=f12f53e1-ec30-469f-a413-dc3294c42bba, timestamp=2025-02-02T18:18:35.911368Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7c9b73a1-f427-4730-9906-f0b9a4ba6873, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.911368Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.911368Z, failureReason=, associateAccountUpdate=Account(accountId=18a024f6-cc28-4d83-9b95-75b0ae654425), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7d75faf6b8c9d6fe",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.314",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.314Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=4ef49af4-2d0f-4c6b-a25e-4b61e4b1e74a, timestamp=2025-02-02T18:18:35.846370Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=91c271e0-ac6a-4802-b561-c097419b0221, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.846370Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.846370Z, failureReason=, associateAccountUpdate=Account(accountId=01e5e504-bac2-4148-af83-7cf1a6daff0e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "54dc4c4629efc4a0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.312",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.311Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e5c599e0-cdcd-4f4d-80b9-f73f705c7591, timestamp=2025-02-02T18:18:35.819504Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d7190a0a-9c43-490b-a7c4-d3d64c868155, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.819504Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.819504Z, failureReason=, associateAccountUpdate=Account(accountId=ba302842-2ea0-434b-ada2-9ff1b95a8dcf), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "043e472d4ecfbd89",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.309",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.309Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73_2, timestamp=2025-02-02T18:18:33.707814Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.707814Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "43f853779a45c3ba",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.306",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.305Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c54c0c63-b27c-45b8-a219-8a3b240c6e73, timestamp=2025-02-02T18:18:33.456898Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=81d9606a-13be-4dd9-aed4-d853960fa846, planId=f72d73a7-3ca6-4b5a-a13b-44700349aec9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:33.456898Z, lastStatusUpdateTimestamp=2025-02-02T18:18:33.456898Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "943c1f31b6170d2a",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.304Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='76f914a8-c644-4fea-80af-6ef510f710e3' and payload='{\"event_id\":\"353c204f-f34c-47ec-9d60-63db1137f401_2\",\"timestamp\":\"2025-02-02T18:18:32.417890Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.305Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:35:17.305",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:35:17.305Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43049",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43049\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:41.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:41.217Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:41.217",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:41.217Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:41.213",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:41.213Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:35.212",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:35.212Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:35.208",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:35.208Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.207",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.207Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.203",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.203Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450_2, timestamp=2025-02-02T18:18:32.941730Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.941730Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eff9715667d90d4b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.202Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef' and payload='{\"event_id\":\"24e37ff4-d62f-4342-88a9-3ad378b58154_2\",\"timestamp\":\"2025-02-02T18:18:32.502774Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.202Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:32.202",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:32.202Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43497",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43497\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:17.303",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:17.303Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:17.303",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:17.303Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:17.299",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:17.299Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:11.298",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:11.298Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:11.294",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:11.294Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.293",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.293Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.289",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.289Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401_2, timestamp=2025-02-02T18:18:32.417890Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.417890Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ed9c9971c68d4d67",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.288Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='70e9cad0-6b40-4d02-9e76-af99e07a2e93' and payload='{\"event_id\":\"7f00e547-7515-463e-9513-a8e5c260fd3d_2\",\"timestamp\":\"2025-02-02T18:18:32.379670Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.288Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:34:08.288",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:34:08.288Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43048",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43048\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:32.200",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:32.2Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:32.200",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:32.2Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:32.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:32.196Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:26.196",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:26.195Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:26.192",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:26.191Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.191",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.191Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.189",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.189Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154_2, timestamp=2025-02-02T18:18:32.502774Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.502774Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "39285d7bb3668427",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.188",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.188Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=a2d82b90-96a6-47b6-9ce0-6c461e7e0969, timestamp=2025-02-02T18:18:32.270360Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=2349a394-ce38-41af-8248-8803d766e3ad, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.270360Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.270360Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=a89a96dc-fd2b-f518-7e9b-caa1fd7bf0c9), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c2eadf6ea1c5151b",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.187",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.187Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=11f0b2f0-4e04-498e-b6b7-726dc05b6450, timestamp=2025-02-02T18:18:32.255540Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=7b50b27c-32dd-460a-862e-692858e38ac6, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.255540Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.255540Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=48e31347-f6e3-f444-769a-56140b7d1459), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "5014aa9ab02a83c0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.186",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.186Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=24e37ff4-d62f-4342-88a9-3ad378b58154, timestamp=2025-02-02T18:18:32.228598Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=9fb97b09-9e7e-43a0-8f4e-8dee4217a4ef, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.228598Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.228598Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=e14a0fca-1e7c-06ad-6f2d-d3a3ebdc6528), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "6d74a6ff6b1aeb85",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.185",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.185Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"b4ef4e64-d69e-4409-ab83-338be2467388\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "8637ecb42ba30ac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.182",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.182Z",
            "@version": "1",
            "message": "Portfolio link: f8ee0aea-c920-4a1c-9d33-add0ee2f9a94 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8637ecb42ba30ac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.180",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.18Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"cceaa826-e5f4-481e-9590-bba5821db2d9\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ec9668b64cf4748f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.180",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.18Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3bbb5cf3-b25c-4459-8b95-463d7a098dec_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=bcd4904d-df8f-4a78-b880-6a55f2d194a3, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.330362Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=b4ef4e64-d69e-4409-ab83-338be2467388), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "8637ecb42ba30ac4",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.177",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.177Z",
            "@version": "1",
            "message": "Portfolio link: 9d92f26e-8ac2-4b56-9e6b-ddde972ad0de set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9668b64cf4748f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.175Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"6f5a4361-5410-467d-a08d-efd981005ffc\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "530e50b83d2c54b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.175",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.175Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ed0c46cf-d6f9-4478-b47f-afc8f5390995_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0039ffd2-ac99-47b3-9a68-dd2d7dae0550, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.345190Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=cceaa826-e5f4-481e-9590-bba5821db2d9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ec9668b64cf4748f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.172",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.172Z",
            "@version": "1",
            "message": "Portfolio link: a5779740-4e89-4b88-a39e-b36e2daee94c set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "530e50b83d2c54b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.168",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.168Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=545d58e3-8a5d-478b-bddf-0b2d9b0705d9_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=0e27362e-8b0e-4e81-84a1-cac2d40027bf, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.336628Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=6f5a4361-5410-467d-a08d-efd981005ffc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "530e50b83d2c54b2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.161",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.161Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ed0c46cf-d6f9-4478-b47f-afc8f5390995, timestamp=2025-02-02T18:15:21.345190Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0039ffd2-ac99-47b3-9a68-dd2d7dae0550, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.345190Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.345190Z, failureReason=, associateAccountUpdate=Account(accountId=cceaa826-e5f4-481e-9590-bba5821db2d9), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "28cc4baea5b19996",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.160",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.16Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=3bbb5cf3-b25c-4459-8b95-463d7a098dec, timestamp=2025-02-02T18:15:21.330362Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=bcd4904d-df8f-4a78-b880-6a55f2d194a3, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.330362Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.330362Z, failureReason=, associateAccountUpdate=Account(accountId=b4ef4e64-d69e-4409-ab83-338be2467388), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "7e664647e593459c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.157Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.158Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43487",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43487\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.158",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.158Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=545d58e3-8a5d-478b-bddf-0b2d9b0705d9, timestamp=2025-02-02T18:15:21.336628Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=0e27362e-8b0e-4e81-84a1-cac2d40027bf, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.336628Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.336628Z, failureReason=, associateAccountUpdate=Account(accountId=6f5a4361-5410-467d-a08d-efd981005ffc), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "f07d2ec621b486dc",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:23.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:23.157Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='b6a444bf-c3b3-482c-a72f-5f429889cb04' and payload='{\"event_id\":\"2f3a644b-f371-4473-9876-44c8670ec1d5_2\",\"timestamp\":\"2025-02-02T18:15:17.928662Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:08.287",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:08.287Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:08.287",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:08.287Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:08.283",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:08.282Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:07.733",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:07.733Z",
            "@version": "1",
            "message": "Portfolio link: eb86c76f-df83-40d8-817d-574d65e7ad10 set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe493e6ac3915baeb0d683f9ccf29",
            "spanId": "5b9b389563547dd8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:07.614",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:07.614Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=feb64eca-f996-4d9a-b6c9-0947d797807d, customerId=1730699089744064)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-2",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe493e6ac3915baeb0d683f9ccf29",
            "spanId": "5b9b389563547dd8",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:07.607",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:07.607Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: feb64eca-f996-4d9a-b6c9-0947d797807d, errorId=e42cd024-6954-4bac-aee5-b3b518751b3d)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-1",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe493e6ac3915baeb0d683f9ccf29",
            "spanId": "7431e826792b5aeb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:02.282",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:02.282Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:33:02.278",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:33:02.277Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.277",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.277Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.275",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.275Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d_2, timestamp=2025-02-02T18:18:32.379670Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.379670Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "21f8cdadf9ffa7b0",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.273",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.273Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=353c204f-f34c-47ec-9d60-63db1137f401, timestamp=2025-02-02T18:18:32.217467Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=76f914a8-c644-4fea-80af-6ef510f710e3, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217467Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217467Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=07344926-25c7-4f64-cd43-c2653278b0b3), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0e394e019116d85e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.271",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.271Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=7f00e547-7515-463e-9513-a8e5c260fd3d, timestamp=2025-02-02T18:18:32.217415Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=70e9cad0-6b40-4d02-9e76-af99e07a2e93, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:32.217415Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.217415Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=b39900d2-390d-919f-0d57-1c467e79f4fb), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "09e0ca86c577c728",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.270",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.27Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"0d98c140-0c31-4a2a-886d-88b874a368b9\", \"accountId\": \"eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0dfe07a862bfd964",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.269",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.269Z",
            "@version": "1",
            "message": "Portfolio link: d6fd8cd7-c240-4c9a-89d6-5cbe5272e654 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0dfe07a862bfd964",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.267",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.267Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"40a7957c-d5cf-4321-8bd1-2ddedb32b6a7\", \"accountId\": \"6d855749-902b-4731-ac3b-5d16c8496476\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "ad2d883e7ae9a577",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.267",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.267Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19_2, timestamp=2025-02-02T18:15:21.693762Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.693762Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "0dfe07a862bfd964",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.265",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.265Z",
            "@version": "1",
            "message": "Portfolio link: b40da19d-1a3b-4d77-8540-9bf1e923fa5f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ad2d883e7ae9a577",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.262",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.262Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125_2, timestamp=2025-02-02T18:15:21.564236Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.564236Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "ad2d883e7ae9a577",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.260",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.26Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=b6eeefea-0358-457d-a248-1f9d3c321e19, timestamp=2025-02-02T18:15:21.355537Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a47680df-5eab-4395-a9ce-deed7da3533e, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.355537Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.355537Z, failureReason=, associateAccountUpdate=Account(accountId=eb5ba1ee-cbea-48b9-befa-9f9f98fcdc41), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "2db4c33686d88184",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.258",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.258Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=35bcdb96-0874-44f7-9482-d5bd86f7d125, timestamp=2025-02-02T18:15:21.329310Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a1f610b6-f1b3-4edc-9d7d-cd46fa566edd, planId=40a7957c-d5cf-4321-8bd1-2ddedb32b6a7, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:21.329310Z, lastStatusUpdateTimestamp=2025-02-02T18:15:21.329310Z, failureReason=, associateAccountUpdate=Account(accountId=6d855749-902b-4731-ac3b-5d16c8496476), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "95257c423c85ade9",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.256",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.256Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36_2, timestamp=2025-02-02T18:15:19.336071Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:19.336071Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "7312ae67ed5dd8cb",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.253",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.253Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=c8e446fc-c5b1-452e-8c85-688858522b36, timestamp=2025-02-02T18:15:18.859365Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=baf6773a-414b-46ce-965f-4fccf028313b, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:18.859365Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.859365Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate={supervisor_contract_version_id=ce9d0668-71eb-46eb-ab78-134be040b9f8, schedule_migration_type=SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES}, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "3841fd617f9db558",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.252Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='426606eb-8509-4077-8372-7c0a8a3956b5' and payload='{\"event_id\":\"730b71fb-e333-4a1b-b909-fa384032c0c9_2\",\"timestamp\":\"2025-02-02T18:15:18.430034Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.252Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:59.252",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:59.252Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43039",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43039\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:57.281",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:57.281Z",
            "@version": "1",
            "message": "Portfolio link: a29c5503-d68a-4479-925f-e5d16a70887c set to status INITIATED",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe4893d3ac10ca67b52efc1861a94",
            "spanId": "b628655c21bad235",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:57.089",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:57.089Z",
            "@version": "1",
            "message": "Received AccountLinkRequest(accountId=29a2654f-ede4-48ae-af48-91707580224b, customerId=1707355016613363)",
            "logger_name": "com.arbm.digibank.controller.PortfolioController",
            "thread_name": "http-nio-8080-exec-10",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe4893d3ac10ca67b52efc1861a94",
            "spanId": "b628655c21bad235",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:57.080",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:57.08Z",
            "@version": "1",
            "message": "Handle NotFoundException: NotFoundException(name=No portfolio link in database, message=No portfolio link for account with id: 29a2654f-ede4-48ae-af48-91707580224b, errorId=997db015-b68f-48d5-a162-4060034fc91a)",
            "logger_name": "com.arbm.digibank.rest.error.ErrorHandler",
            "thread_name": "http-nio-8080-exec-9",
            "level": "WARN",
            "level_value": 30000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe4893d3ac10ca67b52efc1861a94",
            "spanId": "71e3dee2ea6f6af5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:23.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:23.157Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:23.157",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:23.157Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:23.153",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:23.153Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:17.152",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:17.152Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:17.147",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:17.147Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.146",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.146Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.142",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.142Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5_2, timestamp=2025-02-02T18:15:17.928662Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.928662Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "bf9da3594bd86016",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.141Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='a9437d08-d10f-422b-8de1-3196e564d72d' and payload='{\"event_id\":\"0afded4b-b775-4e49-813c-f9deb13795e2_2\",\"timestamp\":\"2025-02-02T18:15:17.883170Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 4:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.141Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:32:14.141",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:32:14.141Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-4@43486",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-4@43486\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:59.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:59.251Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:59.251",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:59.251Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:59.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:59.246Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:53.246",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:53.246Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:53.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:53.241Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.241",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.241Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.235Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='db56dc6b-5dbb-4e40-abd0-9dced38150fd' and payload='{\"event_id\":\"e04cfe2a-743c-4828-9070-1db0a12573cd_2\",\"timestamp\":\"2025-02-02T18:15:18.083039Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.236Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.236Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43038",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43038\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:50.236",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:50.236Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=730b71fb-e333-4a1b-b909-fa384032c0c9_2, timestamp=2025-02-02T18:15:18.430034Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=426606eb-8509-4077-8372-7c0a8a3956b5, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.663083Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.430034Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=70116b59-259d-3150-2cf7-7ae029410fae), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "9653059e71152b1e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:14.139",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:14.139Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:14.139",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:14.139Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:14.135",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:14.135Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:08.134",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:08.134Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:08.130",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:08.13Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.129",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.129Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.127",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.127Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2_2, timestamp=2025-02-02T18:15:17.883170Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.883170Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ab006fe5311269fa",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.126",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.126Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=0afded4b-b775-4e49-813c-f9deb13795e2, timestamp=2025-02-02T18:15:17.601860Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=a9437d08-d10f-422b-8de1-3196e564d72d, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.601860Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.601860Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=344b9481-12b2-4514-50a3-aaf16403af78), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "e5b77717cbcc2937",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.124",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.124Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"1d60989c-7f0e-4d9d-96f6-ef0415e93616\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "57cf97ef1b3e48a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.124",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.124Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=2f3a644b-f371-4473-9876-44c8670ec1d5, timestamp=2025-02-02T18:15:17.657282Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=b6a444bf-c3b3-482c-a72f-5f429889cb04, planId=eeeda3ac-aa84-465e-b260-449bafaa3d7e, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:15:17.657282Z, lastStatusUpdateTimestamp=2025-02-02T18:15:17.657282Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=3a22788f-9459-c38b-a2d9-3d79078c717b), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "4a7cb52cdedf0040",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.121",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.121Z",
            "@version": "1",
            "message": "Portfolio link: 5728fe2e-95b2-4833-be9f-6541f355d1e3 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "57cf97ef1b3e48a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.119Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"5f9c8f0f-369b-43f7-a738-c07a8a652ea7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "71bef686352ae62d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.119",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.119Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "57cf97ef1b3e48a7",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.116",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.116Z",
            "@version": "1",
            "message": "Portfolio link: 1ca8affe-59f5-49ae-ae28-0ee32f13198f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71bef686352ae62d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.114Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"6cb9a02d-02c8-ae76-9781-3d96faec8f9d\", \"accountId\": \"824e1725-77fc-4930-abce-4e8868d460e7\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "711cb8e299024d8e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.114",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.114Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34_2, timestamp=2025-02-02T18:12:03.434549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.434549Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "71bef686352ae62d",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.111",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.111Z",
            "@version": "1",
            "message": "Portfolio link: 8c32dde8-bb51-422e-bfe6-6152660e31ee set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "711cb8e299024d8e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.109",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.109Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"e5d317f6-f145-4a21-80f4-a891b09c0e56\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "0f0359e4ad1dd029",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.109",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.109Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "711cb8e299024d8e",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.106",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.106Z",
            "@version": "1",
            "message": "Portfolio link: d70537b0-7064-4d2d-b57f-444e61d78ac1 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0f0359e4ad1dd029",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.104Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"04d26069-20e6-40d6-8bbb-8768db6f20a9\", \"accountId\": \"b0fbe6ac-0e51-4150-bb96-adf8c4751d6e\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "caa6c42b95beb600",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.104",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.104Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801_2, timestamp=2025-02-02T18:12:03.385783Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.385783Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "0f0359e4ad1dd029",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.101",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.101Z",
            "@version": "1",
            "message": "Portfolio link: 4472bf40-b488-4b48-93cb-9f64b8c13ab4 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "caa6c42b95beb600",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.098",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.098Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d_2, timestamp=2025-02-02T18:12:03.309330Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.309330Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "caa6c42b95beb600",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.097",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.097Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8c569d45-2992-4229-860a-4307da110d34, timestamp=2025-02-02T18:12:03.193924Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=92977295-5c2b-4fb1-86fb-20a7e0f2e224, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.193924Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.193924Z, failureReason=, associateAccountUpdate=Account(accountId=5f9c8f0f-369b-43f7-a738-c07a8a652ea7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "88bea47699f1067f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.096",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.095Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ca9c5d95-89f4-4eb6-a66d-c3152da36d0b, timestamp=2025-02-02T18:12:03.131381Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=e3a2302e-118b-41d6-bf0a-6889fcf1741c, planId=6cb9a02d-02c8-ae76-9781-3d96faec8f9d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.131381Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.131381Z, failureReason=, associateAccountUpdate=Account(accountId=824e1725-77fc-4930-abce-4e8868d460e7), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "dc928d4ff09ceed5",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.096",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.096Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=381d3365-64c1-4b8b-9ae4-481f8cbdc801, timestamp=2025-02-02T18:12:03.138203Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=cb8cda27-e047-484f-a7f6-43f903105d0d, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.138203Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.138203Z, failureReason=, associateAccountUpdate=Account(accountId=e5d317f6-f145-4a21-80f4-a891b09c0e56), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "eb702543e4447b4c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.095",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.095Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=ffc67a0d-5ebf-43d7-938c-ce7bcfa47918, timestamp=2025-02-02T18:12:03.146816Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=18dde768-b11d-4f2e-9406-a2a722f48054, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.146816Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.146816Z, failureReason=, associateAccountUpdate=Account(accountId=1d60989c-7f0e-4d9d-96f6-ef0415e93616), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "ba076edbcd3a8225",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.094",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.094Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=81f48ebb-abbc-4811-8520-e12eb72f464d, timestamp=2025-02-02T18:12:03.117591Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8af00732-ebd1-48e6-b32d-6c03bf6bf62b, planId=04d26069-20e6-40d6-8bbb-8768db6f20a9, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:12:03.117591Z, lastStatusUpdateTimestamp=2025-02-02T18:12:03.117591Z, failureReason=, associateAccountUpdate=Account(accountId=b0fbe6ac-0e51-4150-bb96-adf8c4751d6e), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "814fb1b6185f2c02",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.093",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.093Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"06cc0375-c266-490f-ad40-5e12f0571d26\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "609322b9cb048fc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.090",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.09Z",
            "@version": "1",
            "message": "Portfolio link: 33403511-4e61-4a50-94d6-9b36efab630f set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "609322b9cb048fc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.088",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.088Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8591b6fc-8575-45c9-a964-8043e739fee8_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=8d71aa9e-6e8c-4323-956b-682b7648cddd, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.893290Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=06cc0375-c266-490f-ad40-5e12f0571d26), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "609322b9cb048fc2",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.087",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.087Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"23bcdb37-b50e-4186-80e3-cca38d138d32\", \"accountId\": \"1668a546-3d04-435c-8c94-5daa902b5c82\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "569d8f54066fae81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.084",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.084Z",
            "@version": "1",
            "message": "Portfolio link: 6e370d26-6e50-4764-bb3a-aafcf9a35e00 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "569d8f54066fae81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.081",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.081Z",
            "@version": "1",
            "message": "Produced {\"portfolioId\": \"cd406be2-0d54-4a92-b907-407a342d3d5d\", \"accountId\": \"92580375-a276-4b8c-beab-f7ff5e85e0de\"}",
            "logger_name": "com.arbm.digibank.service.PortfolioService",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "spanId": "61a108c816013c52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.081",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.081Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bbd90dd3-a90c-41b2-84c1-d93f152c6820_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d572356c-db21-4199-9f63-20d909a8eccc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.884335Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=1668a546-3d04-435c-8c94-5daa902b5c82), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "569d8f54066fae81",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.078",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.077Z",
            "@version": "1",
            "message": "Portfolio link: f5a7bbd0-e4f1-4393-a626-6235cfd4ed32 set to status ACTIVE",
            "logger_name": "com.arbm.digibank.model.PortfolioLink",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "61a108c816013c52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.074",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.073Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=753ae715-e1d4-4315-aaea-90efd5b63c70_2, timestamp=2025-02-02T18:18:36.139083Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=5c4d5964-138a-4786-9e29-b76435e421a9, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:35.890502Z, lastStatusUpdateTimestamp=2025-02-02T18:18:36.139083Z, failureReason=, associateAccountUpdate=Account(accountId=92580375-a276-4b8c-beab-f7ff5e85e0de), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "61a108c816013c52",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.072",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.072Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=753ae715-e1d4-4315-aaea-90efd5b63c70, timestamp=2025-02-02T18:18:35.890502Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=5c4d5964-138a-4786-9e29-b76435e421a9, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.890502Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.890502Z, failureReason=, associateAccountUpdate=Account(accountId=92580375-a276-4b8c-beab-f7ff5e85e0de), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "10c9b4f3f51db732",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.071",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.071Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=8591b6fc-8575-45c9-a964-8043e739fee8, timestamp=2025-02-02T18:18:35.893290Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=8d71aa9e-6e8c-4323-956b-682b7648cddd, planId=cd406be2-0d54-4a92-b907-407a342d3d5d, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.893290Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.893290Z, failureReason=, associateAccountUpdate=Account(accountId=06cc0375-c266-490f-ad40-5e12f0571d26), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "d8599c14108b0d60",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.069",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.069Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=bbd90dd3-a90c-41b2-84c1-d93f152c6820, timestamp=2025-02-02T18:18:35.884335Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=0, planUpdateUpdated=null, planUpdateCreated=PlanUpdateCreatedEvent(planUpdate=PlanUpdate(id=d572356c-db21-4199-9f63-20d909a8eccc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_PENDING_EXECUTION, createTimestamp=2025-02-02T18:18:35.884335Z, lastStatusUpdateTimestamp=2025-02-02T18:18:35.884335Z, failureReason=, associateAccountUpdate=Account(accountId=1668a546-3d04-435c-8c94-5daa902b5c82), disassociateAccountUpdate=null, activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null)))",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "c7b032c13b260a32",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.068",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.067Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='d5c8a047-11d6-4cfe-9cea-a982cf166adc' and payload='{\"event_id\":\"d9e6e00a-7e91-4c3d-8b49-694f8c057915_2\",\"timestamp\":\"2025-02-02T18:18:32.983549Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 5:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.068",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.068Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:31:05.068",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:31:05.068Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-5@42981",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-5@42981\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$ab76c214.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:50.234Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:50.234",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:50.234Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:50.230",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:50.23Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:44.229",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:44.229Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:44.225",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:44.225Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.224",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.224Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.220",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.22Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=e04cfe2a-743c-4828-9070-1db0a12573cd_2, timestamp=2025-02-02T18:15:18.083039Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=db56dc6b-5dbb-4e40-abd0-9dced38150fd, planId=0d98c140-0c31-4a2a-886d-88b874a368b9, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:15:17.632413Z, lastStatusUpdateTimestamp=2025-02-02T18:15:18.083039Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=41abc1e2-d8dd-a7c8-e8e3-78b06472a996), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "b501b39fecca883c",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.219Z",
            "@version": "1",
            "message": "Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.DeadLetterPublishingRecoverer",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.KafkaException: Send failed; nested exception is org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n\tat org.springframework.kafka.core.KafkaTemplate.doSend(KafkaTemplate.java:666)\n\tat org.springframework.kafka.core.KafkaTemplate.send(KafkaTemplate.java:429)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:647)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.219",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.219Z",
            "@version": "1",
            "message": "Error occured while processing: vault.core_api.v1.plans.plan_update.events-2@43037",
            "logger_name": "org.springframework.kafka.listener.CommonLoggingErrorHandler",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed; nested exception is org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2723)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2689)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2649)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2576)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2456)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2334)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2005)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1375)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1366)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1257)\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: org.springframework.kafka.KafkaException: Dead-letter publication to vault.core_api.v1.plans.plan_update.events.DLTfailed for: vault.core_api.v1.plans.plan_update.events-2@43037\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.verifySendResult(DeadLetterPublishingRecoverer.java:676)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.publish(DeadLetterPublishingRecoverer.java:659)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.send(DeadLetterPublishingRecoverer.java:555)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.sendOrThrow(DeadLetterPublishingRecoverer.java:520)\n\tat org.springframework.kafka.listener.DeadLetterPublishingRecoverer.accept(DeadLetterPublishingRecoverer.java:492)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:38)\n\tat org.springframework.kafka.listener.ConsumerAwareRecordRecoverer.accept(ConsumerAwareRecordRecoverer.java:32)\n\tat com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration.vaultKafkaListenerContainerFactory$lambda$1$lambda$0(VaultKafkaConsumerConfiguration.kt:65)\n\tat org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)\n\tat org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)\n\tat org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:255)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:119)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter.onMessage(RetryingMessageListenerAdapter.java:42)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$FastClassBySpringCGLIB$$a98718f8.invoke(<generated>)\n\tat org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.cloud.sleuth.brave.instrument.messaging.MessageListenerMethodInterceptor.invoke(MessageListenerMethodInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)\n\tat org.springframework.kafka.listener.adapter.RetryingMessageListenerAdapter$$EnhancerBySpringCGLIB$$50f413f2.onMessage(<generated>)\n\tat org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2669)\n\t... 11 common frames omitted\n",
            "springAppName": "deposit-portfolio-service",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:41.218",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:41.218Z",
            "@version": "1",
            "message": "Exception thrown when sending a message with key='c8d3c2f4-c1d1-438a-a44a-1a6f27b45ebf' and payload='{\"event_id\":\"cf95cbd9-3d29-4bd7-94a6-06f003261996_2\",\"timestamp\":\"2025-02-02T18:15:17.816588Z\",\"vaul...' to topic vault.core_api.v1.plans.plan_update.events.DLT and partition 2:",
            "logger_name": "org.springframework.kafka.support.LoggingProducerListener",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "stack_trace": "org.apache.kafka.common.errors.TimeoutException: Topic vault.core_api.v1.plans.plan_update.events.DLT not present in metadata after 60000 ms.\n",
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fdee1dbc9f54e100325ac6eb8f761",
            "spanId": "c5a32b77bf6565f6",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:05.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:05.066Z",
            "@version": "1",
            "message": "Exception occurred during plan update event handling: com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:05.067",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:05.067Z",
            "@version": "1",
            "message": "Exceeded retry attempts: 3\nwith cause: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.arbm.digibank.processor.PlanUpdateEventProcessor.consumeVaultPlanUpdateEvent(com.arbm.digibank.tm.model.coreapi.plan.update.PlanUpdateEvent)' threw exception; nested exception is com.arbm.digibank.exception.ChangePortfolioLinkStatusException: Illegal attempt to change portfolio link status ACTIVE to DELETED\nSending failed message to DLT",
            "logger_name": "com.arbm.digibank.tm.kafka.configuration.VaultKafkaConsumerConfiguration",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "ERROR",
            "level_value": 40000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    },
    {
        "@timestamp": "2025-02-02 21:30:05.061",
        "kubernetes.container_name": "deposit-portfolio-service",
        "logBody": {
            "@timestamp": "2025-02-02T21:30:05.061Z",
            "@version": "1",
            "message": "Received event: PlanUpdateEvent(eventId=d9e6e00a-7e91-4c3d-8b49-694f8c057915_2, timestamp=2025-02-02T18:18:32.983549Z, vaultVersion=VaultVersion(major=4, minor=6, patch=28, label=), changeId=1, planUpdateUpdated=PlanUpdateUpdatedEvent(planUpdate=PlanUpdate(id=d5c8a047-11d6-4cfe-9cea-a982cf166adc, planId=23bcdb37-b50e-4186-80e3-cca38d138d32, jobId=, status=PLAN_UPDATE_STATUS_COMPLETED, createTimestamp=2025-02-02T18:18:32.259307Z, lastStatusUpdateTimestamp=2025-02-02T18:18:32.983549Z, failureReason=, associateAccountUpdate=null, disassociateAccountUpdate=AccountPlanAssociation(accountPlanAssocId=def5bc93-7374-8fa3-92a0-47598a9b7658), activationUpdate=null, supervisorContractVersionUpdate=null, closureUpdate=null), updateMask=FieldMask(paths=[status, last_status_update_timestamp])), planUpdateCreated=null)",
            "logger_name": "com.arbm.digibank.processor.PlanUpdateEventProcessor",
            "thread_name": "org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1",
            "level": "INFO",
            "level_value": 20000,
            "springAppName": "deposit-portfolio-service",
            "traceId": "679fe00d5fe6bcc92b759183c0c9b9c6",
            "spanId": "a29988718d10f00f",
            "bc": "deposits"
        }
    }
]